!function n(o,a,i){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(l)return l(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}r=a[t]={exports:{}},o[t][0].call(r.exports,function(e){return u(o[t][1][e]||e)},r,r.exports,n,o,a,i)}return a[t].exports}for(var l="function"==typeof require&&require,e=0;e<i.length;e++)u(i[e]);return u}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"NIL",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(r,"parse",{enumerable:!0,get:function(){return d.default}}),Object.defineProperty(r,"stringify",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(r,"v1",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(r,"v3",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(r,"v4",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(r,"v5",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(r,"validate",{enumerable:!0,get:function(){return s.default}}),Object.defineProperty(r,"version",{enumerable:!0,get:function(){return l.default}});var n=f(e("./v1.js")),o=f(e("./v3.js")),a=f(e("./v4.js")),i=f(e("./v5.js")),u=f(e("./nil.js")),l=f(e("./version.js")),s=f(e("./validate.js")),c=f(e("./stringify.js")),d=f(e("./parse.js"));function f(e){return e&&e.__esModule?e:{default:e}}},{"./nil.js":4,"./parse.js":5,"./stringify.js":9,"./v1.js":10,"./v3.js":11,"./v4.js":13,"./v5.js":14,"./validate.js":15,"./version.js":16}],2:[function(e,t,r){"use strict";function c(e){return 14+(e+64>>>9<<4)+1}function d(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r}function u(e,t,r,n,o,a){return d((t=d(d(t,e),d(n,a)))<<o|t>>>32-o,r)}function f(e,t,r,n,o,a,i){return u(t&r|~t&n,e,t,o,a,i)}function v(e,t,r,n,o,a,i){return u(t&n|r&~n,e,t,o,a,i)}function m(e,t,r,n,o,a,i){return u(t^r^n,e,t,o,a,i)}function p(e,t,r,n,o,a,i){return u(r^(t|~n),e,t,o,a,i)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(t){if("string"==typeof t){var r=unescape(encodeURIComponent(t));t=new Uint8Array(r.length);for(let e=0;e<r.length;++e)t[e]=r.charCodeAt(e)}var n=function(t,e){t[e>>5]|=128<<e%32,t[c(e)-1]=e;let r=1732584193,n=-271733879,o=-1732584194,a=271733878;for(let e=0;e<t.length;e+=16){var i=r,u=n,l=o,s=a;r=f(r,n,o,a,t[e],7,-680876936),a=f(a,r,n,o,t[e+1],12,-389564586),o=f(o,a,r,n,t[e+2],17,606105819),n=f(n,o,a,r,t[e+3],22,-1044525330),r=f(r,n,o,a,t[e+4],7,-176418897),a=f(a,r,n,o,t[e+5],12,1200080426),o=f(o,a,r,n,t[e+6],17,-1473231341),n=f(n,o,a,r,t[e+7],22,-45705983),r=f(r,n,o,a,t[e+8],7,1770035416),a=f(a,r,n,o,t[e+9],12,-1958414417),o=f(o,a,r,n,t[e+10],17,-42063),n=f(n,o,a,r,t[e+11],22,-1990404162),r=f(r,n,o,a,t[e+12],7,1804603682),a=f(a,r,n,o,t[e+13],12,-40341101),o=f(o,a,r,n,t[e+14],17,-1502002290),n=f(n,o,a,r,t[e+15],22,1236535329),r=v(r,n,o,a,t[e+1],5,-165796510),a=v(a,r,n,o,t[e+6],9,-1069501632),o=v(o,a,r,n,t[e+11],14,643717713),n=v(n,o,a,r,t[e],20,-373897302),r=v(r,n,o,a,t[e+5],5,-701558691),a=v(a,r,n,o,t[e+10],9,38016083),o=v(o,a,r,n,t[e+15],14,-660478335),n=v(n,o,a,r,t[e+4],20,-405537848),r=v(r,n,o,a,t[e+9],5,568446438),a=v(a,r,n,o,t[e+14],9,-1019803690),o=v(o,a,r,n,t[e+3],14,-187363961),n=v(n,o,a,r,t[e+8],20,1163531501),r=v(r,n,o,a,t[e+13],5,-1444681467),a=v(a,r,n,o,t[e+2],9,-51403784),o=v(o,a,r,n,t[e+7],14,1735328473),n=v(n,o,a,r,t[e+12],20,-1926607734),r=m(r,n,o,a,t[e+5],4,-378558),a=m(a,r,n,o,t[e+8],11,-2022574463),o=m(o,a,r,n,t[e+11],16,1839030562),n=m(n,o,a,r,t[e+14],23,-35309556),r=m(r,n,o,a,t[e+1],4,-1530992060),a=m(a,r,n,o,t[e+4],11,1272893353),o=m(o,a,r,n,t[e+7],16,-155497632),n=m(n,o,a,r,t[e+10],23,-1094730640),r=m(r,n,o,a,t[e+13],4,681279174),a=m(a,r,n,o,t[e],11,-358537222),o=m(o,a,r,n,t[e+3],16,-722521979),n=m(n,o,a,r,t[e+6],23,76029189),r=m(r,n,o,a,t[e+9],4,-640364487),a=m(a,r,n,o,t[e+12],11,-421815835),o=m(o,a,r,n,t[e+15],16,530742520),n=m(n,o,a,r,t[e+2],23,-995338651),r=p(r,n,o,a,t[e],6,-198630844),a=p(a,r,n,o,t[e+7],10,1126891415),o=p(o,a,r,n,t[e+14],15,-1416354905),n=p(n,o,a,r,t[e+5],21,-57434055),r=p(r,n,o,a,t[e+12],6,1700485571),a=p(a,r,n,o,t[e+3],10,-1894986606),o=p(o,a,r,n,t[e+10],15,-1051523),n=p(n,o,a,r,t[e+1],21,-2054922799),r=p(r,n,o,a,t[e+8],6,1873313359),a=p(a,r,n,o,t[e+15],10,-30611744),o=p(o,a,r,n,t[e+6],15,-1560198380),n=p(n,o,a,r,t[e+13],21,1309151649),r=p(r,n,o,a,t[e+4],6,-145523070),a=p(a,r,n,o,t[e+11],10,-1120210379),o=p(o,a,r,n,t[e+2],15,718787259),n=p(n,o,a,r,t[e+9],21,-343485551),r=d(r,i),n=d(n,u),o=d(o,l),a=d(a,s)}return[r,n,o,a]}(function(t){if(0===t.length)return[];var r=8*t.length,n=new Uint32Array(c(r));for(let e=0;e<r;e+=8)n[e>>5]|=(255&t[e/8])<<e%32;return n}(t),8*t.length),o=[],a=32*n.length,i="0123456789abcdef";for(let e=0;e<a;e+=8){var u=n[e>>5]>>>e%32&255,u=parseInt(i.charAt(u>>>4&15)+i.charAt(15&u),16);o.push(u)}return o}},{}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);r.default={randomUUID:n}},{}],4:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default="00000000-0000-0000-0000-000000000000"},{}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};r.default=function(e){var t,r;if((0,n.default)(e))return(r=new Uint8Array(16))[0]=(t=parseInt(e.slice(0,8),16))>>>24,r[1]=t>>>16&255,r[2]=t>>>8&255,r[3]=255&t,r[4]=(t=parseInt(e.slice(9,13),16))>>>8,r[5]=255&t,r[6]=(t=parseInt(e.slice(14,18),16))>>>8,r[7]=255&t,r[8]=(t=parseInt(e.slice(19,23),16))>>>8,r[9]=255&t,r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,r[11]=t/4294967296&255,r[12]=t>>>24&255,r[13]=t>>>16&255,r[14]=t>>>8&255,r[15]=255&t,r;throw TypeError("Invalid UUID")}},{"./validate.js":15}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},{}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)};let n;const o=new Uint8Array(16)},{}],8:[function(e,t,r){"use strict";function d(e,t){return e<<t|e>>>32-t}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(r){var u=[1518500249,1859775393,2400959708,3395469782],e=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof r){var t=unescape(encodeURIComponent(r));r=[];for(let e=0;e<t.length;++e)r.push(t.charCodeAt(e))}else Array.isArray(r)||(r=Array.prototype.slice.call(r));r.push(128);var n=r.length/4+2,o=Math.ceil(n/16),l=new Array(o);for(let t=0;t<o;++t){var a=new Uint32Array(16);for(let e=0;e<16;++e)a[e]=r[64*t+4*e]<<24|r[64*t+4*e+1]<<16|r[64*t+4*e+2]<<8|r[64*t+4*e+3];l[t]=a}l[o-1][14]=8*(r.length-1)/Math.pow(2,32),l[o-1][14]=Math.floor(l[o-1][14]),l[o-1][15]=8*(r.length-1)&4294967295;for(let i=0;i<o;++i){var s=new Uint32Array(80);for(let e=0;e<16;++e)s[e]=l[i][e];for(let e=16;e<80;++e)s[e]=d(s[e-3]^s[e-8]^s[e-14]^s[e-16],1);let t=e[0],r=e[1],n=e[2],o=e[3],a=e[4];for(let e=0;e<80;++e){var c=Math.floor(e/20),c=d(t,5)+function(e,t,r,n){switch(e){case 0:return t&r^~t&n;case 1:return t^r^n;case 2:return t&r^t&n^r&n;case 3:return t^r^n}}(c,r,n,o)+a+u[c]+s[e]>>>0;a=o,o=n,n=d(r,30)>>>0,r=t,t=c}e[0]=e[0]+t>>>0,e[1]=e[1]+r>>>0,e[2]=e[2]+n>>>0,e[3]=e[3]+o>>>0,e[4]=e[4]+a>>>0}return[e[0]>>24&255,e[0]>>16&255,e[0]>>8&255,255&e[0],e[1]>>24&255,e[1]>>16&255,e[1]>>8&255,255&e[1],e[2]>>24&255,e[2]>>16&255,e[2]>>8&255,255&e[2],e[3]>>24&255,e[3]>>16&255,e[3]>>8&255,255&e[3],e[4]>>24&255,e[4]>>16&255,e[4]>>8&255,255&e[4]]}},{}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.unsafeStringify=a;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function a(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}r.default=function(e,t=0){if(e=a(e,t),(0,n.default)(e))return e;throw TypeError("Stringified UUID is invalid")}},{"./validate.js":15}],10:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("./rng.js"))&&n.__esModule?n:{default:n},c=e("./stringify.js");let d,f,v=0,m=0;r.default=function(e,t,r){var n=t&&r||0,o=t||new Array(16);let a=(e=e||{}).node||d,i=void 0!==e.clockseq?e.clockseq:f,u=(null!=a&&null!=i||(r=e.random||(e.rng||s.default)(),null==a&&(a=d=[1|r[0],r[1],r[2],r[3],r[4],r[5]]),null==i&&(i=f=16383&(r[6]<<8|r[7]))),r=void 0!==e.msecs?e.msecs:Date.now(),void 0!==e.nsecs?e.nsecs:m+1);var l=r-v+(u-m)/1e4;if(l<0&&void 0===e.clockseq&&(i=i+1&16383),1e4<=(u=(l<0||r>v)&&void 0===e.nsecs?0:u))throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");v=r,m=u,f=i,l=(1e4*(268435455&(r+=122192928e5))+u)%4294967296,o[n++]=l>>>24&255,o[n++]=l>>>16&255,o[n++]=l>>>8&255,o[n++]=255&l,e=r/4294967296*1e4&268435455,o[n++]=e>>>8&255,o[n++]=255&e,o[n++]=e>>>24&15|16,o[n++]=e>>>16&255,o[n++]=i>>>8|128,o[n++]=255&i;for(let e=0;e<6;++e)o[n+e]=a[e];return t||(0,c.unsafeStringify)(o)}},{"./rng.js":7,"./stringify.js":9}],11:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("./v35.js")),e=o(e("./md5.js"));function o(e){return e&&e.__esModule?e:{default:e}}n=(0,n.default)("v3",48,e.default);r.default=n},{"./md5.js":2,"./v35.js":12}],12:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.URL=r.DNS=void 0,r.default=function(e,i,u){function t(e,t,r,n){var o;if("string"==typeof e&&(e=function(t){t=unescape(encodeURIComponent(t));var r=[];for(let e=0;e<t.length;++e)r.push(t.charCodeAt(e));return r}(e)),16!==(null==(o=t="string"==typeof t?(0,s.default)(t):t)?void 0:o.length))throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let a=new Uint8Array(16+e.length);if(a.set(t),a.set(e,t.length),(a=u(a))[6]=15&a[6]|i,a[8]=63&a[8]|128,r){n=n||0;for(let e=0;e<16;++e)r[n+e]=a[e];return r}return(0,l.unsafeStringify)(a)}try{t.name=e}catch(e){}return t.DNS=n,t.URL=o,t};var l=e("./stringify.js"),s=(e=e("./parse.js"))&&e.__esModule?e:{default:e};const n="6ba7b810-9dad-11d1-80b4-00c04fd430c8",o=(r.DNS=n,"6ba7b811-9dad-11d1-80b4-00c04fd430c8");r.URL=o},{"./parse.js":5,"./stringify.js":9}],13:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=n(e("./native.js")),a=n(e("./rng.js")),i=e("./stringify.js");function n(e){return e&&e.__esModule?e:{default:e}}r.default=function(e,t,r){if(o.default.randomUUID&&!t&&!e)return o.default.randomUUID();var n=(e=e||{}).random||(e.rng||a.default)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=n[e];return t}return(0,i.unsafeStringify)(n)}},{"./native.js":3,"./rng.js":7,"./stringify.js":9}],14:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("./v35.js")),e=o(e("./sha1.js"));function o(e){return e&&e.__esModule?e:{default:e}}n=(0,n.default)("v5",80,e.default);r.default=n},{"./sha1.js":8,"./v35.js":12}],15:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./regex.js"))&&e.__esModule?e:{default:e};r.default=function(e){return"string"==typeof e&&n.default.test(e)}},{"./regex.js":6}],16:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};r.default=function(e){if((0,n.default)(e))return parseInt(e.slice(14,15),16);throw TypeError("Invalid UUID")}},{"./validate.js":15}],17:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.createTaskLabel=r.createTaskElement=r.createDeleteTaskButton=r.createCheckboxButton=void 0;var n=e("./task"),o=(r.createTaskElement=function(e){var t=e.id,r=e.content,e=e.status,e=void 0===e?"active":e,n=document.createElement("li"),e=(n.classList.add("task"),n.setAttribute("data-status",e),n.setAttribute("data-id",t),o(t,e)),r=a(t,r),t=i(t);return n.appendChild(e),n.appendChild(r),n.appendChild(t),n},function(e,t){var r=document.createElement("button"),t="completed"===t,e=(r.classList.add("check-button"),r.setAttribute("role","checkbox"),r.setAttribute("aria-labelledby",e),r.setAttribute("aria-checked",t),r.addEventListener("click",n.handleTaskSelection),document.createElement("img"));return e.src="./dist/images/icon-check.svg",e.alt="",r.appendChild(e),r}),a=(r.createCheckboxButton=o,function(e,t){var r=document.createElement("p");return r.classList.add("task__label"),r.id=e,r.innerText=t,r}),i=(r.createTaskLabel=a,function(e){var t=document.createElement("button"),e=(t.classList.add("task__delete-button"),t.setAttribute("aria-describedby",e),t.addEventListener("click",n.handleTaskDeletion),document.createElement("span")),r=(e.classList.add("visually-hidden"),e.innerText="Delete",document.createElement("img"));return r.src="./dist/images/icon-cross.svg",r.alt="",t.appendChild(e),t.appendChild(r),t});r.createDeleteTaskButton=i},{"./task":22}],18:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.todoList=r.todoFormSubmit=r.todoFormInput=r.todoForm=r.themeToggle=r.filterBtns=r.clearCompletedBtn=void 0;var n=document.querySelector(".theme-toggle"),n=(r.themeToggle=n,document.querySelector(".todo-list")),n=(r.todoList=n,document.querySelector(".todo-form")),o=(r.todoForm=n).querySelector(".todo-form__input"),o=(r.todoFormInput=o,n.querySelector("button[type=submit]")),n=(r.todoFormSubmit=o,document.querySelectorAll(".filter-button")),o=(r.filterBtns=n,document.querySelector(".clear-button"));r.clearCompletedBtn=o},{}],19:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.handleFilterButton=r.filterList=void 0;var o=e("./elements");function a(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=function(e,t){var r;if(e)return"string"==typeof e?u(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.handleFilterButton=function(e){var t=e.target.dataset.filter;n(),e.target.classList.add("active"),i(t)};var n=function(){o.filterBtns.forEach(function(e){return e.classList.remove("active")})},i=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"all";if("all"===e)l();else{var t,r=a(o.todoList.querySelectorAll(".task"));try{for(r.s();!(t=r.n()).done;){var n=t.value;n.dataset.status===e?n.classList.remove("hidden"):n.classList.add("hidden")}}catch(e){r.e(e)}finally{r.f()}}},l=(r.filterList=i,function(){var e,t=a(o.todoList.querySelectorAll(".task"));try{for(t.s();!(e=t.n()).done;)e.value.classList.remove("hidden")}catch(e){t.e(e)}finally{t.f()}})},{"./elements":18}],20:[function(e,t,r){"use strict";function n(e){return""===e}var o=e("./theme"),a=e("./elements"),i=e("./elements-creation"),u=e("./task-list"),l=e("./list-actions");a.themeToggle.addEventListener("click",o.handleThemeToggle),a.todoFormSubmit.addEventListener("click",function(e){e.preventDefault();var e=a.todoFormInput.value;n(e)?a.todoForm.classList.add("error"):(a.todoForm.classList.remove("error"),e=(0,u.addTask)(e),e=(0,i.createTaskElement)(e),a.todoList.appendChild(e),a.todoFormInput.value="")}),a.todoFormInput.addEventListener("focusin",function(e){return a.todoForm.classList.remove("error")}),a.filterBtns.forEach(function(e){return e.addEventListener("click",l.handleFilterButton)}),(0,o.loadTheme)(),(0,u.loadTasks)()},{"./elements":18,"./elements-creation":17,"./list-actions":19,"./task-list":21,"./theme":23}],21:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.removeTask=r.loadTasks=r.changeStatus=r.addTask=void 0;var o=e("./elements"),a=e("./elements-creation"),n=e("uuid");function i(t,e){var r,n=Object.keys(t);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(t),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)),n}function u(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?i(Object(o),!0).forEach(function(e){var t,r;t=n,r=o[e=e],e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))})}return n}function l(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=function(e,t){var r;if(e)return"string"==typeof e?s(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var c=[],d=(r.addTask=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"active",e={id:(0,n.v4)(),content:e,status:t};return c.push(e),console.log(c),f(),e},r.removeTask=function(t){var e=c.find(function(e){return e.id===t})||{};return c=c.filter(function(e){return e.id!==t}),f(),console.log(c),e},r.changeStatus=function(t,e){var r=c.find(function(e){return e.id===t})||{};return r&&(r.status=e,f()),console.log(c),r},r.loadTasks=function(){d();var e,t=l(c);try{for(t.s();!(e=t.n()).done;){var r=e.value,n=(0,a.createTaskElement)(r);o.todoList.appendChild(n)}}catch(e){t.e(e)}finally{t.f()}},function(){var e=JSON.parse(localStorage.getItem("tasks"));if(e&&0<e.length){var t,r=l(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;c.push(u({},n))}}catch(e){r.e(e)}finally{r.f()}}}),f=function(){localStorage.setItem("tasks",JSON.stringify(c))}},{"./elements":18,"./elements-creation":17,uuid:1}],22:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.handleTaskSelection=r.handleTaskDeletion=void 0;var n=e("./task-list");r.handleTaskSelection=function(e){var e=e.target,t="true"===e.getAttribute("aria-checked"),r=t?"active":"completed",t=(e.setAttribute("aria-checked",!t),e.closest(".task")),e=t.dataset.id;t.dataset.status=r,(0,n.changeStatus)(e,r)};r.handleTaskDeletion=function(e){var e=e.target.closest(".task"),t=e.dataset.id;(0,n.removeTask)(t),e.remove()}},{"./task-list":21}],23:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.loadTheme=r.handleThemeToggle=void 0;var n=e("./elements"),o=(r.loadTheme=function(){var e=localStorage.getItem("theme");return e?(document.body.setAttribute("data-theme",e),n.themeToggle.dataset.theme=e):o(),e},function(){var e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";return a(e),e}),a=(r.handleThemeToggle=function(e){var t="light"===n.themeToggle.dataset.theme?"dark":"light";return a(t),t},function(e){return n.themeToggle.dataset.theme=e,document.body.setAttribute("data-theme",e),localStorage.setItem("theme",e),e})},{"./elements":18}]},{},[20]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

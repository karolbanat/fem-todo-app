!function n(o,a,u){function i(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(s)return s(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}r=a[t]={exports:{}},o[t][0].call(r.exports,function(e){return i(o[t][1][e]||e)},r,r.exports,n,o,a,u)}return a[t].exports}for(var s="function"==typeof require&&require,e=0;e<u.length;e++)i(u[e]);return i}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"NIL",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(r,"parse",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(r,"stringify",{enumerable:!0,get:function(){return d.default}}),Object.defineProperty(r,"v1",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(r,"v3",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(r,"v4",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(r,"v5",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(r,"validate",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(r,"version",{enumerable:!0,get:function(){return s.default}});var n=f(e("./v1.js")),o=f(e("./v3.js")),a=f(e("./v4.js")),u=f(e("./v5.js")),i=f(e("./nil.js")),s=f(e("./version.js")),l=f(e("./validate.js")),d=f(e("./stringify.js")),c=f(e("./parse.js"));function f(e){return e&&e.__esModule?e:{default:e}}},{"./nil.js":4,"./parse.js":5,"./stringify.js":9,"./v1.js":10,"./v3.js":11,"./v4.js":13,"./v5.js":14,"./validate.js":15,"./version.js":16}],2:[function(e,t,r){"use strict";function d(e){return 14+(e+64>>>9<<4)+1}function c(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r}function i(e,t,r,n,o,a){return c((t=c(c(t,e),c(n,a)))<<o|t>>>32-o,r)}function f(e,t,r,n,o,a,u){return i(t&r|~t&n,e,t,o,a,u)}function v(e,t,r,n,o,a,u){return i(t&n|r&~n,e,t,o,a,u)}function m(e,t,r,n,o,a,u){return i(t^r^n,e,t,o,a,u)}function p(e,t,r,n,o,a,u){return i(r^(t|~n),e,t,o,a,u)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(t){if("string"==typeof t){var r=unescape(encodeURIComponent(t));t=new Uint8Array(r.length);for(let e=0;e<r.length;++e)t[e]=r.charCodeAt(e)}var n=function(t,e){t[e>>5]|=128<<e%32,t[d(e)-1]=e;let r=1732584193,n=-271733879,o=-1732584194,a=271733878;for(let e=0;e<t.length;e+=16){var u=r,i=n,s=o,l=a;r=f(r,n,o,a,t[e],7,-680876936),a=f(a,r,n,o,t[e+1],12,-389564586),o=f(o,a,r,n,t[e+2],17,606105819),n=f(n,o,a,r,t[e+3],22,-1044525330),r=f(r,n,o,a,t[e+4],7,-176418897),a=f(a,r,n,o,t[e+5],12,1200080426),o=f(o,a,r,n,t[e+6],17,-1473231341),n=f(n,o,a,r,t[e+7],22,-45705983),r=f(r,n,o,a,t[e+8],7,1770035416),a=f(a,r,n,o,t[e+9],12,-1958414417),o=f(o,a,r,n,t[e+10],17,-42063),n=f(n,o,a,r,t[e+11],22,-1990404162),r=f(r,n,o,a,t[e+12],7,1804603682),a=f(a,r,n,o,t[e+13],12,-40341101),o=f(o,a,r,n,t[e+14],17,-1502002290),n=f(n,o,a,r,t[e+15],22,1236535329),r=v(r,n,o,a,t[e+1],5,-165796510),a=v(a,r,n,o,t[e+6],9,-1069501632),o=v(o,a,r,n,t[e+11],14,643717713),n=v(n,o,a,r,t[e],20,-373897302),r=v(r,n,o,a,t[e+5],5,-701558691),a=v(a,r,n,o,t[e+10],9,38016083),o=v(o,a,r,n,t[e+15],14,-660478335),n=v(n,o,a,r,t[e+4],20,-405537848),r=v(r,n,o,a,t[e+9],5,568446438),a=v(a,r,n,o,t[e+14],9,-1019803690),o=v(o,a,r,n,t[e+3],14,-187363961),n=v(n,o,a,r,t[e+8],20,1163531501),r=v(r,n,o,a,t[e+13],5,-1444681467),a=v(a,r,n,o,t[e+2],9,-51403784),o=v(o,a,r,n,t[e+7],14,1735328473),n=v(n,o,a,r,t[e+12],20,-1926607734),r=m(r,n,o,a,t[e+5],4,-378558),a=m(a,r,n,o,t[e+8],11,-2022574463),o=m(o,a,r,n,t[e+11],16,1839030562),n=m(n,o,a,r,t[e+14],23,-35309556),r=m(r,n,o,a,t[e+1],4,-1530992060),a=m(a,r,n,o,t[e+4],11,1272893353),o=m(o,a,r,n,t[e+7],16,-155497632),n=m(n,o,a,r,t[e+10],23,-1094730640),r=m(r,n,o,a,t[e+13],4,681279174),a=m(a,r,n,o,t[e],11,-358537222),o=m(o,a,r,n,t[e+3],16,-722521979),n=m(n,o,a,r,t[e+6],23,76029189),r=m(r,n,o,a,t[e+9],4,-640364487),a=m(a,r,n,o,t[e+12],11,-421815835),o=m(o,a,r,n,t[e+15],16,530742520),n=m(n,o,a,r,t[e+2],23,-995338651),r=p(r,n,o,a,t[e],6,-198630844),a=p(a,r,n,o,t[e+7],10,1126891415),o=p(o,a,r,n,t[e+14],15,-1416354905),n=p(n,o,a,r,t[e+5],21,-57434055),r=p(r,n,o,a,t[e+12],6,1700485571),a=p(a,r,n,o,t[e+3],10,-1894986606),o=p(o,a,r,n,t[e+10],15,-1051523),n=p(n,o,a,r,t[e+1],21,-2054922799),r=p(r,n,o,a,t[e+8],6,1873313359),a=p(a,r,n,o,t[e+15],10,-30611744),o=p(o,a,r,n,t[e+6],15,-1560198380),n=p(n,o,a,r,t[e+13],21,1309151649),r=p(r,n,o,a,t[e+4],6,-145523070),a=p(a,r,n,o,t[e+11],10,-1120210379),o=p(o,a,r,n,t[e+2],15,718787259),n=p(n,o,a,r,t[e+9],21,-343485551),r=c(r,u),n=c(n,i),o=c(o,s),a=c(a,l)}return[r,n,o,a]}(function(t){if(0===t.length)return[];var r=8*t.length,n=new Uint32Array(d(r));for(let e=0;e<r;e+=8)n[e>>5]|=(255&t[e/8])<<e%32;return n}(t),8*t.length),o=[],a=32*n.length,u="0123456789abcdef";for(let e=0;e<a;e+=8){var i=n[e>>5]>>>e%32&255,i=parseInt(u.charAt(i>>>4&15)+u.charAt(15&i),16);o.push(i)}return o}},{}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);r.default={randomUUID:n}},{}],4:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default="00000000-0000-0000-0000-000000000000"},{}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};r.default=function(e){var t,r;if((0,n.default)(e))return(r=new Uint8Array(16))[0]=(t=parseInt(e.slice(0,8),16))>>>24,r[1]=t>>>16&255,r[2]=t>>>8&255,r[3]=255&t,r[4]=(t=parseInt(e.slice(9,13),16))>>>8,r[5]=255&t,r[6]=(t=parseInt(e.slice(14,18),16))>>>8,r[7]=255&t,r[8]=(t=parseInt(e.slice(19,23),16))>>>8,r[9]=255&t,r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,r[11]=t/4294967296&255,r[12]=t>>>24&255,r[13]=t>>>16&255,r[14]=t>>>8&255,r[15]=255&t,r;throw TypeError("Invalid UUID")}},{"./validate.js":15}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},{}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)};let n;const o=new Uint8Array(16)},{}],8:[function(e,t,r){"use strict";function c(e,t){return e<<t|e>>>32-t}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(r){var i=[1518500249,1859775393,2400959708,3395469782],e=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof r){var t=unescape(encodeURIComponent(r));r=[];for(let e=0;e<t.length;++e)r.push(t.charCodeAt(e))}else Array.isArray(r)||(r=Array.prototype.slice.call(r));r.push(128);var n=r.length/4+2,o=Math.ceil(n/16),s=new Array(o);for(let t=0;t<o;++t){var a=new Uint32Array(16);for(let e=0;e<16;++e)a[e]=r[64*t+4*e]<<24|r[64*t+4*e+1]<<16|r[64*t+4*e+2]<<8|r[64*t+4*e+3];s[t]=a}s[o-1][14]=8*(r.length-1)/Math.pow(2,32),s[o-1][14]=Math.floor(s[o-1][14]),s[o-1][15]=8*(r.length-1)&4294967295;for(let u=0;u<o;++u){var l=new Uint32Array(80);for(let e=0;e<16;++e)l[e]=s[u][e];for(let e=16;e<80;++e)l[e]=c(l[e-3]^l[e-8]^l[e-14]^l[e-16],1);let t=e[0],r=e[1],n=e[2],o=e[3],a=e[4];for(let e=0;e<80;++e){var d=Math.floor(e/20),d=c(t,5)+function(e,t,r,n){switch(e){case 0:return t&r^~t&n;case 1:return t^r^n;case 2:return t&r^t&n^r&n;case 3:return t^r^n}}(d,r,n,o)+a+i[d]+l[e]>>>0;a=o,o=n,n=c(r,30)>>>0,r=t,t=d}e[0]=e[0]+t>>>0,e[1]=e[1]+r>>>0,e[2]=e[2]+n>>>0,e[3]=e[3]+o>>>0,e[4]=e[4]+a>>>0}return[e[0]>>24&255,e[0]>>16&255,e[0]>>8&255,255&e[0],e[1]>>24&255,e[1]>>16&255,e[1]>>8&255,255&e[1],e[2]>>24&255,e[2]>>16&255,e[2]>>8&255,255&e[2],e[3]>>24&255,e[3]>>16&255,e[3]>>8&255,255&e[3],e[4]>>24&255,e[4]>>16&255,e[4]>>8&255,255&e[4]]}},{}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.unsafeStringify=a;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function a(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}r.default=function(e,t=0){if(e=a(e,t),(0,n.default)(e))return e;throw TypeError("Stringified UUID is invalid")}},{"./validate.js":15}],10:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,l=(n=e("./rng.js"))&&n.__esModule?n:{default:n},d=e("./stringify.js");let c,f,v=0,m=0;r.default=function(e,t,r){var n=t&&r||0,o=t||new Array(16);let a=(e=e||{}).node||c,u=void 0!==e.clockseq?e.clockseq:f,i=(null!=a&&null!=u||(r=e.random||(e.rng||l.default)(),null==a&&(a=c=[1|r[0],r[1],r[2],r[3],r[4],r[5]]),null==u&&(u=f=16383&(r[6]<<8|r[7]))),r=void 0!==e.msecs?e.msecs:Date.now(),void 0!==e.nsecs?e.nsecs:m+1);var s=r-v+(i-m)/1e4;if(s<0&&void 0===e.clockseq&&(u=u+1&16383),1e4<=(i=(s<0||r>v)&&void 0===e.nsecs?0:i))throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");v=r,m=i,f=u,s=(1e4*(268435455&(r+=122192928e5))+i)%4294967296,o[n++]=s>>>24&255,o[n++]=s>>>16&255,o[n++]=s>>>8&255,o[n++]=255&s,e=r/4294967296*1e4&268435455,o[n++]=e>>>8&255,o[n++]=255&e,o[n++]=e>>>24&15|16,o[n++]=e>>>16&255,o[n++]=u>>>8|128,o[n++]=255&u;for(let e=0;e<6;++e)o[n+e]=a[e];return t||(0,d.unsafeStringify)(o)}},{"./rng.js":7,"./stringify.js":9}],11:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("./v35.js")),e=o(e("./md5.js"));function o(e){return e&&e.__esModule?e:{default:e}}n=(0,n.default)("v3",48,e.default);r.default=n},{"./md5.js":2,"./v35.js":12}],12:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.URL=r.DNS=void 0,r.default=function(e,u,i){function t(e,t,r,n){var o;if("string"==typeof e&&(e=function(t){t=unescape(encodeURIComponent(t));var r=[];for(let e=0;e<t.length;++e)r.push(t.charCodeAt(e));return r}(e)),16!==(null==(o=t="string"==typeof t?(0,l.default)(t):t)?void 0:o.length))throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let a=new Uint8Array(16+e.length);if(a.set(t),a.set(e,t.length),(a=i(a))[6]=15&a[6]|u,a[8]=63&a[8]|128,r){n=n||0;for(let e=0;e<16;++e)r[n+e]=a[e];return r}return(0,s.unsafeStringify)(a)}try{t.name=e}catch(e){}return t.DNS=n,t.URL=o,t};var s=e("./stringify.js"),l=(e=e("./parse.js"))&&e.__esModule?e:{default:e};const n="6ba7b810-9dad-11d1-80b4-00c04fd430c8",o=(r.DNS=n,"6ba7b811-9dad-11d1-80b4-00c04fd430c8");r.URL=o},{"./parse.js":5,"./stringify.js":9}],13:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=n(e("./native.js")),a=n(e("./rng.js")),u=e("./stringify.js");function n(e){return e&&e.__esModule?e:{default:e}}r.default=function(e,t,r){if(o.default.randomUUID&&!t&&!e)return o.default.randomUUID();var n=(e=e||{}).random||(e.rng||a.default)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=n[e];return t}return(0,u.unsafeStringify)(n)}},{"./native.js":3,"./rng.js":7,"./stringify.js":9}],14:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("./v35.js")),e=o(e("./sha1.js"));function o(e){return e&&e.__esModule?e:{default:e}}n=(0,n.default)("v5",80,e.default);r.default=n},{"./sha1.js":8,"./v35.js":12}],15:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./regex.js"))&&e.__esModule?e:{default:e};r.default=function(e){return"string"==typeof e&&n.default.test(e)}},{"./regex.js":6}],16:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};r.default=function(e){if((0,n.default)(e))return parseInt(e.slice(14,15),16);throw TypeError("Invalid UUID")}},{"./validate.js":15}],17:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.updateTodoCounter=r.showAllTasks=r.setTheme=r.indicateActive=r.filterList=r.addTaskToList=void 0;var n=e("./element-creators"),o=e("./elements"),a=e("./tasks");function u(e,t){var r,n,o,a,u="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(u)return n=!(r=!0),{s:function(){u=u.call(e)},n:function(){var e=u.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==u.return||u.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(u=function(e,t){var r;if(e)return"string"==typeof e?i(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?i(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return u&&(e=u),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.setTheme=function(e){return document.body.setAttribute("data-theme",e),o.themeToggle.dataset.theme=e},r.addTaskToList=function(e){e=(0,n.createTaskElement)(e);return o.todoList.appendChild(e),e};r.indicateActive=function(e){s(),e.classList.add("active")};var s=function(){return o.filterBtns.forEach(function(e){return e.classList.remove("active")})},l=(r.filterList=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"all";if("all"===e)l();else{var t,r=u(o.todoList.querySelectorAll(".task"));try{for(r.s();!(t=r.n()).done;){var n=t.value;n.dataset.status===e?n.classList.remove("hidden"):n.classList.add("hidden")}}catch(e){r.e(e)}finally{r.f()}}return e},function(){var e,t=u(o.todoList.querySelectorAll(".task"));try{for(t.s();!(e=t.n()).done;)e.value.classList.remove("hidden")}catch(e){t.e(e)}finally{t.f()}});r.showAllTasks=l;r.updateTodoCounter=function(){var e=(0,a.getActiveTasksCount)(),t=1===e?"item":"items";return o.todoCounter.innerText="".concat(e," ").concat(t," left"),e}},{"./element-creators":18,"./elements":19,"./tasks":23}],18:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.createTaskLabel=r.createTaskElement=r.createDeleteTaskButton=r.createCheckboxButton=void 0;var n=e("./event-handlers"),o=e("./tasks"),a="./dist/images/icon-check.svg",u="./dist/images/icon-cross.svg",i=(r.createTaskElement=function(e){var t=e.id,r=e.content,e=e.status,n=document.createElement("li"),e=(n.classList.add("task"),n.setAttribute("data-status",e),n.setAttribute("data-id",t),i(t,e)),r=s(t,r),t=l(t);return n.appendChild(e),n.appendChild(r),n.appendChild(t),n},function(e,t){var r=document.createElement("button"),t=t===o.TASK_STATES.completed,e=(r.classList.add("check-button"),r.setAttribute("role","checkbox"),r.setAttribute("aria-labelledby",e),r.setAttribute("aria-checked",t),r.addEventListener("click",n.handleTaskSelection),document.createElement("img"));return e.src=a,e.alt="",r.appendChild(e),r}),s=(r.createCheckboxButton=i,function(e,t){var r=document.createElement("p");return r.classList.add("task__label"),r.id=e,r.innerText=t,r}),l=(r.createTaskLabel=s,function(e){var t=document.createElement("button"),e=(t.classList.add("task__delete-button"),t.setAttribute("aria-describedby",e),t.addEventListener("click",n.handleTaskDeletion),document.createElement("span")),r=(e.classList.add("visually-hidden"),e.innerText="Delete",document.createElement("img"));return r.src=u,r.alt="",t.appendChild(e),t.appendChild(r),t});r.createDeleteTaskButton=l},{"./event-handlers":20,"./tasks":23}],19:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.todoList=r.todoFormSubmit=r.todoFormInput=r.todoForm=r.todoCounter=r.themeToggle=r.filterBtns=r.clearCompletedBtn=void 0;var n=document.querySelector(".theme-toggle"),n=(r.themeToggle=n,document.querySelector(".todo-list")),n=(r.todoList=n,document.querySelector(".todo-form")),o=(r.todoForm=n).querySelector(".todo-form__input"),o=(r.todoFormInput=o,n.querySelector("button[type=submit]")),n=(r.todoFormSubmit=o,document.querySelectorAll(".filter-button")),o=(r.filterBtns=n,document.querySelector(".clear-button")),n=(r.clearCompletedBtn=o,document.querySelector("#todo-counter"));r.todoCounter=n},{}],20:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.handleThemeToggle=r.handleTaskSelection=r.handleTaskDeletion=r.handleFormSubmission=r.handleFilterButton=r.handleClearCompletedButton=void 0;var n=e("./theme"),o=e("./helpers"),a=e("./dom-updates"),u=e("./tasks"),i=e("./elements");function s(e,t){var r,n,o,a,u="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(u)return n=!(r=!0),{s:function(){u=u.call(e)},n:function(){var e=u.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==u.return||u.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(u=function(e,t){var r;if(e)return"string"==typeof e?l(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return u&&(e=u),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.handleThemeToggle=function(e){var t="light"===i.themeToggle.dataset.theme?"dark":"light";return(0,n.changeColorTheme)(t),t},r.handleFormSubmission=function(e){e.preventDefault();var e=i.todoFormInput.value;(0,o.isBlank)(e)?i.todoForm.classList.add("error"):(i.todoForm.classList.remove("error"),e=(0,u.addTask)(e),(0,a.addTaskToList)(e),(0,a.updateTodoCounter)(),i.todoFormInput.value="")},r.handleTaskSelection=function(e){var e=e.target,t="true"===e.getAttribute("aria-checked"),r=t?u.TASK_STATES.active:u.TASK_STATES.completed,t=(e.setAttribute("aria-checked",!t),e.closest(".task")),e=t.dataset.id;t.dataset.status=r,(0,u.changeStatus)(e,r),(0,a.updateTodoCounter)()},r.handleTaskDeletion=function(e){var e=e.target.closest(".task"),t=e.dataset.id;(0,u.removeTask)(t),e.remove(),(0,a.updateTodoCounter)()},r.handleFilterButton=function(e){var t=e.target.dataset.filter;(0,a.indicateActive)(e.target),(0,a.filterList)(t)};r.handleClearCompletedButton=function(e){var t,r=s(i.todoList.querySelectorAll(".task"));try{for(r.s();!(t=r.n()).done;){var n=t.value;n.dataset.status===u.TASK_STATES.completed&&((0,u.removeTask)(n.dataset.id),n.remove())}}catch(e){r.e(e)}finally{r.f()}(0,a.updateTodoCounter)()}},{"./dom-updates":17,"./elements":19,"./helpers":21,"./tasks":23,"./theme":24}],21:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isBlank=void 0;r.isBlank=function(e){return""===e}},{}],22:[function(e,t,r){"use strict";var n=e("./elements"),o=e("./theme"),a=e("./tasks"),u=e("./event-handlers");n.themeToggle.addEventListener("click",u.handleThemeToggle),n.todoFormSubmit.addEventListener("click",u.handleFormSubmission),n.todoFormInput.addEventListener("focusin",function(e){return n.todoForm.classList.remove("error")}),n.filterBtns.forEach(function(e){return e.addEventListener("click",u.handleFilterButton)}),n.clearCompletedBtn.addEventListener("click",u.handleClearCompletedButton),(0,o.loadTheme)(),(0,a.loadTasks)()},{"./elements":19,"./event-handlers":20,"./tasks":23,"./theme":24}],23:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.removeTask=r.loadTasks=r.getActiveTasksCount=r.changeStatus=r.addTask=r.TASK_STATES=void 0;var n=e("uuid"),o=e("./dom-updates");function a(t,e){var r,n=Object.keys(t);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(t),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)),n}function u(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?a(Object(o),!0).forEach(function(e){var t,r;t=n,r=o[e=e],e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))})}return n}function i(e,t){var r,n,o,a,u="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(u)return n=!(r=!0),{s:function(){u=u.call(e)},n:function(){var e=u.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==u.return||u.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(u=function(e,t){var r;if(e)return"string"==typeof e?s(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return u&&(e=u),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var l={active:"active",completed:"completed"},d=(r.TASK_STATES=l,[]),c=(r.addTask=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:l.active,e={id:(0,n.v4)(),content:e,status:t};return d.push(e),f(),e},r.removeTask=function(t){var e=d.find(function(e){return e.id===t})||{};return d=d.filter(function(e){return e.id!==t}),f(),e},r.changeStatus=function(t,e){var r=d.find(function(e){return e.id===t})||{};return r&&(r.status=e,f()),r},r.getActiveTasksCount=function(){return d.filter(function(e){return e.status===l.active}).length},r.loadTasks=function(){c();var e,t=i(d);try{for(t.s();!(e=t.n()).done;){var r=e.value;(0,o.addTaskToList)(r)}}catch(e){t.e(e)}finally{t.f()}(0,o.updateTodoCounter)()},function(){var e=JSON.parse(localStorage.getItem("tasks"));if(e&&0<e.length){var t,r=i(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;d.push(u({},n))}}catch(e){r.e(e)}finally{r.f()}}}),f=function(){localStorage.setItem("tasks",JSON.stringify(d))}},{"./dom-updates":17,uuid:1}],24:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.loadTheme=r.changeColorTheme=void 0;var n=e("./dom-updates"),o=(r.loadTheme=function(){var e=localStorage.getItem("theme");return e?(0,n.setTheme)(e):o()},function(){var e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";return a(e)}),a=function(e){return localStorage.setItem("theme",e),(0,n.setTheme)(e)};r.changeColorTheme=a},{"./dom-updates":17}]},{},[22]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9tZDUtYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3QvbmF0aXZlLWJyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L25pbC5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3QvcGFyc2UuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L3JlZ2V4LmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9ybmctYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3Qvc2hhMS1icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9zdHJpbmdpZnkuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L3YxLmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92My5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjM1LmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92NC5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjUuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L3ZhbGlkYXRlLmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92ZXJzaW9uLmpzIiwic3JjL2pzL2RvbS11cGRhdGVzLmpzIiwic3JjL2pzL2VsZW1lbnQtY3JlYXRvcnMuanMiLCJzcmMvanMvZWxlbWVudHMuanMiLCJzcmMvanMvZXZlbnQtaGFuZGxlcnMuanMiLCJzcmMvanMvaGVscGVycy5qcyIsInNyYy9qcy9tYWluLmpzIiwic3JjL2pzL3Rhc2tzLmpzIiwic3JjL2pzL3RoZW1lLmpzIl0sIm5hbWVzIjpbInIiLCJlIiwibiIsInQiLCJvIiwiaSIsImYiLCJjIiwicmVxdWlyZSIsInUiLCJhIiwiRXJyb3IiLCJjb2RlIiwicCIsImV4cG9ydHMiLCJjYWxsIiwibGVuZ3RoIiwiMSIsIm1vZHVsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX25pbCIsImRlZmF1bHQiLCJfcGFyc2UiLCJfc3RyaW5naWZ5IiwiX3YiLCJfdjIiLCJfdjMiLCJfdjQiLCJfdmFsaWRhdGUiLCJfdmVyc2lvbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZ2V0T3V0cHV0TGVuZ3RoIiwiaW5wdXRMZW5ndGg4Iiwic2FmZUFkZCIsIngiLCJ5IiwibHN3IiwibWQ1Y21uIiwicSIsImIiLCJzIiwibnVtIiwibWQ1ZmYiLCJkIiwibWQ1Z2ciLCJtZDVoaCIsIm1kNWlpIiwiYnl0ZXMiLCJtc2ciLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIlVpbnQ4QXJyYXkiLCJsZXQiLCJjaGFyQ29kZUF0IiwibWQ1VG9IZXhFbmNvZGVkQXJyYXkiLCJpbnB1dCIsImxlbiIsIm9sZGEiLCJvbGRiIiwib2xkYyIsIm9sZGQiLCJsZW5ndGg4Iiwib3V0cHV0IiwiVWludDMyQXJyYXkiLCJsZW5ndGgzMiIsImhleFRhYiIsImhleCIsInBhcnNlSW50IiwiY2hhckF0IiwicHVzaCIsInJhbmRvbVVVSUQiLCJjcnlwdG8iLCJiaW5kIiwidXVpZCIsInYiLCJhcnIiLCJzbGljZSIsIlR5cGVFcnJvciIsImdldFJhbmRvbVZhbHVlcyIsInJuZHM4IiwiUk9UTCIsIksiLCJIIiwiQXJyYXkiLCJpc0FycmF5IiwicHJvdG90eXBlIiwibCIsIk4iLCJNYXRoIiwiY2VpbCIsIk0iLCJqIiwicG93IiwiZmxvb3IiLCJXIiwiVCIsInoiLCJ1bnNhZmVTdHJpbmdpZnkiLCJieXRlVG9IZXgiLCJ0b1N0cmluZyIsIm9mZnNldCIsInRvTG93ZXJDYXNlIiwiX3JuZyIsIl9ub2RlSWQiLCJfY2xvY2tzZXEiLCJfbGFzdE1TZWNzIiwiX2xhc3ROU2VjcyIsIm9wdGlvbnMiLCJidWYiLCJub2RlIiwiY2xvY2tzZXEiLCJ1bmRlZmluZWQiLCJuc2VjcyIsInNlZWRCeXRlcyIsInJhbmRvbSIsInJuZyIsIm1zZWNzIiwiRGF0ZSIsIm5vdyIsImR0IiwidGwiLCJ0bWgiLCJfbWQiLCJ2MyIsIlVSTCIsIkROUyIsIm5hbWUiLCJ2ZXJzaW9uIiwiaGFzaGZ1bmMiLCJnZW5lcmF0ZVVVSUQiLCJuYW1lc3BhY2UiLCJfbmFtZXNwYWNlIiwic3RyIiwic2V0IiwiZXJyIiwiX25hdGl2ZSIsInJuZHMiLCJfc2hhIiwidjUiLCJfcmVnZXgiLCJ0ZXN0IiwiX2VsZW1lbnRDcmVhdG9ycyIsIl9lbGVtZW50cyIsIl90YXNrcyIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiYWxsb3dBcnJheUxpa2UiLCJub3JtYWxDb21wbGV0aW9uIiwiZGlkRXJyIiwiaXQiLCJTeW1ib2wiLCJpdGVyYXRvciIsInN0ZXAiLCJuZXh0IiwiZG9uZSIsIl9lMiIsIm1pbkxlbiIsIl9hcnJheUxpa2VUb0FycmF5IiwiY29uc3RydWN0b3IiLCJmcm9tIiwiRiIsIl9lIiwiYXJyMiIsInNldFRoZW1lIiwidGhlbWUiLCJkb2N1bWVudCIsImJvZHkiLCJzZXRBdHRyaWJ1dGUiLCJ0aGVtZVRvZ2dsZSIsImRhdGFzZXQiLCJhZGRUYXNrVG9MaXN0IiwidGFzayIsInRhc2tFbGVtZW50IiwiY3JlYXRlVGFza0VsZW1lbnQiLCJ0b2RvTGlzdCIsImFwcGVuZENoaWxkIiwiaW5kaWNhdGVBY3RpdmUiLCJidXR0b24iLCJyZW1vdmVBY3RpdmVDbGFzc0Zyb21CdXR0b25zIiwiY2xhc3NMaXN0IiwiYWRkIiwiZmlsdGVyQnRucyIsImZvckVhY2giLCJidG4iLCJyZW1vdmUiLCJzaG93QWxsVGFza3MiLCJmaWx0ZXJMaXN0IiwiZmlsdGVyIiwiYXJndW1lbnRzIiwiX3N0ZXAiLCJfaXRlcmF0b3IiLCJxdWVyeVNlbGVjdG9yQWxsIiwic3RhdHVzIiwiX3N0ZXAyIiwiX2l0ZXJhdG9yMiIsInVwZGF0ZVRvZG9Db3VudGVyIiwiYWN0aXZlVGFza3NDb3VudCIsImdldEFjdGl2ZVRhc2tzQ291bnQiLCJpdGVtc0Zvcm0iLCJ0b2RvQ291bnRlciIsImlubmVyVGV4dCIsImNvbmNhdCIsIl9ldmVudEhhbmRsZXJzIiwiSU1BR0VfU1JDIiwiY3JlYXRlQ2hlY2tib3hCdXR0b24iLCJfcmVmIiwiaWQiLCJjb250ZW50IiwibmV3VGFzayIsImNyZWF0ZUVsZW1lbnQiLCJjaGVja2JveEJ1dHRvbiIsInRhc2tMYWJlbCIsImNyZWF0ZVRhc2tMYWJlbCIsImRlbGV0ZUJ1dHRvbiIsImNyZWF0ZURlbGV0ZVRhc2tCdXR0b24iLCJ0YXNrSWQiLCJpc0NoZWNrZWQiLCJUQVNLX1NUQVRFUyIsImNvbXBsZXRlZCIsImNoZWNrSWNvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVUYXNrU2VsZWN0aW9uIiwic3JjIiwiYWx0IiwidGFza1RleHQiLCJsYWJlbCIsImRlbGV0ZVRleHQiLCJoYW5kbGVUYXNrRGVsZXRpb24iLCJkZWxldGVJbWFnZSIsInF1ZXJ5U2VsZWN0b3IiLCJ0b2RvRm9ybSIsInRvZG9Gb3JtSW5wdXQiLCJ0b2RvRm9ybVN1Ym1pdCIsImNsZWFyQ29tcGxldGVkQnRuIiwiX3RoZW1lIiwiX2hlbHBlcnMiLCJfZG9tVXBkYXRlcyIsImhhbmRsZVRoZW1lVG9nZ2xlIiwibmV3VGhlbWUiLCJjaGFuZ2VDb2xvclRoZW1lIiwiaGFuZGxlRm9ybVN1Ym1pc3Npb24iLCJwcmV2ZW50RGVmYXVsdCIsImlucHV0VGV4dCIsImlzQmxhbmsiLCJhZGRUYXNrIiwidGFyZ2V0IiwiZ2V0QXR0cmlidXRlIiwidGFza05ld1N0YXR1cyIsImFjdGl2ZSIsInBhcmVudFRhc2siLCJjbG9zZXN0IiwiY2hhbmdlU3RhdHVzIiwicmVtb3ZlVGFzayIsImhhbmRsZUZpbHRlckJ1dHRvbiIsImhhbmRsZUNsZWFyQ29tcGxldGVkQnV0dG9uIiwibG9hZFRoZW1lIiwibG9hZFRhc2tzIiwiX3V1aWQiLCJvd25LZXlzIiwib2JqZWN0IiwiZW51bWVyYWJsZU9ubHkiLCJzeW1ib2xzIiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImFwcGx5IiwiX29iamVjdFNwcmVhZCIsInNvdXJjZSIsImtleSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJ0YXNrcyIsImxvYWRUYXNrc0Zyb21TdG9yYWdlIiwidjQiLCJzYXZlVGFza3NUb0xvY2FsU3RvcmFnZSIsInJlbW92ZWRUYXNrIiwiZmluZCIsInRhc2tUb0NoYW5nZSIsInN0b3JhZ2VUYXNrcyIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwibG9hZFByZWZlcmVkVGhlbWUiLCJwcmVmZXJlZFRoZW1lIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiXSwibWFwcGluZ3MiOiJBQUFBLENBQUEsU0FBQUEsRUFBQUMsRUFBQUMsRUFBQUMsR0FBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUFBLEdBQUEsQ0FBQUosRUFBQUcsR0FBQSxDQUFBLEdBQUEsQ0FBQUosRUFBQUksR0FBQSxDQUFBLElBQUFFLEVBQUEsWUFBQSxPQUFBQyxTQUFBQSxRQUFBLEdBQUEsQ0FBQUYsR0FBQUMsRUFBQSxPQUFBQSxFQUFBRixFQUFBLENBQUEsQ0FBQSxFQUFBLEdBQUFJLEVBQUEsT0FBQUEsRUFBQUosRUFBQSxDQUFBLENBQUEsRUFBQSxNQUFBSyxFQUFBLElBQUFDLE1BQUEsdUJBQUFOLEVBQUEsR0FBQSxHQUFBTyxLQUFBLG1CQUFBRixDQUFBLENBQUFHLEVBQUFYLEVBQUFHLEdBQUEsQ0FBQVMsUUFBQSxFQUFBLEVBQUFiLEVBQUFJLEdBQUEsR0FBQVUsS0FBQUYsRUFBQUMsUUFBQSxTQUFBZCxHQUFBLE9BQUFJLEVBQUFILEVBQUFJLEdBQUEsR0FBQUwsSUFBQUEsQ0FBQSxDQUFBLEVBQUFhLEVBQUFBLEVBQUFDLFFBQUFkLEVBQUFDLEVBQUFDLEVBQUFDLENBQUEsQ0FBQSxDQUFBLE9BQUFELEVBQUFHLEdBQUFTLE9BQUEsQ0FBQSxJQUFBLElBQUFMLEVBQUEsWUFBQSxPQUFBRCxTQUFBQSxRQUFBSCxFQUFBLEVBQUFBLEVBQUFGLEVBQUFhLE9BQUFYLENBQUEsR0FBQUQsRUFBQUQsRUFBQUUsRUFBQSxFQUFBLE9BQUFELENBQUEsRUFBQSxDQUFBYSxFQUFBLENBQUEsU0FBQVQsRUFBQVUsRUFBQUosR0NBQSxhQUVBSyxPQUFBQyxlQUFBTixFQUFBLGFBQUEsQ0FDQU8sTUFBQSxDQUFBLENBQ0EsQ0FBQSxFQUNBRixPQUFBQyxlQUFBTixFQUFBLE1BQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBQyxFQUFBQyxPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLFFBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBRyxFQUFBRCxPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLFlBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBSSxFQUFBRixPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLEtBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBSyxFQUFBSCxPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLEtBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBTSxFQUFBSixPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLEtBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBTyxFQUFBTCxPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLEtBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBUSxFQUFBTixPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLFdB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UUFBUzFILENBQUssR0FDNUIsRUFBQXdFLEVBQUF6RSxVQUFTQyxDQUFLLENBQ3RCLEVBQUUzSixFQUFBc08saUJBQUFBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTklMXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9uaWwuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwYXJzZVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfcGFyc2UuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzdHJpbmdpZnlcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3N0cmluZ2lmeS5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInYxXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92LmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidjNcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3YyLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidjRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3YzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidjVcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3Y0LmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidmFsaWRhdGVcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3ZhbGlkYXRlLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidmVyc2lvblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdmVyc2lvbi5kZWZhdWx0O1xuICB9XG59KTtcblxudmFyIF92ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92MS5qc1wiKSk7XG5cbnZhciBfdjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3YzLmpzXCIpKTtcblxudmFyIF92MyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdjQuanNcIikpO1xuXG52YXIgX3Y0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92NS5qc1wiKSk7XG5cbnZhciBfbmlsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9uaWwuanNcIikpO1xuXG52YXIgX3ZlcnNpb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZlcnNpb24uanNcIikpO1xuXG52YXIgX3ZhbGlkYXRlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92YWxpZGF0ZS5qc1wiKSk7XG5cbnZhciBfc3RyaW5naWZ5ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zdHJpbmdpZnkuanNcIikpO1xuXG52YXIgX3BhcnNlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9wYXJzZS5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbi8qXG4gKiBCcm93c2VyLWNvbXBhdGlibGUgSmF2YVNjcmlwdCBNRDVcbiAqXG4gKiBNb2RpZmljYXRpb24gb2YgSmF2YVNjcmlwdCBNRDVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ibHVlaW1wL0phdmFTY3JpcHQtTUQ1XG4gKlxuICogQ29weXJpZ2h0IDIwMTEsIFNlYmFzdGlhbiBUc2NoYW5cbiAqIGh0dHBzOi8vYmx1ZWltcC5uZXRcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2U6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVFxuICpcbiAqIEJhc2VkIG9uXG4gKiBBIEphdmFTY3JpcHQgaW1wbGVtZW50YXRpb24gb2YgdGhlIFJTQSBEYXRhIFNlY3VyaXR5LCBJbmMuIE1ENSBNZXNzYWdlXG4gKiBEaWdlc3QgQWxnb3JpdGhtLCBhcyBkZWZpbmVkIGluIFJGQyAxMzIxLlxuICogVmVyc2lvbiAyLjIgQ29weXJpZ2h0IChDKSBQYXVsIEpvaG5zdG9uIDE5OTkgLSAyMDA5XG4gKiBPdGhlciBjb250cmlidXRvcnM6IEdyZWcgSG9sdCwgQW5kcmV3IEtlcGVydCwgWWRuYXIsIExvc3RpbmV0XG4gKiBEaXN0cmlidXRlZCB1bmRlciB0aGUgQlNEIExpY2Vuc2VcbiAqIFNlZSBodHRwOi8vcGFqaG9tZS5vcmcudWsvY3J5cHQvbWQ1IGZvciBtb3JlIGluZm8uXG4gKi9cbmZ1bmN0aW9uIG1kNShieXRlcykge1xuICBpZiAodHlwZW9mIGJ5dGVzID09PSAnc3RyaW5nJykge1xuICAgIGNvbnN0IG1zZyA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChieXRlcykpOyAvLyBVVEY4IGVzY2FwZVxuXG4gICAgYnl0ZXMgPSBuZXcgVWludDhBcnJheShtc2cubGVuZ3RoKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbXNnLmxlbmd0aDsgKytpKSB7XG4gICAgICBieXRlc1tpXSA9IG1zZy5jaGFyQ29kZUF0KGkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtZDVUb0hleEVuY29kZWRBcnJheSh3b3Jkc1RvTWQ1KGJ5dGVzVG9Xb3JkcyhieXRlcyksIGJ5dGVzLmxlbmd0aCAqIDgpKTtcbn1cbi8qXG4gKiBDb252ZXJ0IGFuIGFycmF5IG9mIGxpdHRsZS1lbmRpYW4gd29yZHMgdG8gYW4gYXJyYXkgb2YgYnl0ZXNcbiAqL1xuXG5cbmZ1bmN0aW9uIG1kNVRvSGV4RW5jb2RlZEFycmF5KGlucHV0KSB7XG4gIGNvbnN0IG91dHB1dCA9IFtdO1xuICBjb25zdCBsZW5ndGgzMiA9IGlucHV0Lmxlbmd0aCAqIDMyO1xuICBjb25zdCBoZXhUYWIgPSAnMDEyMzQ1Njc4OWFiY2RlZic7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGgzMjsgaSArPSA4KSB7XG4gICAgY29uc3QgeCA9IGlucHV0W2kgPj4gNV0gPj4+IGkgJSAzMiAmIDB4ZmY7XG4gICAgY29uc3QgaGV4ID0gcGFyc2VJbnQoaGV4VGFiLmNoYXJBdCh4ID4+PiA0ICYgMHgwZikgKyBoZXhUYWIuY2hhckF0KHggJiAweDBmKSwgMTYpO1xuICAgIG91dHB1dC5wdXNoKGhleCk7XG4gIH1cblxuICByZXR1cm4gb3V0cHV0O1xufVxuLyoqXG4gKiBDYWxjdWxhdGUgb3V0cHV0IGxlbmd0aCB3aXRoIHBhZGRpbmcgYW5kIGJpdCBsZW5ndGhcbiAqL1xuXG5cbmZ1bmN0aW9uIGdldE91dHB1dExlbmd0aChpbnB1dExlbmd0aDgpIHtcbiAgcmV0dXJuIChpbnB1dExlbmd0aDggKyA2NCA+Pj4gOSA8PCA0KSArIDE0ICsgMTtcbn1cbi8qXG4gKiBDYWxjdWxhdGUgdGhlIE1ENSBvZiBhbiBhcnJheSBvZiBsaXR0bGUtZW5kaWFuIHdvcmRzLCBhbmQgYSBiaXQgbGVuZ3RoLlxuICovXG5cblxuZnVuY3Rpb24gd29yZHNUb01kNSh4LCBsZW4pIHtcbiAgLyogYXBwZW5kIHBhZGRpbmcgKi9cbiAgeFtsZW4gPj4gNV0gfD0gMHg4MCA8PCBsZW4gJSAzMjtcbiAgeFtnZXRPdXRwdXRMZW5ndGgobGVuKSAtIDFdID0gbGVuO1xuICBsZXQgYSA9IDE3MzI1ODQxOTM7XG4gIGxldCBiID0gLTI3MTczMzg3OTtcbiAgbGV0IGMgPSAtMTczMjU4NDE5NDtcbiAgbGV0IGQgPSAyNzE3MzM4Nzg7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB4Lmxlbmd0aDsgaSArPSAxNikge1xuICAgIGNvbnN0IG9sZGEgPSBhO1xuICAgIGNvbnN0IG9sZGIgPSBiO1xuICAgIGNvbnN0IG9sZGMgPSBjO1xuICAgIGNvbnN0IG9sZGQgPSBkO1xuICAgIGEgPSBtZDVmZihhLCBiLCBjLCBkLCB4W2ldLCA3LCAtNjgwODc2OTM2KTtcbiAgICBkID0gbWQ1ZmYoZCwgYSwgYiwgYywgeFtpICsgMV0sIDEyLCAtMzg5NTY0NTg2KTtcbiAgICBjID0gbWQ1ZmYoYywgZCwgYSwgYiwgeFtpICsgMl0sIDE3LCA2MDYxMDU4MTkpO1xuICAgIGIgPSBtZDVmZihiLCBjLCBkLCBhLCB4W2kgKyAzXSwgMjIsIC0xMDQ0NTI1MzMwKTtcbiAgICBhID0gbWQ1ZmYoYSwgYiwgYywgZCwgeFtpICsgNF0sIDcsIC0xNzY0MTg4OTcpO1xuICAgIGQgPSBtZDVmZihkLCBhLCBiLCBjLCB4W2kgKyA1XSwgMTIsIDEyMDAwODA0MjYpO1xuICAgIGMgPSBtZDVmZihjLCBkLCBhLCBiLCB4W2kgKyA2XSwgMTcsIC0xNDczMjMxMzQxKTtcbiAgICBiID0gbWQ1ZmYoYiwgYywgZCwgYSwgeFtpICsgN10sIDIyLCAtNDU3MDU5ODMpO1xuICAgIGEgPSBtZDVmZihhLCBiLCBjLCBkLCB4W2kgKyA4XSwgNywgMTc3MDAzNTQxNik7XG4gICAgZCA9IG1kNWZmKGQsIGEsIGIsIGMsIHhbaSArIDldLCAxMiwgLTE5NTg0MTQ0MTcpO1xuICAgIGMgPSBtZDVmZihjLCBkLCBhLCBiLCB4W2kgKyAxMF0sIDE3LCAtNDIwNjMpO1xuICAgIGIgPSBtZDVmZihiLCBjLCBkLCBhLCB4W2kgKyAxMV0sIDIyLCAtMTk5MDQwNDE2Mik7XG4gICAgYSA9IG1kNWZmKGEsIGIsIGMsIGQsIHhbaSArIDEyXSwgNywgMTgwNDYwMzY4Mik7XG4gICAgZCA9IG1kNWZmKGQsIGEsIGIsIGMsIHhbaSArIDEzXSwgMTIsIC00MDM0MTEwMSk7XG4gICAgYyA9IG1kNWZmKGMsIGQsIGEsIGIsIHhbaSArIDE0XSwgMTcsIC0xNTAyMDAyMjkwKTtcbiAgICBiID0gbWQ1ZmYoYiwgYywgZCwgYSwgeFtpICsgMTVdLCAyMiwgMTIzNjUzNTMyOSk7XG4gICAgYSA9IG1kNWdnKGEsIGIsIGMsIGQsIHhbaSArIDFdLCA1LCAtMTY1Nzk2NTEwKTtcbiAgICBkID0gbWQ1Z2coZCwgYSwgYiwgYywgeFtpICsgNl0sIDksIC0xMDY5NTAxNjMyKTtcbiAgICBjID0gbWQ1Z2coYywgZCwgYSwgYiwgeFtpICsgMTFdLCAxNCwgNjQzNzE3NzEzKTtcbiAgICBiID0gbWQ1Z2coYiwgYywgZCwgYSwgeFtpXSwgMjAsIC0zNzM4OTczMDIpO1xuICAgIGEgPSBtZDVnZyhhLCBiLCBjLCBkLCB4W2kgKyA1XSwgNSwgLTcwMTU1ODY5MSk7XG4gICAgZCA9IG1kNWdnKGQsIGEsIGIsIGMsIHhbaSArIDEwXSwgOSwgMzgwMTYwODMpO1xuICAgIGMgPSBtZDVnZyhjLCBkLCBhLCBiLCB4W2kgKyAxNV0sIDE0LCAtNjYwNDc4MzM1KTtcbiAgICBiID0gbWQ1Z2coYiwgYywgZCwgYSwgeFtpICsgNF0sIDIwLCAtNDA1NTM3ODQ4KTtcbiAgICBhID0gbWQ1Z2coYSwgYiwgYywgZCwgeFtpICsgOV0sIDUsIDU2ODQ0NjQzOCk7XG4gICAgZCA9IG1kNWdnKGQsIGEsIGIsIGMsIHhbaSArIDE0XSwgOSwgLTEwMTk4MDM2OTApO1xuICAgIGMgPSBtZDVnZyhjLCBkLCBhLCBiLCB4W2kgKyAzXSwgMTQsIC0xODczNjM5NjEpO1xuICAgIGIgPSBtZDVnZyhiLCBjLCBkLCBhLCB4W2kgKyA4XSwgMjAsIDExNjM1MzE1MDEpO1xuICAgIGEgPSBtZDVnZyhhLCBiLCBjLCBkLCB4W2kgKyAxM10sIDUsIC0xNDQ0NjgxNDY3KTtcbiAgICBkID0gbWQ1Z2coZCwgYSwgYiwgYywgeFtpICsgMl0sIDksIC01MTQwMzc4NCk7XG4gICAgYyA9IG1kNWdnKGMsIGQsIGEsIGIsIHhbaSArIDddLCAxNCwgMTczNTMyODQ3Myk7XG4gICAgYiA9IG1kNWdnKGIsIGMsIGQsIGEsIHhbaSArIDEyXSwgMjAsIC0xOTI2NjA3NzM0KTtcbiAgICBhID0gbWQ1aGgoYSwgYiwgYywgZCwgeFtpICsgNV0sIDQsIC0zNzg1NTgpO1xuICAgIGQgPSBtZDVoaChkLCBhLCBiLCBjLCB4W2kgKyA4XSwgMTEsIC0yMDIyNTc0NDYzKTtcbiAgICBjID0gbWQ1aGgoYywgZCwgYSwgYiwgeFtpICsgMTFdLCAxNiwgMTgzOTAzMDU2Mik7XG4gICAgYiA9IG1kNWhoKGIsIGMsIGQsIGEsIHhbaSArIDE0XSwgMjMsIC0zNTMwOTU1Nik7XG4gICAgYSA9IG1kNWhoKGEsIGIsIGMsIGQsIHhbaSArIDFdLCA0LCAtMTUzMDk5MjA2MCk7XG4gICAgZCA9IG1kNWhoKGQsIGEsIGIsIGMsIHhbaSArIDRdLCAxMSwgMTI3Mjg5MzM1Myk7XG4gICAgYyA9IG1kNWhoKGMsIGQsIGEsIGIsIHhbaSArIDddLCAxNiwgLTE1NTQ5NzYzMik7XG4gICAgYiA9IG1kNWhoKGIsIGMsIGQsIGEsIHhbaSArIDEwXSwgMjMsIC0xMDk0NzMwNjQwKTtcbiAgICBhID0gbWQ1aGgoYSwgYiwgYywgZCwgeFtpICsgMTNdLCA0LCA2ODEyNzkxNzQpO1xuICAgIGQgPSBtZDVoaChkLCBhLCBiLCBjLCB4W2ldLCAxMSwgLTM1ODUzNzIyMik7XG4gICAgYyA9IG1kNWhoKGMsIGQsIGEsIGIsIHhbaSArIDNdLCAxNiwgLTcyMjUyMTk3OSk7XG4gICAgYiA9IG1kNWhoKGIsIGMsIGQsIGEsIHhbaSArIDZdLCAyMywgNzYwMjkxODkpO1xuICAgIGEgPSBtZDVoaChhLCBiLCBjLCBkLCB4W2kgKyA5XSwgNCwgLTY0MDM2NDQ4Nyk7XG4gICAgZCA9IG1kNWhoKGQsIGEsIGIsIGMsIHhbaSArIDEyXSwgMTEsIC00MjE4MTU4MzUpO1xuICAgIGMgPSBtZDVoaChjLCBkLCBhLCBiLCB4W2kgKyAxNV0sIDE2LCA1MzA3NDI1MjApO1xuICAgIGIgPSBtZDVoaChiLCBjLCBkLCBhLCB4W2kgKyAyXSwgMjMsIC05OTUzMzg2NTEpO1xuICAgIGEgPSBtZDVpaShhLCBiLCBjLCBkLCB4W2ldLCA2LCAtMTk4NjMwODQ0KTtcbiAgICBkID0gbWQ1aWkoZCwgYSwgYiwgYywgeFtpICsgN10sIDEwLCAxMTI2ODkxNDE1KTtcbiAgICBjID0gbWQ1aWkoYywgZCwgYSwgYiwgeFtpICsgMTRdLCAxNSwgLTE0MTYzNTQ5MDUpO1xuICAgIGIgPSBtZDVpaShiLCBjLCBkLCBhLCB4W2kgKyA1XSwgMjEsIC01NzQzNDA1NSk7XG4gICAgYSA9IG1kNWlpKGEsIGIsIGMsIGQsIHhbaSArIDEyXSwgNiwgMTcwMDQ4NTU3MSk7XG4gICAgZCA9IG1kNWlpKGQsIGEsIGIsIGMsIHhbaSArIDNdLCAxMCwgLTE4OTQ5ODY2MDYpO1xuICAgIGMgPSBtZDVpaShjLCBkLCBhLCBiLCB4W2kgKyAxMF0sIDE1LCAtMTA1MTUyMyk7XG4gICAgYiA9IG1kNWlpKGIsIGMsIGQsIGEsIHhbaSArIDFdLCAyMSwgLTIwNTQ5MjI3OTkpO1xuICAgIGEgPSBtZDVpaShhLCBiLCBjLCBkLCB4W2kgKyA4XSwgNiwgMTg3MzMxMzM1OSk7XG4gICAgZCA9IG1kNWlpKGQsIGEsIGIsIGMsIHhbaSArIDE1XSwgMTAsIC0zMDYxMTc0NCk7XG4gICAgYyA9IG1kNWlpKGMsIGQsIGEsIGIsIHhbaSArIDZdLCAxNSwgLTE1NjAxOTgzODApO1xuICAgIGIgPSBtZDVpaShiLCBjLCBkLCBhLCB4W2kgKyAxM10sIDIxLCAxMzA5MTUxNjQ5KTtcbiAgICBhID0gbWQ1aWkoYSwgYiwgYywgZCwgeFtpICsgNF0sIDYsIC0xNDU1MjMwNzApO1xuICAgIGQgPSBtZDVpaShkLCBhLCBiLCBjLCB4W2kgKyAxMV0sIDEwLCAtMTEyMDIxMDM3OSk7XG4gICAgYyA9IG1kNWlpKGMsIGQsIGEsIGIsIHhbaSArIDJdLCAxNSwgNzE4Nzg3MjU5KTtcbiAgICBiID0gbWQ1aWkoYiwgYywgZCwgYSwgeFtpICsgOV0sIDIxLCAtMzQzNDg1NTUxKTtcbiAgICBhID0gc2FmZUFkZChhLCBvbGRhKTtcbiAgICBiID0gc2FmZUFkZChiLCBvbGRiKTtcbiAgICBjID0gc2FmZUFkZChjLCBvbGRjKTtcbiAgICBkID0gc2FmZUFkZChkLCBvbGRkKTtcbiAgfVxuXG4gIHJldHVybiBbYSwgYiwgYywgZF07XG59XG4vKlxuICogQ29udmVydCBhbiBhcnJheSBieXRlcyB0byBhbiBhcnJheSBvZiBsaXR0bGUtZW5kaWFuIHdvcmRzXG4gKiBDaGFyYWN0ZXJzID4yNTUgaGF2ZSB0aGVpciBoaWdoLWJ5dGUgc2lsZW50bHkgaWdub3JlZC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGJ5dGVzVG9Xb3JkcyhpbnB1dCkge1xuICBpZiAoaW5wdXQubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgY29uc3QgbGVuZ3RoOCA9IGlucHV0Lmxlbmd0aCAqIDg7XG4gIGNvbnN0IG91dHB1dCA9IG5ldyBVaW50MzJBcnJheShnZXRPdXRwdXRMZW5ndGgobGVuZ3RoOCkpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoODsgaSArPSA4KSB7XG4gICAgb3V0cHV0W2kgPj4gNV0gfD0gKGlucHV0W2kgLyA4XSAmIDB4ZmYpIDw8IGkgJSAzMjtcbiAgfVxuXG4gIHJldHVybiBvdXRwdXQ7XG59XG4vKlxuICogQWRkIGludGVnZXJzLCB3cmFwcGluZyBhdCAyXjMyLiBUaGlzIHVzZXMgMTYtYml0IG9wZXJhdGlvbnMgaW50ZXJuYWxseVxuICogdG8gd29yayBhcm91bmQgYnVncyBpbiBzb21lIEpTIGludGVycHJldGVycy5cbiAqL1xuXG5cbmZ1bmN0aW9uIHNhZmVBZGQoeCwgeSkge1xuICBjb25zdCBsc3cgPSAoeCAmIDB4ZmZmZikgKyAoeSAmIDB4ZmZmZik7XG4gIGNvbnN0IG1zdyA9ICh4ID4+IDE2KSArICh5ID4+IDE2KSArIChsc3cgPj4gMTYpO1xuICByZXR1cm4gbXN3IDw8IDE2IHwgbHN3ICYgMHhmZmZmO1xufVxuLypcbiAqIEJpdHdpc2Ugcm90YXRlIGEgMzItYml0IG51bWJlciB0byB0aGUgbGVmdC5cbiAqL1xuXG5cbmZ1bmN0aW9uIGJpdFJvdGF0ZUxlZnQobnVtLCBjbnQpIHtcbiAgcmV0dXJuIG51bSA8PCBjbnQgfCBudW0gPj4+IDMyIC0gY250O1xufVxuLypcbiAqIFRoZXNlIGZ1bmN0aW9ucyBpbXBsZW1lbnQgdGhlIGZvdXIgYmFzaWMgb3BlcmF0aW9ucyB0aGUgYWxnb3JpdGhtIHVzZXMuXG4gKi9cblxuXG5mdW5jdGlvbiBtZDVjbW4ocSwgYSwgYiwgeCwgcywgdCkge1xuICByZXR1cm4gc2FmZUFkZChiaXRSb3RhdGVMZWZ0KHNhZmVBZGQoc2FmZUFkZChhLCBxKSwgc2FmZUFkZCh4LCB0KSksIHMpLCBiKTtcbn1cblxuZnVuY3Rpb24gbWQ1ZmYoYSwgYiwgYywgZCwgeCwgcywgdCkge1xuICByZXR1cm4gbWQ1Y21uKGIgJiBjIHwgfmIgJiBkLCBhLCBiLCB4LCBzLCB0KTtcbn1cblxuZnVuY3Rpb24gbWQ1Z2coYSwgYiwgYywgZCwgeCwgcywgdCkge1xuICByZXR1cm4gbWQ1Y21uKGIgJiBkIHwgYyAmIH5kLCBhLCBiLCB4LCBzLCB0KTtcbn1cblxuZnVuY3Rpb24gbWQ1aGgoYSwgYiwgYywgZCwgeCwgcywgdCkge1xuICByZXR1cm4gbWQ1Y21uKGIgXiBjIF4gZCwgYSwgYiwgeCwgcywgdCk7XG59XG5cbmZ1bmN0aW9uIG1kNWlpKGEsIGIsIGMsIGQsIHgsIHMsIHQpIHtcbiAgcmV0dXJuIG1kNWNtbihjIF4gKGIgfCB+ZCksIGEsIGIsIHgsIHMsIHQpO1xufVxuXG52YXIgX2RlZmF1bHQgPSBtZDU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbmNvbnN0IHJhbmRvbVVVSUQgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8ucmFuZG9tVVVJRCAmJiBjcnlwdG8ucmFuZG9tVVVJRC5iaW5kKGNyeXB0byk7XG52YXIgX2RlZmF1bHQgPSB7XG4gIHJhbmRvbVVVSURcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfZGVmYXVsdCA9ICcwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDAnO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfdmFsaWRhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZhbGlkYXRlLmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcGFyc2UodXVpZCkge1xuICBpZiAoISgwLCBfdmFsaWRhdGUuZGVmYXVsdCkodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgbGV0IHY7XG4gIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KDE2KTsgLy8gUGFyc2UgIyMjIyMjIyMtLi4uLi0uLi4uLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDAsIDgpLCAxNikpID4+PiAyNDtcbiAgYXJyWzFdID0gdiA+Pj4gMTYgJiAweGZmO1xuICBhcnJbMl0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzNdID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLSMjIyMtLi4uLi0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFycls0XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSg5LCAxMyksIDE2KSkgPj4+IDg7XG4gIGFycls1XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLSMjIyMtLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbNl0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTQsIDE4KSwgMTYpKSA+Pj4gODtcbiAgYXJyWzddID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tLi4uLi0jIyMjLS4uLi4uLi4uLi4uLlxuXG4gIGFycls4XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgxOSwgMjMpLCAxNikpID4+PiA4O1xuICBhcnJbOV0gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0uLi4uLS4uLi4tIyMjIyMjIyMjIyMjXG4gIC8vIChVc2UgXCIvXCIgdG8gYXZvaWQgMzItYml0IHRydW5jYXRpb24gd2hlbiBiaXQtc2hpZnRpbmcgaGlnaC1vcmRlciBieXRlcylcblxuICBhcnJbMTBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDI0LCAzNiksIDE2KSkgLyAweDEwMDAwMDAwMDAwICYgMHhmZjtcbiAgYXJyWzExXSA9IHYgLyAweDEwMDAwMDAwMCAmIDB4ZmY7XG4gIGFyclsxMl0gPSB2ID4+PiAyNCAmIDB4ZmY7XG4gIGFyclsxM10gPSB2ID4+PiAxNiAmIDB4ZmY7XG4gIGFyclsxNF0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzE1XSA9IHYgJiAweGZmO1xuICByZXR1cm4gYXJyO1xufVxuXG52YXIgX2RlZmF1bHQgPSBwYXJzZTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9kZWZhdWx0ID0gL14oPzpbMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMS01XVswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfXwwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDApJC9pO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBybmc7XG4vLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbmxldCBnZXRSYW5kb21WYWx1ZXM7XG5jb25zdCBybmRzOCA9IG5ldyBVaW50OEFycmF5KDE2KTtcblxuZnVuY3Rpb24gcm5nKCkge1xuICAvLyBsYXp5IGxvYWQgc28gdGhhdCBlbnZpcm9ubWVudHMgdGhhdCBuZWVkIHRvIHBvbHlmaWxsIGhhdmUgYSBjaGFuY2UgdG8gZG8gc29cbiAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAvLyBnZXRSYW5kb21WYWx1ZXMgbmVlZHMgdG8gYmUgaW52b2tlZCBpbiBhIGNvbnRleHQgd2hlcmUgXCJ0aGlzXCIgaXMgYSBDcnlwdG8gaW1wbGVtZW50YXRpb24uXG4gICAgZ2V0UmFuZG9tVmFsdWVzID0gdHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQoY3J5cHRvKTtcblxuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbi8vIEFkYXB0ZWQgZnJvbSBDaHJpcyBWZW5lc3MnIFNIQTEgY29kZSBhdFxuLy8gaHR0cDovL3d3dy5tb3ZhYmxlLXR5cGUuY28udWsvc2NyaXB0cy9zaGExLmh0bWxcbmZ1bmN0aW9uIGYocywgeCwgeSwgeikge1xuICBzd2l0Y2ggKHMpIHtcbiAgICBjYXNlIDA6XG4gICAgICByZXR1cm4geCAmIHkgXiB+eCAmIHo7XG5cbiAgICBjYXNlIDE6XG4gICAgICByZXR1cm4geCBeIHkgXiB6O1xuXG4gICAgY2FzZSAyOlxuICAgICAgcmV0dXJuIHggJiB5IF4geCAmIHogXiB5ICYgejtcblxuICAgIGNhc2UgMzpcbiAgICAgIHJldHVybiB4IF4geSBeIHo7XG4gIH1cbn1cblxuZnVuY3Rpb24gUk9UTCh4LCBuKSB7XG4gIHJldHVybiB4IDw8IG4gfCB4ID4+PiAzMiAtIG47XG59XG5cbmZ1bmN0aW9uIHNoYTEoYnl0ZXMpIHtcbiAgY29uc3QgSyA9IFsweDVhODI3OTk5LCAweDZlZDllYmExLCAweDhmMWJiY2RjLCAweGNhNjJjMWQ2XTtcbiAgY29uc3QgSCA9IFsweDY3NDUyMzAxLCAweGVmY2RhYjg5LCAweDk4YmFkY2ZlLCAweDEwMzI1NDc2LCAweGMzZDJlMWYwXTtcblxuICBpZiAodHlwZW9mIGJ5dGVzID09PSAnc3RyaW5nJykge1xuICAgIGNvbnN0IG1zZyA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChieXRlcykpOyAvLyBVVEY4IGVzY2FwZVxuXG4gICAgYnl0ZXMgPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbXNnLmxlbmd0aDsgKytpKSB7XG4gICAgICBieXRlcy5wdXNoKG1zZy5jaGFyQ29kZUF0KGkpKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkoYnl0ZXMpKSB7XG4gICAgLy8gQ29udmVydCBBcnJheS1saWtlIHRvIEFycmF5XG4gICAgYnl0ZXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChieXRlcyk7XG4gIH1cblxuICBieXRlcy5wdXNoKDB4ODApO1xuICBjb25zdCBsID0gYnl0ZXMubGVuZ3RoIC8gNCArIDI7XG4gIGNvbnN0IE4gPSBNYXRoLmNlaWwobCAvIDE2KTtcbiAgY29uc3QgTSA9IG5ldyBBcnJheShOKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IE47ICsraSkge1xuICAgIGNvbnN0IGFyciA9IG5ldyBVaW50MzJBcnJheSgxNik7XG5cbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IDE2OyArK2opIHtcbiAgICAgIGFycltqXSA9IGJ5dGVzW2kgKiA2NCArIGogKiA0XSA8PCAyNCB8IGJ5dGVzW2kgKiA2NCArIGogKiA0ICsgMV0gPDwgMTYgfCBieXRlc1tpICogNjQgKyBqICogNCArIDJdIDw8IDggfCBieXRlc1tpICogNjQgKyBqICogNCArIDNdO1xuICAgIH1cblxuICAgIE1baV0gPSBhcnI7XG4gIH1cblxuICBNW04gLSAxXVsxNF0gPSAoYnl0ZXMubGVuZ3RoIC0gMSkgKiA4IC8gTWF0aC5wb3coMiwgMzIpO1xuICBNW04gLSAxXVsxNF0gPSBNYXRoLmZsb29yKE1bTiAtIDFdWzE0XSk7XG4gIE1bTiAtIDFdWzE1XSA9IChieXRlcy5sZW5ndGggLSAxKSAqIDggJiAweGZmZmZmZmZmO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgTjsgKytpKSB7XG4gICAgY29uc3QgVyA9IG5ldyBVaW50MzJBcnJheSg4MCk7XG5cbiAgICBmb3IgKGxldCB0ID0gMDsgdCA8IDE2OyArK3QpIHtcbiAgICAgIFdbdF0gPSBNW2ldW3RdO1xuICAgIH1cblxuICAgIGZvciAobGV0IHQgPSAxNjsgdCA8IDgwOyArK3QpIHtcbiAgICAgIFdbdF0gPSBST1RMKFdbdCAtIDNdIF4gV1t0IC0gOF0gXiBXW3QgLSAxNF0gXiBXW3QgLSAxNl0sIDEpO1xuICAgIH1cblxuICAgIGxldCBhID0gSFswXTtcbiAgICBsZXQgYiA9IEhbMV07XG4gICAgbGV0IGMgPSBIWzJdO1xuICAgIGxldCBkID0gSFszXTtcbiAgICBsZXQgZSA9IEhbNF07XG5cbiAgICBmb3IgKGxldCB0ID0gMDsgdCA8IDgwOyArK3QpIHtcbiAgICAgIGNvbnN0IHMgPSBNYXRoLmZsb29yKHQgLyAyMCk7XG4gICAgICBjb25zdCBUID0gUk9UTChhLCA1KSArIGYocywgYiwgYywgZCkgKyBlICsgS1tzXSArIFdbdF0gPj4+IDA7XG4gICAgICBlID0gZDtcbiAgICAgIGQgPSBjO1xuICAgICAgYyA9IFJPVEwoYiwgMzApID4+PiAwO1xuICAgICAgYiA9IGE7XG4gICAgICBhID0gVDtcbiAgICB9XG5cbiAgICBIWzBdID0gSFswXSArIGEgPj4+IDA7XG4gICAgSFsxXSA9IEhbMV0gKyBiID4+PiAwO1xuICAgIEhbMl0gPSBIWzJdICsgYyA+Pj4gMDtcbiAgICBIWzNdID0gSFszXSArIGQgPj4+IDA7XG4gICAgSFs0XSA9IEhbNF0gKyBlID4+PiAwO1xuICB9XG5cbiAgcmV0dXJuIFtIWzBdID4+IDI0ICYgMHhmZiwgSFswXSA+PiAxNiAmIDB4ZmYsIEhbMF0gPj4gOCAmIDB4ZmYsIEhbMF0gJiAweGZmLCBIWzFdID4+IDI0ICYgMHhmZiwgSFsxXSA+PiAxNiAmIDB4ZmYsIEhbMV0gPj4gOCAmIDB4ZmYsIEhbMV0gJiAweGZmLCBIWzJdID4+IDI0ICYgMHhmZiwgSFsyXSA+PiAxNiAmIDB4ZmYsIEhbMl0gPj4gOCAmIDB4ZmYsIEhbMl0gJiAweGZmLCBIWzNdID4+IDI0ICYgMHhmZiwgSFszXSA+PiAxNiAmIDB4ZmYsIEhbM10gPj4gOCAmIDB4ZmYsIEhbM10gJiAweGZmLCBIWzRdID4+IDI0ICYgMHhmZiwgSFs0XSA+PiAxNiAmIDB4ZmYsIEhbNF0gPj4gOCAmIDB4ZmYsIEhbNF0gJiAweGZmXTtcbn1cblxudmFyIF9kZWZhdWx0ID0gc2hhMTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuZXhwb3J0cy51bnNhZmVTdHJpbmdpZnkgPSB1bnNhZmVTdHJpbmdpZnk7XG5cbnZhciBfdmFsaWRhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZhbGlkYXRlLmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWFxuICovXG5jb25zdCBieXRlVG9IZXggPSBbXTtcblxuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXgucHVzaCgoaSArIDB4MTAwKS50b1N0cmluZygxNikuc2xpY2UoMSkpO1xufVxuXG5mdW5jdGlvbiB1bnNhZmVTdHJpbmdpZnkoYXJyLCBvZmZzZXQgPSAwKSB7XG4gIC8vIE5vdGU6IEJlIGNhcmVmdWwgZWRpdGluZyB0aGlzIGNvZGUhICBJdCdzIGJlZW4gdHVuZWQgZm9yIHBlcmZvcm1hbmNlXG4gIC8vIGFuZCB3b3JrcyBpbiB3YXlzIHlvdSBtYXkgbm90IGV4cGVjdC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZC9wdWxsLzQzNFxuICByZXR1cm4gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnkoYXJyLCBvZmZzZXQgPSAwKSB7XG4gIGNvbnN0IHV1aWQgPSB1bnNhZmVTdHJpbmdpZnkoYXJyLCBvZmZzZXQpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCEoMCwgX3ZhbGlkYXRlLmRlZmF1bHQpKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmdpZmllZCBVVUlEIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHJldHVybiB1dWlkO1xufVxuXG52YXIgX2RlZmF1bHQgPSBzdHJpbmdpZnk7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9ybmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3JuZy5qc1wiKSk7XG5cbnZhciBfc3RyaW5naWZ5ID0gcmVxdWlyZShcIi4vc3RyaW5naWZ5LmpzXCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG5sZXQgX25vZGVJZDtcblxubGV0IF9jbG9ja3NlcTsgLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG5cblxubGV0IF9sYXN0TVNlY3MgPSAwO1xubGV0IF9sYXN0TlNlY3MgPSAwOyAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkIGZvciBBUEkgZGV0YWlsc1xuXG5mdW5jdGlvbiB2MShvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICBsZXQgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgY29uc3QgYiA9IGJ1ZiB8fCBuZXcgQXJyYXkoMTYpO1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGV0IG5vZGUgPSBvcHRpb25zLm5vZGUgfHwgX25vZGVJZDtcbiAgbGV0IGNsb2Nrc2VxID0gb3B0aW9ucy5jbG9ja3NlcSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5jbG9ja3NlcSA6IF9jbG9ja3NlcTsgLy8gbm9kZSBhbmQgY2xvY2tzZXEgbmVlZCB0byBiZSBpbml0aWFsaXplZCB0byByYW5kb20gdmFsdWVzIGlmIHRoZXkncmUgbm90XG4gIC8vIHNwZWNpZmllZC4gIFdlIGRvIHRoaXMgbGF6aWx5IHRvIG1pbmltaXplIGlzc3VlcyByZWxhdGVkIHRvIGluc3VmZmljaWVudFxuICAvLyBzeXN0ZW0gZW50cm9weS4gIFNlZSAjMTg5XG5cbiAgaWYgKG5vZGUgPT0gbnVsbCB8fCBjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgY29uc3Qgc2VlZEJ5dGVzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IF9ybmcuZGVmYXVsdCkoKTtcblxuICAgIGlmIChub2RlID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjUsIGNyZWF0ZSBhbmQgNDgtYml0IG5vZGUgaWQsICg0NyByYW5kb20gYml0cyArIG11bHRpY2FzdCBiaXQgPSAxKVxuICAgICAgbm9kZSA9IF9ub2RlSWQgPSBbc2VlZEJ5dGVzWzBdIHwgMHgwMSwgc2VlZEJ5dGVzWzFdLCBzZWVkQnl0ZXNbMl0sIHNlZWRCeXRlc1szXSwgc2VlZEJ5dGVzWzRdLCBzZWVkQnl0ZXNbNV1dO1xuICAgIH1cblxuICAgIGlmIChjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC4yLjIsIHJhbmRvbWl6ZSAoMTQgYml0KSBjbG9ja3NlcVxuICAgICAgY2xvY2tzZXEgPSBfY2xvY2tzZXEgPSAoc2VlZEJ5dGVzWzZdIDw8IDggfCBzZWVkQnl0ZXNbN10pICYgMHgzZmZmO1xuICAgIH1cbiAgfSAvLyBVVUlEIHRpbWVzdGFtcHMgYXJlIDEwMCBuYW5vLXNlY29uZCB1bml0cyBzaW5jZSB0aGUgR3JlZ29yaWFuIGVwb2NoLFxuICAvLyAoMTU4Mi0xMC0xNSAwMDowMCkuICBKU051bWJlcnMgYXJlbid0IHByZWNpc2UgZW5vdWdoIGZvciB0aGlzLCBzb1xuICAvLyB0aW1lIGlzIGhhbmRsZWQgaW50ZXJuYWxseSBhcyAnbXNlY3MnIChpbnRlZ2VyIG1pbGxpc2Vjb25kcykgYW5kICduc2VjcydcbiAgLy8gKDEwMC1uYW5vc2Vjb25kcyBvZmZzZXQgZnJvbSBtc2Vjcykgc2luY2UgdW5peCBlcG9jaCwgMTk3MC0wMS0wMSAwMDowMC5cblxuXG4gIGxldCBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBEYXRlLm5vdygpOyAvLyBQZXIgNC4yLjEuMiwgdXNlIGNvdW50IG9mIHV1aWQncyBnZW5lcmF0ZWQgZHVyaW5nIHRoZSBjdXJyZW50IGNsb2NrXG4gIC8vIGN5Y2xlIHRvIHNpbXVsYXRlIGhpZ2hlciByZXNvbHV0aW9uIGNsb2NrXG5cbiAgbGV0IG5zZWNzID0gb3B0aW9ucy5uc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc2VjcyA6IF9sYXN0TlNlY3MgKyAxOyAvLyBUaW1lIHNpbmNlIGxhc3QgdXVpZCBjcmVhdGlvbiAoaW4gbXNlY3MpXG5cbiAgY29uc3QgZHQgPSBtc2VjcyAtIF9sYXN0TVNlY3MgKyAobnNlY3MgLSBfbGFzdE5TZWNzKSAvIDEwMDAwOyAvLyBQZXIgNC4yLjEuMiwgQnVtcCBjbG9ja3NlcSBvbiBjbG9jayByZWdyZXNzaW9uXG5cbiAgaWYgKGR0IDwgMCAmJiBvcHRpb25zLmNsb2Nrc2VxID09PSB1bmRlZmluZWQpIHtcbiAgICBjbG9ja3NlcSA9IGNsb2Nrc2VxICsgMSAmIDB4M2ZmZjtcbiAgfSAvLyBSZXNldCBuc2VjcyBpZiBjbG9jayByZWdyZXNzZXMgKG5ldyBjbG9ja3NlcSkgb3Igd2UndmUgbW92ZWQgb250byBhIG5ld1xuICAvLyB0aW1lIGludGVydmFsXG5cblxuICBpZiAoKGR0IDwgMCB8fCBtc2VjcyA+IF9sYXN0TVNlY3MpICYmIG9wdGlvbnMubnNlY3MgPT09IHVuZGVmaW5lZCkge1xuICAgIG5zZWNzID0gMDtcbiAgfSAvLyBQZXIgNC4yLjEuMiBUaHJvdyBlcnJvciBpZiB0b28gbWFueSB1dWlkcyBhcmUgcmVxdWVzdGVkXG5cblxuICBpZiAobnNlY3MgPj0gMTAwMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1dWlkLnYxKCk6IENhbid0IGNyZWF0ZSBtb3JlIHRoYW4gMTBNIHV1aWRzL3NlY1wiKTtcbiAgfVxuXG4gIF9sYXN0TVNlY3MgPSBtc2VjcztcbiAgX2xhc3ROU2VjcyA9IG5zZWNzO1xuICBfY2xvY2tzZXEgPSBjbG9ja3NlcTsgLy8gUGVyIDQuMS40IC0gQ29udmVydCBmcm9tIHVuaXggZXBvY2ggdG8gR3JlZ29yaWFuIGVwb2NoXG5cbiAgbXNlY3MgKz0gMTIyMTkyOTI4MDAwMDA7IC8vIGB0aW1lX2xvd2BcblxuICBjb25zdCB0bCA9ICgobXNlY3MgJiAweGZmZmZmZmYpICogMTAwMDAgKyBuc2VjcykgJSAweDEwMDAwMDAwMDtcbiAgYltpKytdID0gdGwgPj4+IDI0ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDE2ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bCAmIDB4ZmY7IC8vIGB0aW1lX21pZGBcblxuICBjb25zdCB0bWggPSBtc2VjcyAvIDB4MTAwMDAwMDAwICogMTAwMDAgJiAweGZmZmZmZmY7XG4gIGJbaSsrXSA9IHRtaCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRtaCAmIDB4ZmY7IC8vIGB0aW1lX2hpZ2hfYW5kX3ZlcnNpb25gXG5cbiAgYltpKytdID0gdG1oID4+PiAyNCAmIDB4ZiB8IDB4MTA7IC8vIGluY2x1ZGUgdmVyc2lvblxuXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMTYgJiAweGZmOyAvLyBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGAgKFBlciA0LjIuMiAtIGluY2x1ZGUgdmFyaWFudClcblxuICBiW2krK10gPSBjbG9ja3NlcSA+Pj4gOCB8IDB4ODA7IC8vIGBjbG9ja19zZXFfbG93YFxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxICYgMHhmZjsgLy8gYG5vZGVgXG5cbiAgZm9yIChsZXQgbiA9IDA7IG4gPCA2OyArK24pIHtcbiAgICBiW2kgKyBuXSA9IG5vZGVbbl07XG4gIH1cblxuICByZXR1cm4gYnVmIHx8ICgwLCBfc3RyaW5naWZ5LnVuc2FmZVN0cmluZ2lmeSkoYik7XG59XG5cbnZhciBfZGVmYXVsdCA9IHYxO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfdiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdjM1LmpzXCIpKTtcblxudmFyIF9tZCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbWQ1LmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuY29uc3QgdjMgPSAoMCwgX3YuZGVmYXVsdCkoJ3YzJywgMHgzMCwgX21kLmRlZmF1bHQpO1xudmFyIF9kZWZhdWx0ID0gdjM7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuVVJMID0gZXhwb3J0cy5ETlMgPSB2b2lkIDA7XG5leHBvcnRzLmRlZmF1bHQgPSB2MzU7XG5cbnZhciBfc3RyaW5naWZ5ID0gcmVxdWlyZShcIi4vc3RyaW5naWZ5LmpzXCIpO1xuXG52YXIgX3BhcnNlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9wYXJzZS5qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIHN0cmluZ1RvQnl0ZXMoc3RyKSB7XG4gIHN0ciA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChzdHIpKTsgLy8gVVRGOCBlc2NhcGVcblxuICBjb25zdCBieXRlcyA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgKytpKSB7XG4gICAgYnl0ZXMucHVzaChzdHIuY2hhckNvZGVBdChpKSk7XG4gIH1cblxuICByZXR1cm4gYnl0ZXM7XG59XG5cbmNvbnN0IEROUyA9ICc2YmE3YjgxMC05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0cy5ETlMgPSBETlM7XG5jb25zdCBVUkwgPSAnNmJhN2I4MTEtOWRhZC0xMWQxLTgwYjQtMDBjMDRmZDQzMGM4JztcbmV4cG9ydHMuVVJMID0gVVJMO1xuXG5mdW5jdGlvbiB2MzUobmFtZSwgdmVyc2lvbiwgaGFzaGZ1bmMpIHtcbiAgZnVuY3Rpb24gZ2VuZXJhdGVVVUlEKHZhbHVlLCBuYW1lc3BhY2UsIGJ1Ziwgb2Zmc2V0KSB7XG4gICAgdmFyIF9uYW1lc3BhY2U7XG5cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgdmFsdWUgPSBzdHJpbmdUb0J5dGVzKHZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hbWVzcGFjZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG5hbWVzcGFjZSA9ICgwLCBfcGFyc2UuZGVmYXVsdCkobmFtZXNwYWNlKTtcbiAgICB9XG5cbiAgICBpZiAoKChfbmFtZXNwYWNlID0gbmFtZXNwYWNlKSA9PT0gbnVsbCB8fCBfbmFtZXNwYWNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbmFtZXNwYWNlLmxlbmd0aCkgIT09IDE2KSB7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ05hbWVzcGFjZSBtdXN0IGJlIGFycmF5LWxpa2UgKDE2IGl0ZXJhYmxlIGludGVnZXIgdmFsdWVzLCAwLTI1NSknKTtcbiAgICB9IC8vIENvbXB1dGUgaGFzaCBvZiBuYW1lc3BhY2UgYW5kIHZhbHVlLCBQZXIgNC4zXG4gICAgLy8gRnV0dXJlOiBVc2Ugc3ByZWFkIHN5bnRheCB3aGVuIHN1cHBvcnRlZCBvbiBhbGwgcGxhdGZvcm1zLCBlLmcuIGBieXRlcyA9XG4gICAgLy8gaGFzaGZ1bmMoWy4uLm5hbWVzcGFjZSwgLi4uIHZhbHVlXSlgXG5cblxuICAgIGxldCBieXRlcyA9IG5ldyBVaW50OEFycmF5KDE2ICsgdmFsdWUubGVuZ3RoKTtcbiAgICBieXRlcy5zZXQobmFtZXNwYWNlKTtcbiAgICBieXRlcy5zZXQodmFsdWUsIG5hbWVzcGFjZS5sZW5ndGgpO1xuICAgIGJ5dGVzID0gaGFzaGZ1bmMoYnl0ZXMpO1xuICAgIGJ5dGVzWzZdID0gYnl0ZXNbNl0gJiAweDBmIHwgdmVyc2lvbjtcbiAgICBieXRlc1s4XSA9IGJ5dGVzWzhdICYgMHgzZiB8IDB4ODA7XG5cbiAgICBpZiAoYnVmKSB7XG4gICAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNjsgKytpKSB7XG4gICAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IGJ5dGVzW2ldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYnVmO1xuICAgIH1cblxuICAgIHJldHVybiAoMCwgX3N0cmluZ2lmeS51bnNhZmVTdHJpbmdpZnkpKGJ5dGVzKTtcbiAgfSAvLyBGdW5jdGlvbiNuYW1lIGlzIG5vdCBzZXR0YWJsZSBvbiBzb21lIHBsYXRmb3JtcyAoIzI3MClcblxuXG4gIHRyeSB7XG4gICAgZ2VuZXJhdGVVVUlELm5hbWUgPSBuYW1lOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgfSBjYXRjaCAoZXJyKSB7fSAvLyBGb3IgQ29tbW9uSlMgZGVmYXVsdCBleHBvcnQgc3VwcG9ydFxuXG5cbiAgZ2VuZXJhdGVVVUlELkROUyA9IEROUztcbiAgZ2VuZXJhdGVVVUlELlVSTCA9IFVSTDtcbiAgcmV0dXJuIGdlbmVyYXRlVVVJRDtcbn0iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9uYXRpdmUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL25hdGl2ZS5qc1wiKSk7XG5cbnZhciBfcm5nID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ybmcuanNcIikpO1xuXG52YXIgX3N0cmluZ2lmeSA9IHJlcXVpcmUoXCIuL3N0cmluZ2lmeS5qc1wiKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgaWYgKF9uYXRpdmUuZGVmYXVsdC5yYW5kb21VVUlEICYmICFidWYgJiYgIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gX25hdGl2ZS5kZWZhdWx0LnJhbmRvbVVVSUQoKTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIGNvbnN0IHJuZHMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgX3JuZy5kZWZhdWx0KSgpOyAvLyBQZXIgNC40LCBzZXQgYml0cyBmb3IgdmVyc2lvbiBhbmQgYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgXG5cblxuICBybmRzWzZdID0gcm5kc1s2XSAmIDB4MGYgfCAweDQwO1xuICBybmRzWzhdID0gcm5kc1s4XSAmIDB4M2YgfCAweDgwOyAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcblxuICBpZiAoYnVmKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHJuZHNbaV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1ZjtcbiAgfVxuXG4gIHJldHVybiAoMCwgX3N0cmluZ2lmeS51bnNhZmVTdHJpbmdpZnkpKHJuZHMpO1xufVxuXG52YXIgX2RlZmF1bHQgPSB2NDtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3YgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3YzNS5qc1wiKSk7XG5cbnZhciBfc2hhID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zaGExLmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuY29uc3QgdjUgPSAoMCwgX3YuZGVmYXVsdCkoJ3Y1JywgMHg1MCwgX3NoYS5kZWZhdWx0KTtcbnZhciBfZGVmYXVsdCA9IHY1O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfcmVnZXggPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3JlZ2V4LmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdmFsaWRhdGUodXVpZCkge1xuICByZXR1cm4gdHlwZW9mIHV1aWQgPT09ICdzdHJpbmcnICYmIF9yZWdleC5kZWZhdWx0LnRlc3QodXVpZCk7XG59XG5cbnZhciBfZGVmYXVsdCA9IHZhbGlkYXRlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfdmFsaWRhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZhbGlkYXRlLmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdmVyc2lvbih1dWlkKSB7XG4gIGlmICghKDAsIF92YWxpZGF0ZS5kZWZhdWx0KSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignSW52YWxpZCBVVUlEJyk7XG4gIH1cblxuICByZXR1cm4gcGFyc2VJbnQodXVpZC5zbGljZSgxNCwgMTUpLCAxNik7XG59XG5cbnZhciBfZGVmYXVsdCA9IHZlcnNpb247XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJpbXBvcnQgeyBjcmVhdGVUYXNrRWxlbWVudCB9IGZyb20gJy4vZWxlbWVudC1jcmVhdG9ycyc7XHJcbmltcG9ydCB7IGZpbHRlckJ0bnMsIHRoZW1lVG9nZ2xlLCB0b2RvQ291bnRlciwgdG9kb0xpc3QgfSBmcm9tICcuL2VsZW1lbnRzJztcclxuaW1wb3J0IHsgZ2V0QWN0aXZlVGFza3NDb3VudCB9IGZyb20gJy4vdGFza3MnO1xyXG5cclxuY29uc3Qgc2V0VGhlbWUgPSB0aGVtZSA9PiB7XHJcblx0ZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGhlbWUnLCB0aGVtZSk7XHJcblx0dGhlbWVUb2dnbGUuZGF0YXNldC50aGVtZSA9IHRoZW1lO1xyXG5cdHJldHVybiB0aGVtZTtcclxufTtcclxuXHJcbmNvbnN0IGFkZFRhc2tUb0xpc3QgPSB0YXNrID0+IHtcclxuXHRjb25zdCB0YXNrRWxlbWVudCA9IGNyZWF0ZVRhc2tFbGVtZW50KHRhc2spO1xyXG5cdHRvZG9MaXN0LmFwcGVuZENoaWxkKHRhc2tFbGVtZW50KTtcclxuXHRyZXR1cm4gdGFza0VsZW1lbnQ7XHJcbn07XHJcblxyXG5jb25zdCBpbmRpY2F0ZUFjdGl2ZSA9IGJ1dHRvbiA9PiB7XHJcblx0cmVtb3ZlQWN0aXZlQ2xhc3NGcm9tQnV0dG9ucygpO1xyXG5cdGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxufTtcclxuXHJcbmNvbnN0IHJlbW92ZUFjdGl2ZUNsYXNzRnJvbUJ1dHRvbnMgPSAoKSA9PiBmaWx0ZXJCdG5zLmZvckVhY2goYnRuID0+IGJ0bi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKSk7XHJcblxyXG5jb25zdCBmaWx0ZXJMaXN0ID0gKGZpbHRlciA9ICdhbGwnKSA9PiB7XHJcblx0aWYgKGZpbHRlciA9PT0gJ2FsbCcpIHtcclxuXHRcdHNob3dBbGxUYXNrcygpO1xyXG5cdFx0cmV0dXJuIGZpbHRlcjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IGFsbFRhc2tzID0gdG9kb0xpc3QucXVlcnlTZWxlY3RvckFsbCgnLnRhc2snKTtcclxuXHRmb3IgKGNvbnN0IHRhc2sgb2YgYWxsVGFza3MpIHtcclxuXHRcdGlmICh0YXNrLmRhdGFzZXQuc3RhdHVzID09PSBmaWx0ZXIpIHRhc2suY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcblx0XHRlbHNlIHRhc2suY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZmlsdGVyO1xyXG59O1xyXG5cclxuY29uc3Qgc2hvd0FsbFRhc2tzID0gKCkgPT4ge1xyXG5cdGNvbnN0IGFsbFRhc2tzID0gdG9kb0xpc3QucXVlcnlTZWxlY3RvckFsbCgnLnRhc2snKTtcclxuXHRmb3IgKGNvbnN0IHRhc2sgb2YgYWxsVGFza3MpIHRhc2suY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XHJcbn07XHJcblxyXG5jb25zdCB1cGRhdGVUb2RvQ291bnRlciA9ICgpID0+IHtcclxuXHRjb25zdCBhY3RpdmVUYXNrc0NvdW50ID0gZ2V0QWN0aXZlVGFza3NDb3VudCgpO1xyXG5cdGNvbnN0IGl0ZW1zRm9ybSA9IGFjdGl2ZVRhc2tzQ291bnQgPT09IDEgPyAnaXRlbScgOiAnaXRlbXMnO1xyXG5cdHRvZG9Db3VudGVyLmlubmVyVGV4dCA9IGAke2FjdGl2ZVRhc2tzQ291bnR9ICR7aXRlbXNGb3JtfSBsZWZ0YDtcclxuXHRyZXR1cm4gYWN0aXZlVGFza3NDb3VudDtcclxufTtcclxuXHJcbmV4cG9ydCB7IHNldFRoZW1lLCBhZGRUYXNrVG9MaXN0LCBpbmRpY2F0ZUFjdGl2ZSwgZmlsdGVyTGlzdCwgc2hvd0FsbFRhc2tzLCB1cGRhdGVUb2RvQ291bnRlciB9O1xyXG4iLCJpbXBvcnQgeyBoYW5kbGVUYXNrU2VsZWN0aW9uLCBoYW5kbGVUYXNrRGVsZXRpb24gfSBmcm9tICcuL2V2ZW50LWhhbmRsZXJzJztcclxuaW1wb3J0IHsgVEFTS19TVEFURVMgfSBmcm9tICcuL3Rhc2tzJztcclxuXHJcbmNvbnN0IElNQUdFX1NSQyA9IHtcclxuXHRjaGVjazogJy4vZGlzdC9pbWFnZXMvaWNvbi1jaGVjay5zdmcnLFxyXG5cdGNyb3NzOiAnLi9kaXN0L2ltYWdlcy9pY29uLWNyb3NzLnN2ZycsXHJcbn07XHJcblxyXG4vLyB0YXNrIGNyZWF0aW9uXHJcbmNvbnN0IGNyZWF0ZVRhc2tFbGVtZW50ID0gKHsgaWQsIGNvbnRlbnQsIHN0YXR1cyB9KSA9PiB7XHJcblx0Y29uc3QgbmV3VGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcblx0LyogYXR0cmlidXRlIHNldHRpbmdzICovXHJcblx0bmV3VGFzay5jbGFzc0xpc3QuYWRkKCd0YXNrJyk7XHJcblx0bmV3VGFzay5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdHVzJywgc3RhdHVzKTtcclxuXHRuZXdUYXNrLnNldEF0dHJpYnV0ZSgnZGF0YS1pZCcsIGlkKTtcclxuXHQvKiBjcmVhdGUgdGFzayBlbGVtZW50cy4uLiAqL1xyXG5cdGNvbnN0IGNoZWNrYm94QnV0dG9uID0gY3JlYXRlQ2hlY2tib3hCdXR0b24oaWQsIHN0YXR1cyk7XHJcblx0Y29uc3QgdGFza0xhYmVsID0gY3JlYXRlVGFza0xhYmVsKGlkLCBjb250ZW50KTtcclxuXHRjb25zdCBkZWxldGVCdXR0b24gPSBjcmVhdGVEZWxldGVUYXNrQnV0dG9uKGlkKTtcclxuXHQvKiBhbmQgYXBwZW5kIHRoZW0gdG8gdGFzayAqL1xyXG5cdG5ld1Rhc2suYXBwZW5kQ2hpbGQoY2hlY2tib3hCdXR0b24pO1xyXG5cdG5ld1Rhc2suYXBwZW5kQ2hpbGQodGFza0xhYmVsKTtcclxuXHRuZXdUYXNrLmFwcGVuZENoaWxkKGRlbGV0ZUJ1dHRvbik7XHJcblx0cmV0dXJuIG5ld1Rhc2s7XHJcbn07XHJcblxyXG5jb25zdCBjcmVhdGVDaGVja2JveEJ1dHRvbiA9ICh0YXNrSWQsIHN0YXR1cykgPT4ge1xyXG5cdGNvbnN0IGNoZWNrYm94QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcblx0LyogY2hlY2sgc3RhdHVzIHRvIHNlZSBpZiBidXR0b24gc2hvdWxkIGJlIHRhZ2dlZCBhcyBjaGVja2VkICovXHJcblx0Y29uc3QgaXNDaGVja2VkID0gc3RhdHVzID09PSBUQVNLX1NUQVRFUy5jb21wbGV0ZWQgPyB0cnVlIDogZmFsc2U7XHJcblx0LyogYXR0cmlidXRlIHNldHRpbmdzICovXHJcblx0Y2hlY2tib3hCdXR0b24uY2xhc3NMaXN0LmFkZCgnY2hlY2stYnV0dG9uJyk7XHJcblx0Y2hlY2tib3hCdXR0b24uc2V0QXR0cmlidXRlKCdyb2xlJywgJ2NoZWNrYm94Jyk7XHJcblx0Y2hlY2tib3hCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsbGVkYnknLCB0YXNrSWQpO1xyXG5cdGNoZWNrYm94QnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1jaGVja2VkJywgaXNDaGVja2VkKTtcclxuXHQvKiBldmVudCBsaXN0ZW5lciAqL1xyXG5cdGNoZWNrYm94QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlVGFza1NlbGVjdGlvbik7XHJcblx0LyogY2hlY2sgaWNvbiAqL1xyXG5cdGNvbnN0IGNoZWNrSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cdGNoZWNrSWNvbi5zcmMgPSBJTUFHRV9TUkMuY2hlY2s7XHJcblx0Y2hlY2tJY29uLmFsdCA9ICcnO1xyXG5cdGNoZWNrYm94QnV0dG9uLmFwcGVuZENoaWxkKGNoZWNrSWNvbik7XHJcblx0cmV0dXJuIGNoZWNrYm94QnV0dG9uO1xyXG59O1xyXG5cclxuY29uc3QgY3JlYXRlVGFza0xhYmVsID0gKHRhc2tJZCwgdGFza1RleHQpID0+IHtcclxuXHRjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuXHRsYWJlbC5jbGFzc0xpc3QuYWRkKCd0YXNrX19sYWJlbCcpO1xyXG5cdGxhYmVsLmlkID0gdGFza0lkO1xyXG5cdGxhYmVsLmlubmVyVGV4dCA9IHRhc2tUZXh0O1xyXG5cdHJldHVybiBsYWJlbDtcclxufTtcclxuXHJcbmNvbnN0IGNyZWF0ZURlbGV0ZVRhc2tCdXR0b24gPSB0YXNrSWQgPT4ge1xyXG5cdC8qIGRlbGV0ZSBidXR0b24gKi9cclxuXHRjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuXHQvKiBhdHRydWJ1dGUgc2V0dGluZ3MgKi9cclxuXHRkZWxldGVCdXR0b24uY2xhc3NMaXN0LmFkZCgndGFza19fZGVsZXRlLWJ1dHRvbicpO1xyXG5cdGRlbGV0ZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknLCB0YXNrSWQpO1xyXG5cdC8qIGV2ZW50IGxpc3RlbmVyICovXHJcblx0ZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlVGFza0RlbGV0aW9uKTtcclxuXHQvKiBoaWRkZW4gZGVsZXRlIHRleHQgKi9cclxuXHRjb25zdCBkZWxldGVUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG5cdGRlbGV0ZVRleHQuY2xhc3NMaXN0LmFkZCgndmlzdWFsbHktaGlkZGVuJyk7XHJcblx0ZGVsZXRlVGV4dC5pbm5lclRleHQgPSAnRGVsZXRlJztcclxuXHQvKiBjcm9zcyBpY29uICovXHJcblx0Y29uc3QgZGVsZXRlSW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcclxuXHRkZWxldGVJbWFnZS5zcmMgPSBJTUFHRV9TUkMuY3Jvc3M7XHJcblx0ZGVsZXRlSW1hZ2UuYWx0ID0gJyc7XHJcblx0LyogYXBwZW5kaW5nIHRleHQgYW5kIGltYWdlIHRvIGJ1dHRvbiAqL1xyXG5cdGRlbGV0ZUJ1dHRvbi5hcHBlbmRDaGlsZChkZWxldGVUZXh0KTtcclxuXHRkZWxldGVCdXR0b24uYXBwZW5kQ2hpbGQoZGVsZXRlSW1hZ2UpO1xyXG5cdHJldHVybiBkZWxldGVCdXR0b247XHJcbn07XHJcblxyXG5leHBvcnQgeyBjcmVhdGVUYXNrRWxlbWVudCwgY3JlYXRlQ2hlY2tib3hCdXR0b24sIGNyZWF0ZVRhc2tMYWJlbCwgY3JlYXRlRGVsZXRlVGFza0J1dHRvbiB9O1xyXG4iLCJjb25zdCB0aGVtZVRvZ2dsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aGVtZS10b2dnbGUnKTtcclxuY29uc3QgdG9kb0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kby1saXN0Jyk7XHJcbmNvbnN0IHRvZG9Gb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvZG8tZm9ybScpO1xyXG5jb25zdCB0b2RvRm9ybUlucHV0ID0gdG9kb0Zvcm0ucXVlcnlTZWxlY3RvcignLnRvZG8tZm9ybV9faW5wdXQnKTtcclxuY29uc3QgdG9kb0Zvcm1TdWJtaXQgPSB0b2RvRm9ybS5xdWVyeVNlbGVjdG9yKCdidXR0b25bdHlwZT1zdWJtaXRdJyk7XHJcbmNvbnN0IGZpbHRlckJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZmlsdGVyLWJ1dHRvbicpO1xyXG5jb25zdCBjbGVhckNvbXBsZXRlZEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jbGVhci1idXR0b24nKTtcclxuY29uc3QgdG9kb0NvdW50ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9kby1jb3VudGVyJyk7XHJcblxyXG5leHBvcnQgeyB0aGVtZVRvZ2dsZSwgdG9kb0xpc3QsIHRvZG9Gb3JtLCB0b2RvRm9ybUlucHV0LCB0b2RvRm9ybVN1Ym1pdCwgZmlsdGVyQnRucywgY2xlYXJDb21wbGV0ZWRCdG4sIHRvZG9Db3VudGVyIH07XHJcbiIsImltcG9ydCB7IGNoYW5nZUNvbG9yVGhlbWUgfSBmcm9tICcuL3RoZW1lJztcclxuaW1wb3J0IHsgaXNCbGFuayB9IGZyb20gJy4vaGVscGVycyc7XHJcbmltcG9ydCB7IGFkZFRhc2tUb0xpc3QsIGZpbHRlckxpc3QsIGluZGljYXRlQWN0aXZlLCB1cGRhdGVUb2RvQ291bnRlciB9IGZyb20gJy4vZG9tLXVwZGF0ZXMnO1xyXG5pbXBvcnQgeyBhZGRUYXNrLCBjaGFuZ2VTdGF0dXMsIHJlbW92ZVRhc2ssIFRBU0tfU1RBVEVTIH0gZnJvbSAnLi90YXNrcyc7XHJcbmltcG9ydCB7IHRoZW1lVG9nZ2xlLCB0b2RvRm9ybSwgdG9kb0Zvcm1JbnB1dCwgdG9kb0xpc3QgfSBmcm9tICcuL2VsZW1lbnRzJztcclxuXHJcbi8qIHRoZW1lIGhhbmRsaW5nICovXHJcbmNvbnN0IGhhbmRsZVRoZW1lVG9nZ2xlID0gZSA9PiB7XHJcblx0Y29uc3QgY3VycmVudFRoZW1lID0gdGhlbWVUb2dnbGUuZGF0YXNldC50aGVtZTtcclxuXHRjb25zdCBuZXdUaGVtZSA9IGN1cnJlbnRUaGVtZSA9PT0gJ2xpZ2h0JyA/ICdkYXJrJyA6ICdsaWdodCc7XHJcblx0Y2hhbmdlQ29sb3JUaGVtZShuZXdUaGVtZSk7XHJcblx0cmV0dXJuIG5ld1RoZW1lO1xyXG59O1xyXG5cclxuLyogZm9ybSBoYW5kbGluZyAqL1xyXG5jb25zdCBoYW5kbGVGb3JtU3VibWlzc2lvbiA9IGUgPT4ge1xyXG5cdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRjb25zdCBpbnB1dFRleHQgPSB0b2RvRm9ybUlucHV0LnZhbHVlO1xyXG5cdGlmICghaXNCbGFuayhpbnB1dFRleHQpKSB7XHJcblx0XHR0b2RvRm9ybS5jbGFzc0xpc3QucmVtb3ZlKCdlcnJvcicpO1xyXG5cdFx0LyogYWRkIHRhc2sgZW5kIGVsZW1lbnQgKi9cclxuXHRcdGNvbnN0IG5ld1Rhc2sgPSBhZGRUYXNrKGlucHV0VGV4dCk7XHJcblx0XHRhZGRUYXNrVG9MaXN0KG5ld1Rhc2spO1xyXG5cdFx0dXBkYXRlVG9kb0NvdW50ZXIoKTtcclxuXHRcdC8qIGNsZWFyIGlucHV0ICovXHJcblx0XHR0b2RvRm9ybUlucHV0LnZhbHVlID0gJyc7XHJcblx0fSBlbHNlIHtcclxuXHRcdHRvZG9Gb3JtLmNsYXNzTGlzdC5hZGQoJ2Vycm9yJyk7XHJcblx0fVxyXG59O1xyXG5cclxuLyogdGFzayBoYW5kbGluZyAqL1xyXG5jb25zdCBoYW5kbGVUYXNrU2VsZWN0aW9uID0gZSA9PiB7XHJcblx0Y29uc3QgYnV0dG9uID0gZS50YXJnZXQ7XHJcblx0Y29uc3QgaXNDaGVja2VkID0gYnV0dG9uLmdldEF0dHJpYnV0ZSgnYXJpYS1jaGVja2VkJykgPT09ICd0cnVlJyA/IHRydWUgOiBmYWxzZTtcclxuXHRjb25zdCB0YXNrTmV3U3RhdHVzID0gIWlzQ2hlY2tlZCA/IFRBU0tfU1RBVEVTLmNvbXBsZXRlZCA6IFRBU0tfU1RBVEVTLmFjdGl2ZTtcclxuXHRidXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWNoZWNrZWQnLCAhaXNDaGVja2VkKTtcclxuXHRjb25zdCBwYXJlbnRUYXNrID0gYnV0dG9uLmNsb3Nlc3QoJy50YXNrJyk7XHJcblx0Y29uc3QgdGFza0lkID0gcGFyZW50VGFzay5kYXRhc2V0LmlkO1xyXG5cdHBhcmVudFRhc2suZGF0YXNldC5zdGF0dXMgPSB0YXNrTmV3U3RhdHVzO1xyXG5cdGNoYW5nZVN0YXR1cyh0YXNrSWQsIHRhc2tOZXdTdGF0dXMpO1xyXG5cdHVwZGF0ZVRvZG9Db3VudGVyKCk7XHJcbn07XHJcblxyXG5jb25zdCBoYW5kbGVUYXNrRGVsZXRpb24gPSBlID0+IHtcclxuXHRjb25zdCBkZWxldGVCdG4gPSBlLnRhcmdldDtcclxuXHRjb25zdCBwYXJlbnRUYXNrID0gZGVsZXRlQnRuLmNsb3Nlc3QoJy50YXNrJyk7XHJcblx0Y29uc3QgdGFza0lkID0gcGFyZW50VGFzay5kYXRhc2V0LmlkO1xyXG5cdHJlbW92ZVRhc2sodGFza0lkKTtcclxuXHRwYXJlbnRUYXNrLnJlbW92ZSgpO1xyXG5cdHVwZGF0ZVRvZG9Db3VudGVyKCk7XHJcbn07XHJcblxyXG4vKiBhY3Rpb24gYnV0dG9ucyBoYW5kbGluZyAqL1xyXG5jb25zdCBoYW5kbGVGaWx0ZXJCdXR0b24gPSBlID0+IHtcclxuXHRjb25zdCBmaWx0ZXIgPSBlLnRhcmdldC5kYXRhc2V0LmZpbHRlcjtcclxuXHRpbmRpY2F0ZUFjdGl2ZShlLnRhcmdldCk7XHJcblx0ZmlsdGVyTGlzdChmaWx0ZXIpO1xyXG59O1xyXG5cclxuY29uc3QgaGFuZGxlQ2xlYXJDb21wbGV0ZWRCdXR0b24gPSBlID0+IHtcclxuXHRjb25zdCBhbGxUYXNrcyA9IHRvZG9MaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YXNrJyk7XHJcblx0Zm9yIChjb25zdCB0YXNrIG9mIGFsbFRhc2tzKSB7XHJcblx0XHRpZiAodGFzay5kYXRhc2V0LnN0YXR1cyA9PT0gVEFTS19TVEFURVMuY29tcGxldGVkKSB7XHJcblx0XHRcdHJlbW92ZVRhc2sodGFzay5kYXRhc2V0LmlkKTtcclxuXHRcdFx0dGFzay5yZW1vdmUoKTtcclxuXHRcdH1cclxuXHR9XHJcblx0dXBkYXRlVG9kb0NvdW50ZXIoKTtcclxufTtcclxuXHJcbmV4cG9ydCB7XHJcblx0aGFuZGxlVGhlbWVUb2dnbGUsXHJcblx0aGFuZGxlRm9ybVN1Ym1pc3Npb24sXHJcblx0aGFuZGxlVGFza1NlbGVjdGlvbixcclxuXHRoYW5kbGVUYXNrRGVsZXRpb24sXHJcblx0aGFuZGxlRmlsdGVyQnV0dG9uLFxyXG5cdGhhbmRsZUNsZWFyQ29tcGxldGVkQnV0dG9uLFxyXG59O1xyXG4iLCJjb25zdCBpc0JsYW5rID0gdmFsdWUgPT4gdmFsdWUgPT09ICcnO1xyXG5cclxuZXhwb3J0IHsgaXNCbGFuayB9O1xyXG4iLCJpbXBvcnQgeyBjbGVhckNvbXBsZXRlZEJ0biwgZmlsdGVyQnRucywgdGhlbWVUb2dnbGUsIHRvZG9Gb3JtLCB0b2RvRm9ybUlucHV0LCB0b2RvRm9ybVN1Ym1pdCB9IGZyb20gJy4vZWxlbWVudHMnO1xyXG5pbXBvcnQgeyBsb2FkVGhlbWUgfSBmcm9tICcuL3RoZW1lJztcclxuaW1wb3J0IHsgbG9hZFRhc2tzIH0gZnJvbSAnLi90YXNrcyc7XHJcbmltcG9ydCB7XHJcblx0aGFuZGxlVGhlbWVUb2dnbGUsXHJcblx0aGFuZGxlRm9ybVN1Ym1pc3Npb24sXHJcblx0aGFuZGxlRmlsdGVyQnV0dG9uLFxyXG5cdGhhbmRsZUNsZWFyQ29tcGxldGVkQnV0dG9uLFxyXG59IGZyb20gJy4vZXZlbnQtaGFuZGxlcnMnO1xyXG5cclxudGhlbWVUb2dnbGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVUaGVtZVRvZ2dsZSk7XHJcbnRvZG9Gb3JtU3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlRm9ybVN1Ym1pc3Npb24pO1xyXG50b2RvRm9ybUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzaW4nLCBlID0+IHRvZG9Gb3JtLmNsYXNzTGlzdC5yZW1vdmUoJ2Vycm9yJykpO1xyXG5maWx0ZXJCdG5zLmZvckVhY2goYnRuID0+IGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUZpbHRlckJ1dHRvbikpO1xyXG5jbGVhckNvbXBsZXRlZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUNsZWFyQ29tcGxldGVkQnV0dG9uKTtcclxuXHJcbmxvYWRUaGVtZSgpO1xyXG5sb2FkVGFza3MoKTtcclxuIiwiaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCc7XHJcbmltcG9ydCB7IGFkZFRhc2tUb0xpc3QsIHVwZGF0ZVRvZG9Db3VudGVyIH0gZnJvbSAnLi9kb20tdXBkYXRlcyc7XHJcblxyXG5jb25zdCBUQVNLX1NUQVRFUyA9IHtcclxuXHRhY3RpdmU6ICdhY3RpdmUnLFxyXG5cdGNvbXBsZXRlZDogJ2NvbXBsZXRlZCcsXHJcbn07XHJcbmxldCB0YXNrcyA9IFtdO1xyXG5cclxuY29uc3QgYWRkVGFzayA9IChjb250ZW50LCBzdGF0dXMgPSBUQVNLX1NUQVRFUy5hY3RpdmUpID0+IHtcclxuXHRjb25zdCB0YXNrID0ge1xyXG5cdFx0aWQ6IHV1aWR2NCgpLFxyXG5cdFx0Y29udGVudCxcclxuXHRcdHN0YXR1cyxcclxuXHR9O1xyXG5cdHRhc2tzLnB1c2godGFzayk7XHJcblx0c2F2ZVRhc2tzVG9Mb2NhbFN0b3JhZ2UoKTtcclxuXHRyZXR1cm4gdGFzaztcclxufTtcclxuXHJcbmNvbnN0IHJlbW92ZVRhc2sgPSB0YXNrSWQgPT4ge1xyXG5cdGNvbnN0IHJlbW92ZWRUYXNrID0gdGFza3MuZmluZCh0YXNrID0+IHRhc2suaWQgPT09IHRhc2tJZCkgfHwge307XHJcblx0dGFza3MgPSB0YXNrcy5maWx0ZXIodGFzayA9PiB0YXNrLmlkICE9PSB0YXNrSWQpO1xyXG5cdHNhdmVUYXNrc1RvTG9jYWxTdG9yYWdlKCk7XHJcblx0cmV0dXJuIHJlbW92ZWRUYXNrO1xyXG59O1xyXG5cclxuY29uc3QgY2hhbmdlU3RhdHVzID0gKHRhc2tJZCwgc3RhdHVzKSA9PiB7XHJcblx0Y29uc3QgdGFza1RvQ2hhbmdlID0gdGFza3MuZmluZCh0YXNrID0+IHRhc2suaWQgPT09IHRhc2tJZCkgfHwge307XHJcblx0aWYgKHRhc2tUb0NoYW5nZSkge1xyXG5cdFx0dGFza1RvQ2hhbmdlLnN0YXR1cyA9IHN0YXR1cztcclxuXHRcdHNhdmVUYXNrc1RvTG9jYWxTdG9yYWdlKCk7XHJcblx0fVxyXG5cdHJldHVybiB0YXNrVG9DaGFuZ2U7XHJcbn07XHJcblxyXG5jb25zdCBnZXRBY3RpdmVUYXNrc0NvdW50ID0gKCkgPT4gdGFza3MuZmlsdGVyKHRhc2sgPT4gdGFzay5zdGF0dXMgPT09IFRBU0tfU1RBVEVTLmFjdGl2ZSkubGVuZ3RoO1xyXG5cclxuY29uc3QgbG9hZFRhc2tzID0gKCkgPT4ge1xyXG5cdGxvYWRUYXNrc0Zyb21TdG9yYWdlKCk7XHJcblx0LyogYWRkaW5nIHRhc2sgZWxlbWVudHMgdG8gRE9NICovXHJcblx0Zm9yIChsZXQgdGFzayBvZiB0YXNrcykgYWRkVGFza1RvTGlzdCh0YXNrKTtcclxuXHR1cGRhdGVUb2RvQ291bnRlcigpO1xyXG59O1xyXG5cclxuY29uc3QgbG9hZFRhc2tzRnJvbVN0b3JhZ2UgPSAoKSA9PiB7XHJcblx0Y29uc3Qgc3RvcmFnZVRhc2tzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGFza3MnKSk7XHJcblx0aWYgKHN0b3JhZ2VUYXNrcyAmJiBzdG9yYWdlVGFza3MubGVuZ3RoID4gMCkge1xyXG5cdFx0Zm9yIChsZXQgdGFzayBvZiBzdG9yYWdlVGFza3MpIHtcclxuXHRcdFx0dGFza3MucHVzaCh7IC4uLnRhc2sgfSk7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3Qgc2F2ZVRhc2tzVG9Mb2NhbFN0b3JhZ2UgPSAoKSA9PiB7XHJcblx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rhc2tzJywgSlNPTi5zdHJpbmdpZnkodGFza3MpKTtcclxufTtcclxuXHJcbmV4cG9ydCB7VEFTS19TVEFURVMsIGxvYWRUYXNrcywgYWRkVGFzaywgcmVtb3ZlVGFzaywgY2hhbmdlU3RhdHVzLCBnZXRBY3RpdmVUYXNrc0NvdW50IH07XHJcbiIsImltcG9ydCB7IHNldFRoZW1lIH0gZnJvbSAnLi9kb20tdXBkYXRlcyc7XHJcblxyXG5jb25zdCBsb2FkVGhlbWUgPSAoKSA9PiB7XHJcblx0Y29uc3QgdGhlbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGhlbWUnKTtcclxuXHRyZXR1cm4gdGhlbWUgPyBzZXRUaGVtZSh0aGVtZSkgOiBsb2FkUHJlZmVyZWRUaGVtZSgpO1xyXG59O1xyXG5cclxuY29uc3QgbG9hZFByZWZlcmVkVGhlbWUgPSAoKSA9PiB7XHJcblx0Y29uc3QgcHJlZmVyZWRUaGVtZSA9XHJcblx0XHR3aW5kb3cubWF0Y2hNZWRpYSAmJiB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXMgPyAnZGFyaycgOiAnbGlnaHQnO1xyXG5cdHJldHVybiBjaGFuZ2VDb2xvclRoZW1lKHByZWZlcmVkVGhlbWUpO1xyXG59O1xyXG5cclxuY29uc3QgY2hhbmdlQ29sb3JUaGVtZSA9IHRoZW1lID0+IHtcclxuXHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGhlbWUnLCB0aGVtZSk7XHJcblx0cmV0dXJuIHNldFRoZW1lKHRoZW1lKTtcclxufTtcclxuXHJcbmV4cG9ydCB7IGxvYWRUaGVtZSwgY2hhbmdlQ29sb3JUaGVtZSB9O1xyXG4iXX0=

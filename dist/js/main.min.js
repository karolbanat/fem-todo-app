!function n(o,a,i){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(s)return s(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}r=a[t]={exports:{}},o[t][0].call(r.exports,function(e){return u(o[t][1][e]||e)},r,r.exports,n,o,a,i)}return a[t].exports}for(var s="function"==typeof require&&require,e=0;e<i.length;e++)u(i[e]);return u}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"NIL",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(r,"parse",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(r,"stringify",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(r,"v1",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(r,"v3",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(r,"v4",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(r,"v5",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(r,"validate",{enumerable:!0,get:function(){return d.default}}),Object.defineProperty(r,"version",{enumerable:!0,get:function(){return s.default}});var n=f(e("./v1.js")),o=f(e("./v3.js")),a=f(e("./v4.js")),i=f(e("./v5.js")),u=f(e("./nil.js")),s=f(e("./version.js")),d=f(e("./validate.js")),l=f(e("./stringify.js")),c=f(e("./parse.js"));function f(e){return e&&e.__esModule?e:{default:e}}},{"./nil.js":4,"./parse.js":5,"./stringify.js":9,"./v1.js":10,"./v3.js":11,"./v4.js":13,"./v5.js":14,"./validate.js":15,"./version.js":16}],2:[function(e,t,r){"use strict";function l(e){return 14+(e+64>>>9<<4)+1}function c(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r}function u(e,t,r,n,o,a){return c((t=c(c(t,e),c(n,a)))<<o|t>>>32-o,r)}function f(e,t,r,n,o,a,i){return u(t&r|~t&n,e,t,o,a,i)}function v(e,t,r,n,o,a,i){return u(t&n|r&~n,e,t,o,a,i)}function p(e,t,r,n,o,a,i){return u(t^r^n,e,t,o,a,i)}function m(e,t,r,n,o,a,i){return u(r^(t|~n),e,t,o,a,i)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(t){if("string"==typeof t){var r=unescape(encodeURIComponent(t));t=new Uint8Array(r.length);for(let e=0;e<r.length;++e)t[e]=r.charCodeAt(e)}var n=function(t,e){t[e>>5]|=128<<e%32,t[l(e)-1]=e;let r=1732584193,n=-271733879,o=-1732584194,a=271733878;for(let e=0;e<t.length;e+=16){var i=r,u=n,s=o,d=a;r=f(r,n,o,a,t[e],7,-680876936),a=f(a,r,n,o,t[e+1],12,-389564586),o=f(o,a,r,n,t[e+2],17,606105819),n=f(n,o,a,r,t[e+3],22,-1044525330),r=f(r,n,o,a,t[e+4],7,-176418897),a=f(a,r,n,o,t[e+5],12,1200080426),o=f(o,a,r,n,t[e+6],17,-1473231341),n=f(n,o,a,r,t[e+7],22,-45705983),r=f(r,n,o,a,t[e+8],7,1770035416),a=f(a,r,n,o,t[e+9],12,-1958414417),o=f(o,a,r,n,t[e+10],17,-42063),n=f(n,o,a,r,t[e+11],22,-1990404162),r=f(r,n,o,a,t[e+12],7,1804603682),a=f(a,r,n,o,t[e+13],12,-40341101),o=f(o,a,r,n,t[e+14],17,-1502002290),n=f(n,o,a,r,t[e+15],22,1236535329),r=v(r,n,o,a,t[e+1],5,-165796510),a=v(a,r,n,o,t[e+6],9,-1069501632),o=v(o,a,r,n,t[e+11],14,643717713),n=v(n,o,a,r,t[e],20,-373897302),r=v(r,n,o,a,t[e+5],5,-701558691),a=v(a,r,n,o,t[e+10],9,38016083),o=v(o,a,r,n,t[e+15],14,-660478335),n=v(n,o,a,r,t[e+4],20,-405537848),r=v(r,n,o,a,t[e+9],5,568446438),a=v(a,r,n,o,t[e+14],9,-1019803690),o=v(o,a,r,n,t[e+3],14,-187363961),n=v(n,o,a,r,t[e+8],20,1163531501),r=v(r,n,o,a,t[e+13],5,-1444681467),a=v(a,r,n,o,t[e+2],9,-51403784),o=v(o,a,r,n,t[e+7],14,1735328473),n=v(n,o,a,r,t[e+12],20,-1926607734),r=p(r,n,o,a,t[e+5],4,-378558),a=p(a,r,n,o,t[e+8],11,-2022574463),o=p(o,a,r,n,t[e+11],16,1839030562),n=p(n,o,a,r,t[e+14],23,-35309556),r=p(r,n,o,a,t[e+1],4,-1530992060),a=p(a,r,n,o,t[e+4],11,1272893353),o=p(o,a,r,n,t[e+7],16,-155497632),n=p(n,o,a,r,t[e+10],23,-1094730640),r=p(r,n,o,a,t[e+13],4,681279174),a=p(a,r,n,o,t[e],11,-358537222),o=p(o,a,r,n,t[e+3],16,-722521979),n=p(n,o,a,r,t[e+6],23,76029189),r=p(r,n,o,a,t[e+9],4,-640364487),a=p(a,r,n,o,t[e+12],11,-421815835),o=p(o,a,r,n,t[e+15],16,530742520),n=p(n,o,a,r,t[e+2],23,-995338651),r=m(r,n,o,a,t[e],6,-198630844),a=m(a,r,n,o,t[e+7],10,1126891415),o=m(o,a,r,n,t[e+14],15,-1416354905),n=m(n,o,a,r,t[e+5],21,-57434055),r=m(r,n,o,a,t[e+12],6,1700485571),a=m(a,r,n,o,t[e+3],10,-1894986606),o=m(o,a,r,n,t[e+10],15,-1051523),n=m(n,o,a,r,t[e+1],21,-2054922799),r=m(r,n,o,a,t[e+8],6,1873313359),a=m(a,r,n,o,t[e+15],10,-30611744),o=m(o,a,r,n,t[e+6],15,-1560198380),n=m(n,o,a,r,t[e+13],21,1309151649),r=m(r,n,o,a,t[e+4],6,-145523070),a=m(a,r,n,o,t[e+11],10,-1120210379),o=m(o,a,r,n,t[e+2],15,718787259),n=m(n,o,a,r,t[e+9],21,-343485551),r=c(r,i),n=c(n,u),o=c(o,s),a=c(a,d)}return[r,n,o,a]}(function(t){if(0===t.length)return[];var r=8*t.length,n=new Uint32Array(l(r));for(let e=0;e<r;e+=8)n[e>>5]|=(255&t[e/8])<<e%32;return n}(t),8*t.length),o=[],a=32*n.length,i="0123456789abcdef";for(let e=0;e<a;e+=8){var u=n[e>>5]>>>e%32&255,u=parseInt(i.charAt(u>>>4&15)+i.charAt(15&u),16);o.push(u)}return o}},{}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);r.default={randomUUID:n}},{}],4:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default="00000000-0000-0000-0000-000000000000"},{}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};r.default=function(e){var t,r;if((0,n.default)(e))return(r=new Uint8Array(16))[0]=(t=parseInt(e.slice(0,8),16))>>>24,r[1]=t>>>16&255,r[2]=t>>>8&255,r[3]=255&t,r[4]=(t=parseInt(e.slice(9,13),16))>>>8,r[5]=255&t,r[6]=(t=parseInt(e.slice(14,18),16))>>>8,r[7]=255&t,r[8]=(t=parseInt(e.slice(19,23),16))>>>8,r[9]=255&t,r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,r[11]=t/4294967296&255,r[12]=t>>>24&255,r[13]=t>>>16&255,r[14]=t>>>8&255,r[15]=255&t,r;throw TypeError("Invalid UUID")}},{"./validate.js":15}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},{}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)};let n;const o=new Uint8Array(16)},{}],8:[function(e,t,r){"use strict";function c(e,t){return e<<t|e>>>32-t}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(r){var u=[1518500249,1859775393,2400959708,3395469782],e=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof r){var t=unescape(encodeURIComponent(r));r=[];for(let e=0;e<t.length;++e)r.push(t.charCodeAt(e))}else Array.isArray(r)||(r=Array.prototype.slice.call(r));r.push(128);var n=r.length/4+2,o=Math.ceil(n/16),s=new Array(o);for(let t=0;t<o;++t){var a=new Uint32Array(16);for(let e=0;e<16;++e)a[e]=r[64*t+4*e]<<24|r[64*t+4*e+1]<<16|r[64*t+4*e+2]<<8|r[64*t+4*e+3];s[t]=a}s[o-1][14]=8*(r.length-1)/Math.pow(2,32),s[o-1][14]=Math.floor(s[o-1][14]),s[o-1][15]=8*(r.length-1)&4294967295;for(let i=0;i<o;++i){var d=new Uint32Array(80);for(let e=0;e<16;++e)d[e]=s[i][e];for(let e=16;e<80;++e)d[e]=c(d[e-3]^d[e-8]^d[e-14]^d[e-16],1);let t=e[0],r=e[1],n=e[2],o=e[3],a=e[4];for(let e=0;e<80;++e){var l=Math.floor(e/20),l=c(t,5)+function(e,t,r,n){switch(e){case 0:return t&r^~t&n;case 1:return t^r^n;case 2:return t&r^t&n^r&n;case 3:return t^r^n}}(l,r,n,o)+a+u[l]+d[e]>>>0;a=o,o=n,n=c(r,30)>>>0,r=t,t=l}e[0]=e[0]+t>>>0,e[1]=e[1]+r>>>0,e[2]=e[2]+n>>>0,e[3]=e[3]+o>>>0,e[4]=e[4]+a>>>0}return[e[0]>>24&255,e[0]>>16&255,e[0]>>8&255,255&e[0],e[1]>>24&255,e[1]>>16&255,e[1]>>8&255,255&e[1],e[2]>>24&255,e[2]>>16&255,e[2]>>8&255,255&e[2],e[3]>>24&255,e[3]>>16&255,e[3]>>8&255,255&e[3],e[4]>>24&255,e[4]>>16&255,e[4]>>8&255,255&e[4]]}},{}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.unsafeStringify=a;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function a(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}r.default=function(e,t=0){if(e=a(e,t),(0,n.default)(e))return e;throw TypeError("Stringified UUID is invalid")}},{"./validate.js":15}],10:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,d=(n=e("./rng.js"))&&n.__esModule?n:{default:n},l=e("./stringify.js");let c,f,v=0,p=0;r.default=function(e,t,r){var n=t&&r||0,o=t||new Array(16);let a=(e=e||{}).node||c,i=void 0!==e.clockseq?e.clockseq:f,u=(null!=a&&null!=i||(r=e.random||(e.rng||d.default)(),null==a&&(a=c=[1|r[0],r[1],r[2],r[3],r[4],r[5]]),null==i&&(i=f=16383&(r[6]<<8|r[7]))),r=void 0!==e.msecs?e.msecs:Date.now(),void 0!==e.nsecs?e.nsecs:p+1);var s=r-v+(u-p)/1e4;if(s<0&&void 0===e.clockseq&&(i=i+1&16383),1e4<=(u=(s<0||r>v)&&void 0===e.nsecs?0:u))throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");v=r,p=u,f=i,s=(1e4*(268435455&(r+=122192928e5))+u)%4294967296,o[n++]=s>>>24&255,o[n++]=s>>>16&255,o[n++]=s>>>8&255,o[n++]=255&s,e=r/4294967296*1e4&268435455,o[n++]=e>>>8&255,o[n++]=255&e,o[n++]=e>>>24&15|16,o[n++]=e>>>16&255,o[n++]=i>>>8|128,o[n++]=255&i;for(let e=0;e<6;++e)o[n+e]=a[e];return t||(0,l.unsafeStringify)(o)}},{"./rng.js":7,"./stringify.js":9}],11:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("./v35.js")),e=o(e("./md5.js"));function o(e){return e&&e.__esModule?e:{default:e}}n=(0,n.default)("v3",48,e.default);r.default=n},{"./md5.js":2,"./v35.js":12}],12:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.URL=r.DNS=void 0,r.default=function(e,i,u){function t(e,t,r,n){var o;if("string"==typeof e&&(e=function(t){t=unescape(encodeURIComponent(t));var r=[];for(let e=0;e<t.length;++e)r.push(t.charCodeAt(e));return r}(e)),16!==(null==(o=t="string"==typeof t?(0,d.default)(t):t)?void 0:o.length))throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let a=new Uint8Array(16+e.length);if(a.set(t),a.set(e,t.length),(a=u(a))[6]=15&a[6]|i,a[8]=63&a[8]|128,r){n=n||0;for(let e=0;e<16;++e)r[n+e]=a[e];return r}return(0,s.unsafeStringify)(a)}try{t.name=e}catch(e){}return t.DNS=n,t.URL=o,t};var s=e("./stringify.js"),d=(e=e("./parse.js"))&&e.__esModule?e:{default:e};const n="6ba7b810-9dad-11d1-80b4-00c04fd430c8",o=(r.DNS=n,"6ba7b811-9dad-11d1-80b4-00c04fd430c8");r.URL=o},{"./parse.js":5,"./stringify.js":9}],13:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=n(e("./native.js")),a=n(e("./rng.js")),i=e("./stringify.js");function n(e){return e&&e.__esModule?e:{default:e}}r.default=function(e,t,r){if(o.default.randomUUID&&!t&&!e)return o.default.randomUUID();var n=(e=e||{}).random||(e.rng||a.default)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=n[e];return t}return(0,i.unsafeStringify)(n)}},{"./native.js":3,"./rng.js":7,"./stringify.js":9}],14:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("./v35.js")),e=o(e("./sha1.js"));function o(e){return e&&e.__esModule?e:{default:e}}n=(0,n.default)("v5",80,e.default);r.default=n},{"./sha1.js":8,"./v35.js":12}],15:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./regex.js"))&&e.__esModule?e:{default:e};r.default=function(e){return"string"==typeof e&&n.default.test(e)}},{"./regex.js":6}],16:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};r.default=function(e){if((0,n.default)(e))return parseInt(e.slice(14,15),16);throw TypeError("Invalid UUID")}},{"./validate.js":15}],17:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.updateTodoCounter=r.taskReorder=r.setTheme=r.indicateActiveFilter=r.hideShowTask=r.getTaskPosition=r.filterList=r.addTaskToList=void 0;var n=e("./element-creators"),o=e("./elements"),a=e("./filter-state"),i=e("./tasks");function u(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=function(e,t){var r;if(e)return"string"==typeof e?s(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.setTheme=function(e){return document.body.setAttribute("data-theme",e),o.themeToggle.dataset.theme=e},r.addTaskToList=function(e){e=(0,n.createTaskElement)(e);return l(e),o.todoList.appendChild(e),e};r.indicateActiveFilter=function(e){d();var t=(0,a.getCurrentFilter)();document.querySelectorAll(".filter-button[data-filter=".concat(t)).forEach(function(e){return e.classList.add("active")})};var d=function(){return o.filterBtns.forEach(function(e){return e.classList.remove("active")})},l=(r.filterList=function(){var e,t=(0,a.getCurrentFilter)(),r=u(o.todoList.querySelectorAll(".task"));try{for(r.s();!(e=r.n()).done;){var n=e.value;l(n)}}catch(e){r.e(e)}finally{r.f()}return t},function(e){var t=(0,a.getCurrentFilter)();return t===a.FILTER_STATES.default||e.dataset.status===t?e.classList.remove("hidden"):e.classList.add("hidden"),t});r.hideShowTask=l,r.getTaskPosition=function(e){var e=o.todoList.querySelector(".task[data-id='".concat(e,"']")),t=e.offsetTop;return{start:t,end:e.offsetHeight+t}},r.taskReorder=function(e,t,r){e=o.todoList.querySelector(".task[data-id='".concat(e,"']")),t=o.todoList.querySelector(".task[data-id='".concat(t,"']"));return e.insertAdjacentElement(-1===r?"beforebegin":"afterend",t),r};r.updateTodoCounter=function(){var e=(0,i.getActiveTasksCount)(),t=1===e?"item":"items";return o.todoCounter.innerText="".concat(e," ").concat(t," left"),e}},{"./element-creators":18,"./elements":19,"./filter-state":21,"./tasks":24}],18:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.createTaskLabel=r.createTaskElement=r.createDeleteTaskButton=r.createCheckboxButton=void 0;var a=e("./event-handlers"),n=e("./tasks"),o="./dist/images/icon-check.svg",i="./dist/images/icon-cross.svg",u=(r.createTaskElement=function(e){var t=e.id,r=e.content,e=e.status,n=document.createElement("li"),e=(n.classList.add("task"),n.setAttribute("data-status",e),n.setAttribute("data-id",t),n.setAttribute("draggable",!0),n.addEventListener("dragstart",a.handleTaskDragStart),u(t,e)),r=s(t,r),t=d(t),o=l();return n.appendChild(e),n.appendChild(r),n.appendChild(t),n.appendChild(o),n},function(e,t){var r=document.createElement("button"),t=t===n.TASK_STATES.completed,e=(r.classList.add("check-button"),r.setAttribute("role","checkbox"),r.setAttribute("aria-labelledby",e),r.setAttribute("aria-checked",t),r.addEventListener("click",a.handleTaskSelection),document.createElement("img"));return e.src=o,e.alt="",r.appendChild(e),r}),s=(r.createCheckboxButton=u,function(e,t){var r=document.createElement("p");return r.classList.add("task__label"),r.id=e,r.innerText=t,r}),d=(r.createTaskLabel=s,function(e){var t=document.createElement("button"),e=(t.classList.add("task__delete-button"),t.setAttribute("aria-describedby",e),t.addEventListener("click",a.handleTaskDeletion),document.createElement("span")),r=(e.classList.add("visually-hidden"),e.innerText="Delete",document.createElement("img"));return r.src=i,r.alt="",t.appendChild(e),t.appendChild(r),t}),l=(r.createDeleteTaskButton=d,function(e){var t=document.createElement("div"),r=(t.classList.add("task__move-controls"),c(e,"up")),e=c(e,"down");return t.appendChild(r),t.appendChild(e),t}),c=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"down",r=document.createElement("button"),e=(r.classList.add("move-button"),r.setAttribute("aria-describedby",e),r.setAttribute("data-direction",t),r.addEventListener("click","up"===t?a.handleMoveTaskUpButton:a.handleMoveTaskDownButton),document.createElement("span")),n=(e.classList.add("visually-hidden"),e.innerText="Move task ".concat(t),document.createElement("i"));return n.classList.add("ti","ti-chevron-".concat(t)),r.appendChild(e),r.appendChild(n),r}},{"./event-handlers":20,"./tasks":24}],19:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.todoList=r.todoFormSubmit=r.todoFormInput=r.todoForm=r.todoCounter=r.themeToggle=r.filterBtns=r.clearCompletedBtn=void 0;var n=document.querySelector(".theme-toggle"),n=(r.themeToggle=n,document.querySelector(".todo-list")),n=(r.todoList=n,document.querySelector(".todo-form")),o=(r.todoForm=n).querySelector(".todo-form__input"),o=(r.todoFormInput=o,n.querySelector("button[type=submit]")),n=(r.todoFormSubmit=o,document.querySelectorAll(".filter-button")),o=(r.filterBtns=n,document.querySelector(".clear-button")),n=(r.clearCompletedBtn=o,document.querySelector("#todo-counter"));r.todoCounter=n},{}],20:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.handleThemeToggle=r.handleTaskSelection=r.handleTaskDrop=r.handleTaskDragStart=r.handleTaskDeletion=r.handleMoveTaskUpButton=r.handleMoveTaskDownButton=r.handleFormSubmission=r.handleFilterButton=r.handleDragOver=r.handleClearCompletedButton=void 0;var n=e("./theme"),o=e("./helpers"),a=e("./dom-updates"),i=e("./tasks"),u=e("./elements"),s=e("./filter-state");function d(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=function(e,t){var r;if(e)return"string"==typeof e?l(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.handleThemeToggle=function(e){var t="light"===u.themeToggle.dataset.theme?"dark":"light";return(0,n.changeColorTheme)(t),t},r.handleFormSubmission=function(e){e.preventDefault();var e=u.todoFormInput.value;(0,o.isBlank)(e)?u.todoForm.classList.add("error"):(u.todoForm.classList.remove("error"),e=(0,i.addTask)(e),(0,a.addTaskToList)(e),(0,a.updateTodoCounter)(),u.todoFormInput.value="")},r.handleTaskSelection=function(e){var e=e.target,t="true"===e.getAttribute("aria-checked"),r=t?i.TASK_STATES.active:i.TASK_STATES.completed,t=(e.setAttribute("aria-checked",!t),e.closest(".task")),e=t.dataset.id;t.dataset.status=r,(0,i.changeStatus)(e,r),(0,a.hideShowTask)(t),(0,a.updateTodoCounter)()},r.handleTaskDeletion=function(e){var e=e.target.closest(".task"),t=e.dataset.id;(0,i.removeTask)(t),e.remove(),(0,a.updateTodoCounter)()},r.handleFilterButton=function(e){e=e.target.dataset.filter;(0,s.setCurrentFilter)(e),(0,a.indicateActiveFilter)(),(0,a.filterList)()},r.handleClearCompletedButton=function(e){var t,r=d(u.todoList.querySelectorAll(".task"));try{for(r.s();!(t=r.n()).done;){var n=t.value;n.dataset.status===i.TASK_STATES.completed&&((0,i.removeTask)(n.dataset.id),n.remove())}}catch(e){r.e(e)}finally{r.f()}(0,a.updateTodoCounter)()},r.handleTaskDragStart=function(e){e.dataTransfer.setData("text/plain",e.target.dataset.id)},r.handleDragOver=function(e){e.preventDefault(),e.dataTransfer.dropEffect="move"},r.handleTaskDrop=function(e){e.preventDefault();var t=e.clientY,e=e.dataTransfer.getData("text/plain"),r=(0,i.findTaskOnPosition)(t),n=r.id,r=r.constraints;e!==n&&(t=t<(r.start+r.end)/2?-1:1,(0,a.taskReorder)(n,e,t),(-1==t?(0,i.insertTaskBefore):(0,i.insertTaskAfter))(n,e))},r.handleMoveTaskUpButton=function(e){var e=e.target.closest(".task").dataset.id,t=(0,i.getPreviousTask)(e).id;(0,a.taskReorder)(t,e,-1),(0,i.insertTaskBefore)(t,e)};r.handleMoveTaskDownButton=function(e){var e=e.target.closest(".task").dataset.id,t=(0,i.getNextTask)(e).id;(0,a.taskReorder)(t,e,1),(0,i.insertTaskAfter)(t,e)}},{"./dom-updates":17,"./elements":19,"./filter-state":21,"./helpers":22,"./tasks":24,"./theme":25}],21:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.setCurrentFilter=r.getCurrentFilter=r.FILTER_STATES=void 0;var n={default:"all",active:"active",completed:"completed"},o=(r.FILTER_STATES=n).default;r.setCurrentFilter=function(){return o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:n.default};r.getCurrentFilter=function(){return o}},{}],22:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isBlank=void 0;r.isBlank=function(e){return""===e}},{}],23:[function(e,t,r){"use strict";var n=e("./elements"),o=e("./theme"),a=e("./tasks"),i=e("./event-handlers");n.themeToggle.addEventListener("click",i.handleThemeToggle),n.todoFormSubmit.addEventListener("click",i.handleFormSubmission),n.todoFormInput.addEventListener("focusin",function(e){return n.todoForm.classList.remove("error")}),n.filterBtns.forEach(function(e){return e.addEventListener("click",i.handleFilterButton)}),n.clearCompletedBtn.addEventListener("click",i.handleClearCompletedButton),n.todoList.addEventListener("dragover",i.handleDragOver),n.todoList.addEventListener("drop",i.handleTaskDrop),(0,o.loadTheme)(),(0,a.loadTasks)()},{"./elements":19,"./event-handlers":20,"./tasks":24,"./theme":25}],24:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.removeTask=r.loadTasks=r.insertTaskBefore=r.insertTaskAfter=r.getPreviousTask=r.getNextTask=r.getActiveTasksCount=r.findTaskOnPosition=r.changeStatus=r.addTask=r.TASK_STATES=void 0;var n=e("uuid"),u=e("./dom-updates");e("./elements");function a(t,e){var r,n=Object.keys(t);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(t),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)),n}function o(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?a(Object(o),!0).forEach(function(e){var t,r;t=n,r=o[e=e],e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))})}return n}function s(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=function(e,t){var r;if(e)return"string"==typeof e?d(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?d(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(t){var e=c.find(function(e){return e.id===t})||{};return c=c.filter(function(e){return e.id!==t}),p(),e}var l={active:"active",completed:"completed"},c=(r.TASK_STATES=l,[]),f=(r.addTask=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:l.active,e={id:(0,n.v4)(),content:e,status:t};return c.push(e),p(),e},r.removeTask=i,r.changeStatus=function(t,e){var r=c.find(function(e){return e.id===t})||{};return r&&(r.status=e,p()),r},r.getActiveTasksCount=function(){return c.filter(function(e){return e.status===l.active}).length},r.findTaskOnPosition=function(e){var t,r=s(c);try{for(r.s();!(t=r.n()).done;){var n=t.value,o=(0,u.getTaskPosition)(n.id),a=o.start,i=o.end;if(a<e&&e<=i)return{id:n.id,constraints:{start:a,end:i}}}}catch(e){r.e(e)}finally{r.f()}return null},r.insertTaskBefore=function(e,t){t=i(t),e=f(e);return c.splice(Math.max(0,e),0,t),p(),e},r.insertTaskAfter=function(e,t){t=i(t),e=f(e);return c.splice(Math.min(c.length,e+1),0,t),p(),e+1},function(t){return c.findIndex(function(e){return e.id===t})}),v=(r.getPreviousTask=function(e){e=f(e);return c[e-1]},r.getNextTask=function(e){e=f(e);return c[e+1]},r.loadTasks=function(){v();var e,t=s(c);try{for(t.s();!(e=t.n()).done;){var r=e.value;(0,u.addTaskToList)(r)}}catch(e){t.e(e)}finally{t.f()}(0,u.updateTodoCounter)()},function(){var e=JSON.parse(localStorage.getItem("tasks"));if(e&&0<e.length){var t,r=s(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;c.push(o({},n))}}catch(e){r.e(e)}finally{r.f()}}}),p=function(){localStorage.setItem("tasks",JSON.stringify(c))}},{"./dom-updates":17,"./elements":19,uuid:1}],25:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.loadTheme=r.changeColorTheme=void 0;var n=e("./dom-updates"),o=(r.loadTheme=function(){var e=localStorage.getItem("theme");return e?(0,n.setTheme)(e):o()},function(){var e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";return a(e)}),a=function(e){return localStorage.setItem("theme",e),(0,n.setTheme)(e)};r.changeColorTheme=a},{"./dom-updates":17}]},{},[23]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

!function n(o,a,i){function u(t,e){if(!a[t]){if(!o[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(s)return s(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}r=a[t]={exports:{}},o[t][0].call(r.exports,function(e){return u(o[t][1][e]||e)},r,r.exports,n,o,a,i)}return a[t].exports}for(var s="function"==typeof require&&require,e=0;e<i.length;e++)u(i[e]);return u}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"NIL",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(r,"parse",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(r,"stringify",{enumerable:!0,get:function(){return d.default}}),Object.defineProperty(r,"v1",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(r,"v3",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(r,"v4",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(r,"v5",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(r,"validate",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(r,"version",{enumerable:!0,get:function(){return s.default}});var n=f(e("./v1.js")),o=f(e("./v3.js")),a=f(e("./v4.js")),i=f(e("./v5.js")),u=f(e("./nil.js")),s=f(e("./version.js")),l=f(e("./validate.js")),d=f(e("./stringify.js")),c=f(e("./parse.js"));function f(e){return e&&e.__esModule?e:{default:e}}},{"./nil.js":4,"./parse.js":5,"./stringify.js":9,"./v1.js":10,"./v3.js":11,"./v4.js":13,"./v5.js":14,"./validate.js":15,"./version.js":16}],2:[function(e,t,r){"use strict";function d(e){return 14+(e+64>>>9<<4)+1}function c(e,t){var r=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(r>>16)<<16|65535&r}function u(e,t,r,n,o,a){return c((t=c(c(t,e),c(n,a)))<<o|t>>>32-o,r)}function f(e,t,r,n,o,a,i){return u(t&r|~t&n,e,t,o,a,i)}function v(e,t,r,n,o,a,i){return u(t&n|r&~n,e,t,o,a,i)}function m(e,t,r,n,o,a,i){return u(t^r^n,e,t,o,a,i)}function p(e,t,r,n,o,a,i){return u(r^(t|~n),e,t,o,a,i)}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(t){if("string"==typeof t){var r=unescape(encodeURIComponent(t));t=new Uint8Array(r.length);for(let e=0;e<r.length;++e)t[e]=r.charCodeAt(e)}var n=function(t,e){t[e>>5]|=128<<e%32,t[d(e)-1]=e;let r=1732584193,n=-271733879,o=-1732584194,a=271733878;for(let e=0;e<t.length;e+=16){var i=r,u=n,s=o,l=a;r=f(r,n,o,a,t[e],7,-680876936),a=f(a,r,n,o,t[e+1],12,-389564586),o=f(o,a,r,n,t[e+2],17,606105819),n=f(n,o,a,r,t[e+3],22,-1044525330),r=f(r,n,o,a,t[e+4],7,-176418897),a=f(a,r,n,o,t[e+5],12,1200080426),o=f(o,a,r,n,t[e+6],17,-1473231341),n=f(n,o,a,r,t[e+7],22,-45705983),r=f(r,n,o,a,t[e+8],7,1770035416),a=f(a,r,n,o,t[e+9],12,-1958414417),o=f(o,a,r,n,t[e+10],17,-42063),n=f(n,o,a,r,t[e+11],22,-1990404162),r=f(r,n,o,a,t[e+12],7,1804603682),a=f(a,r,n,o,t[e+13],12,-40341101),o=f(o,a,r,n,t[e+14],17,-1502002290),n=f(n,o,a,r,t[e+15],22,1236535329),r=v(r,n,o,a,t[e+1],5,-165796510),a=v(a,r,n,o,t[e+6],9,-1069501632),o=v(o,a,r,n,t[e+11],14,643717713),n=v(n,o,a,r,t[e],20,-373897302),r=v(r,n,o,a,t[e+5],5,-701558691),a=v(a,r,n,o,t[e+10],9,38016083),o=v(o,a,r,n,t[e+15],14,-660478335),n=v(n,o,a,r,t[e+4],20,-405537848),r=v(r,n,o,a,t[e+9],5,568446438),a=v(a,r,n,o,t[e+14],9,-1019803690),o=v(o,a,r,n,t[e+3],14,-187363961),n=v(n,o,a,r,t[e+8],20,1163531501),r=v(r,n,o,a,t[e+13],5,-1444681467),a=v(a,r,n,o,t[e+2],9,-51403784),o=v(o,a,r,n,t[e+7],14,1735328473),n=v(n,o,a,r,t[e+12],20,-1926607734),r=m(r,n,o,a,t[e+5],4,-378558),a=m(a,r,n,o,t[e+8],11,-2022574463),o=m(o,a,r,n,t[e+11],16,1839030562),n=m(n,o,a,r,t[e+14],23,-35309556),r=m(r,n,o,a,t[e+1],4,-1530992060),a=m(a,r,n,o,t[e+4],11,1272893353),o=m(o,a,r,n,t[e+7],16,-155497632),n=m(n,o,a,r,t[e+10],23,-1094730640),r=m(r,n,o,a,t[e+13],4,681279174),a=m(a,r,n,o,t[e],11,-358537222),o=m(o,a,r,n,t[e+3],16,-722521979),n=m(n,o,a,r,t[e+6],23,76029189),r=m(r,n,o,a,t[e+9],4,-640364487),a=m(a,r,n,o,t[e+12],11,-421815835),o=m(o,a,r,n,t[e+15],16,530742520),n=m(n,o,a,r,t[e+2],23,-995338651),r=p(r,n,o,a,t[e],6,-198630844),a=p(a,r,n,o,t[e+7],10,1126891415),o=p(o,a,r,n,t[e+14],15,-1416354905),n=p(n,o,a,r,t[e+5],21,-57434055),r=p(r,n,o,a,t[e+12],6,1700485571),a=p(a,r,n,o,t[e+3],10,-1894986606),o=p(o,a,r,n,t[e+10],15,-1051523),n=p(n,o,a,r,t[e+1],21,-2054922799),r=p(r,n,o,a,t[e+8],6,1873313359),a=p(a,r,n,o,t[e+15],10,-30611744),o=p(o,a,r,n,t[e+6],15,-1560198380),n=p(n,o,a,r,t[e+13],21,1309151649),r=p(r,n,o,a,t[e+4],6,-145523070),a=p(a,r,n,o,t[e+11],10,-1120210379),o=p(o,a,r,n,t[e+2],15,718787259),n=p(n,o,a,r,t[e+9],21,-343485551),r=c(r,i),n=c(n,u),o=c(o,s),a=c(a,l)}return[r,n,o,a]}(function(t){if(0===t.length)return[];var r=8*t.length,n=new Uint32Array(d(r));for(let e=0;e<r;e+=8)n[e>>5]|=(255&t[e/8])<<e%32;return n}(t),8*t.length),o=[],a=32*n.length,i="0123456789abcdef";for(let e=0;e<a;e+=8){var u=n[e>>5]>>>e%32&255,u=parseInt(i.charAt(u>>>4&15)+i.charAt(15&u),16);o.push(u)}return o}},{}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);r.default={randomUUID:n}},{}],4:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default="00000000-0000-0000-0000-000000000000"},{}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};r.default=function(e){var t,r;if((0,n.default)(e))return(r=new Uint8Array(16))[0]=(t=parseInt(e.slice(0,8),16))>>>24,r[1]=t>>>16&255,r[2]=t>>>8&255,r[3]=255&t,r[4]=(t=parseInt(e.slice(9,13),16))>>>8,r[5]=255&t,r[6]=(t=parseInt(e.slice(14,18),16))>>>8,r[7]=255&t,r[8]=(t=parseInt(e.slice(19,23),16))>>>8,r[9]=255&t,r[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,r[11]=t/4294967296&255,r[12]=t>>>24&255,r[13]=t>>>16&255,r[14]=t>>>8&255,r[15]=255&t,r;throw TypeError("Invalid UUID")}},{"./validate.js":15}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},{}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(){if(!n&&!(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)};let n;const o=new Uint8Array(16)},{}],8:[function(e,t,r){"use strict";function c(e,t){return e<<t|e>>>32-t}Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.default=function(r){var u=[1518500249,1859775393,2400959708,3395469782],e=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof r){var t=unescape(encodeURIComponent(r));r=[];for(let e=0;e<t.length;++e)r.push(t.charCodeAt(e))}else Array.isArray(r)||(r=Array.prototype.slice.call(r));r.push(128);var n=r.length/4+2,o=Math.ceil(n/16),s=new Array(o);for(let t=0;t<o;++t){var a=new Uint32Array(16);for(let e=0;e<16;++e)a[e]=r[64*t+4*e]<<24|r[64*t+4*e+1]<<16|r[64*t+4*e+2]<<8|r[64*t+4*e+3];s[t]=a}s[o-1][14]=8*(r.length-1)/Math.pow(2,32),s[o-1][14]=Math.floor(s[o-1][14]),s[o-1][15]=8*(r.length-1)&4294967295;for(let i=0;i<o;++i){var l=new Uint32Array(80);for(let e=0;e<16;++e)l[e]=s[i][e];for(let e=16;e<80;++e)l[e]=c(l[e-3]^l[e-8]^l[e-14]^l[e-16],1);let t=e[0],r=e[1],n=e[2],o=e[3],a=e[4];for(let e=0;e<80;++e){var d=Math.floor(e/20),d=c(t,5)+function(e,t,r,n){switch(e){case 0:return t&r^~t&n;case 1:return t^r^n;case 2:return t&r^t&n^r&n;case 3:return t^r^n}}(d,r,n,o)+a+u[d]+l[e]>>>0;a=o,o=n,n=c(r,30)>>>0,r=t,t=d}e[0]=e[0]+t>>>0,e[1]=e[1]+r>>>0,e[2]=e[2]+n>>>0,e[3]=e[3]+o>>>0,e[4]=e[4]+a>>>0}return[e[0]>>24&255,e[0]>>16&255,e[0]>>8&255,255&e[0],e[1]>>24&255,e[1]>>16&255,e[1]>>8&255,255&e[1],e[2]>>24&255,e[2]>>16&255,e[2]>>8&255,255&e[2],e[3]>>24&255,e[3]>>16&255,e[3]>>8&255,255&e[3],e[4]>>24&255,e[4]>>16&255,e[4]>>8&255,255&e[4]]}},{}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0,r.unsafeStringify=a;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function a(e,t=0){return(o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]).toLowerCase()}r.default=function(e,t=0){if(e=a(e,t),(0,n.default)(e))return e;throw TypeError("Stringified UUID is invalid")}},{"./validate.js":15}],10:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,l=(n=e("./rng.js"))&&n.__esModule?n:{default:n},d=e("./stringify.js");let c,f,v=0,m=0;r.default=function(e,t,r){var n=t&&r||0,o=t||new Array(16);let a=(e=e||{}).node||c,i=void 0!==e.clockseq?e.clockseq:f,u=(null!=a&&null!=i||(r=e.random||(e.rng||l.default)(),null==a&&(a=c=[1|r[0],r[1],r[2],r[3],r[4],r[5]]),null==i&&(i=f=16383&(r[6]<<8|r[7]))),r=void 0!==e.msecs?e.msecs:Date.now(),void 0!==e.nsecs?e.nsecs:m+1);var s=r-v+(u-m)/1e4;if(s<0&&void 0===e.clockseq&&(i=i+1&16383),1e4<=(u=(s<0||r>v)&&void 0===e.nsecs?0:u))throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");v=r,m=u,f=i,s=(1e4*(268435455&(r+=122192928e5))+u)%4294967296,o[n++]=s>>>24&255,o[n++]=s>>>16&255,o[n++]=s>>>8&255,o[n++]=255&s,e=r/4294967296*1e4&268435455,o[n++]=e>>>8&255,o[n++]=255&e,o[n++]=e>>>24&15|16,o[n++]=e>>>16&255,o[n++]=i>>>8|128,o[n++]=255&i;for(let e=0;e<6;++e)o[n+e]=a[e];return t||(0,d.unsafeStringify)(o)}},{"./rng.js":7,"./stringify.js":9}],11:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("./v35.js")),e=o(e("./md5.js"));function o(e){return e&&e.__esModule?e:{default:e}}n=(0,n.default)("v3",48,e.default);r.default=n},{"./md5.js":2,"./v35.js":12}],12:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.URL=r.DNS=void 0,r.default=function(e,i,u){function t(e,t,r,n){var o;if("string"==typeof e&&(e=function(t){t=unescape(encodeURIComponent(t));var r=[];for(let e=0;e<t.length;++e)r.push(t.charCodeAt(e));return r}(e)),16!==(null==(o=t="string"==typeof t?(0,l.default)(t):t)?void 0:o.length))throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let a=new Uint8Array(16+e.length);if(a.set(t),a.set(e,t.length),(a=u(a))[6]=15&a[6]|i,a[8]=63&a[8]|128,r){n=n||0;for(let e=0;e<16;++e)r[n+e]=a[e];return r}return(0,s.unsafeStringify)(a)}try{t.name=e}catch(e){}return t.DNS=n,t.URL=o,t};var s=e("./stringify.js"),l=(e=e("./parse.js"))&&e.__esModule?e:{default:e};const n="6ba7b810-9dad-11d1-80b4-00c04fd430c8",o=(r.DNS=n,"6ba7b811-9dad-11d1-80b4-00c04fd430c8");r.URL=o},{"./parse.js":5,"./stringify.js":9}],13:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var o=n(e("./native.js")),a=n(e("./rng.js")),i=e("./stringify.js");function n(e){return e&&e.__esModule?e:{default:e}}r.default=function(e,t,r){if(o.default.randomUUID&&!t&&!e)return o.default.randomUUID();var n=(e=e||{}).random||(e.rng||a.default)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){r=r||0;for(let e=0;e<16;++e)t[r+e]=n[e];return t}return(0,i.unsafeStringify)(n)}},{"./native.js":3,"./rng.js":7,"./stringify.js":9}],14:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("./v35.js")),e=o(e("./sha1.js"));function o(e){return e&&e.__esModule?e:{default:e}}n=(0,n.default)("v5",80,e.default);r.default=n},{"./sha1.js":8,"./v35.js":12}],15:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./regex.js"))&&e.__esModule?e:{default:e};r.default=function(e){return"string"==typeof e&&n.default.test(e)}},{"./regex.js":6}],16:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=(e=e("./validate.js"))&&e.__esModule?e:{default:e};r.default=function(e){if((0,n.default)(e))return parseInt(e.slice(14,15),16);throw TypeError("Invalid UUID")}},{"./validate.js":15}],17:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.updateTodoCounter=r.taskReorder=r.setTheme=r.indicateActiveFilter=r.hideShowTask=r.getTaskPosition=r.filterList=r.addTaskToList=void 0;var n=e("./element-creators"),o=e("./elements"),a=e("./filter-state"),i=e("./tasks");function u(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=function(e,t){var r;if(e)return"string"==typeof e?s(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?s(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.setTheme=function(e){return document.body.setAttribute("data-theme",e),o.themeToggle.dataset.theme=e},r.addTaskToList=function(e){e=(0,n.createTaskElement)(e);return d(e),o.todoList.appendChild(e),e};r.indicateActiveFilter=function(e){l();var t=(0,a.getCurrentFilter)();document.querySelectorAll(".filter-button[data-filter=".concat(t)).forEach(function(e){return e.classList.add("active")})};var l=function(){return o.filterBtns.forEach(function(e){return e.classList.remove("active")})},d=(r.filterList=function(){var e,t=(0,a.getCurrentFilter)(),r=u(o.todoList.querySelectorAll(".task"));try{for(r.s();!(e=r.n()).done;){var n=e.value;d(n)}}catch(e){r.e(e)}finally{r.f()}return t},function(e){var t=(0,a.getCurrentFilter)();return t===a.FILTER_STATES.default||e.dataset.status===t?e.classList.remove("hidden"):e.classList.add("hidden"),t});r.hideShowTask=d,r.getTaskPosition=function(e){var e=o.todoList.querySelector(".task[data-id='".concat(e,"']")),t=e.offsetTop;return{start:t,end:e.offsetHeight+t}},r.taskReorder=function(e,t,r){e=o.todoList.querySelector(".task[data-id='".concat(e,"']")),t=o.todoList.querySelector(".task[data-id='".concat(t,"']"));return e.insertAdjacentElement(-1===r?"beforebegin":"afterend",t),r};r.updateTodoCounter=function(){var e=(0,i.getActiveTasksCount)(),t=1===e?"item":"items";return o.todoCounter.innerText="".concat(e," ").concat(t," left"),e}},{"./element-creators":18,"./elements":19,"./filter-state":21,"./tasks":24}],18:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.createTaskLabel=r.createTaskElement=r.createDeleteTaskButton=r.createCheckboxButton=void 0;var a=e("./event-handlers"),n=e("./tasks"),o="./dist/images/icon-check.svg",i="./dist/images/icon-cross.svg",u=(r.createTaskElement=function(e){var t=e.id,r=e.content,e=e.status,n=document.createElement("li"),e=(n.classList.add("task"),n.setAttribute("data-status",e),n.setAttribute("data-id",t),n.setAttribute("draggable",!0),n.addEventListener("dragstart",a.handleTaskDragStart),u(t,e)),r=s(t,r),t=l(t),o=d();return n.appendChild(e),n.appendChild(r),n.appendChild(t),n.appendChild(o),n},function(e,t){var r=document.createElement("button"),t=t===n.TASK_STATES.completed,e=(r.classList.add("check-button"),r.setAttribute("role","checkbox"),r.setAttribute("aria-labelledby",e),r.setAttribute("aria-checked",t),r.addEventListener("click",a.handleTaskSelection),document.createElement("img"));return e.src=o,e.alt="",r.appendChild(e),r}),s=(r.createCheckboxButton=u,function(e,t){var r=document.createElement("p");return r.classList.add("task__label"),r.id=e,r.innerText=t,r}),l=(r.createTaskLabel=s,function(e){var t=document.createElement("button"),e=(t.classList.add("task__delete-button"),t.setAttribute("aria-describedby",e),t.addEventListener("click",a.handleTaskDeletion),document.createElement("span")),r=(e.classList.add("visually-hidden"),e.innerText="Delete",document.createElement("img"));return r.src=i,r.alt="",t.appendChild(e),t.appendChild(r),t}),d=(r.createDeleteTaskButton=l,function(e){var t=document.createElement("div"),r=(t.classList.add("task__move-controls"),c(e,"up")),e=c(e,"down");return t.appendChild(r),t.appendChild(e),t}),c=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"down",r=document.createElement("button"),e=(r.classList.add("move-button"),r.setAttribute("aria-describedby",e),r.setAttribute("data-direction",t),document.createElement("span")),n=(e.classList.add("visually-hidden"),e.innerText="Move task ".concat(t),document.createElement("i"));return n.classList.add("ti","ti-chevron-".concat(t)),r.appendChild(e),r.appendChild(n),r}},{"./event-handlers":20,"./tasks":24}],19:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.todoList=r.todoFormSubmit=r.todoFormInput=r.todoForm=r.todoCounter=r.themeToggle=r.filterBtns=r.clearCompletedBtn=void 0;var n=document.querySelector(".theme-toggle"),n=(r.themeToggle=n,document.querySelector(".todo-list")),n=(r.todoList=n,document.querySelector(".todo-form")),o=(r.todoForm=n).querySelector(".todo-form__input"),o=(r.todoFormInput=o,n.querySelector("button[type=submit]")),n=(r.todoFormSubmit=o,document.querySelectorAll(".filter-button")),o=(r.filterBtns=n,document.querySelector(".clear-button")),n=(r.clearCompletedBtn=o,document.querySelector("#todo-counter"));r.todoCounter=n},{}],20:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.handleThemeToggle=r.handleTaskSelection=r.handleTaskDrop=r.handleTaskDragStart=r.handleTaskDeletion=r.handleFormSubmission=r.handleFilterButton=r.handleDragOver=r.handleClearCompletedButton=void 0;var n=e("./theme"),o=e("./helpers"),a=e("./dom-updates"),i=e("./tasks"),u=e("./elements"),s=e("./filter-state");function l(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=function(e,t){var r;if(e)return"string"==typeof e?d(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?d(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.handleThemeToggle=function(e){var t="light"===u.themeToggle.dataset.theme?"dark":"light";return(0,n.changeColorTheme)(t),t},r.handleFormSubmission=function(e){e.preventDefault();var e=u.todoFormInput.value;(0,o.isBlank)(e)?u.todoForm.classList.add("error"):(u.todoForm.classList.remove("error"),e=(0,i.addTask)(e),(0,a.addTaskToList)(e),(0,a.updateTodoCounter)(),u.todoFormInput.value="")},r.handleTaskSelection=function(e){var e=e.target,t="true"===e.getAttribute("aria-checked"),r=t?i.TASK_STATES.active:i.TASK_STATES.completed,t=(e.setAttribute("aria-checked",!t),e.closest(".task")),e=t.dataset.id;t.dataset.status=r,(0,i.changeStatus)(e,r),(0,a.hideShowTask)(t),(0,a.updateTodoCounter)()},r.handleTaskDeletion=function(e){var e=e.target.closest(".task"),t=e.dataset.id;(0,i.removeTask)(t),e.remove(),(0,a.updateTodoCounter)()},r.handleFilterButton=function(e){e=e.target.dataset.filter;(0,s.setCurrentFilter)(e),(0,a.indicateActiveFilter)(),(0,a.filterList)()},r.handleClearCompletedButton=function(e){var t,r=l(u.todoList.querySelectorAll(".task"));try{for(r.s();!(t=r.n()).done;){var n=t.value;n.dataset.status===i.TASK_STATES.completed&&((0,i.removeTask)(n.dataset.id),n.remove())}}catch(e){r.e(e)}finally{r.f()}(0,a.updateTodoCounter)()},r.handleTaskDragStart=function(e){e.dataTransfer.setData("text/plain",e.target.dataset.id)},r.handleDragOver=function(e){e.preventDefault(),e.dataTransfer.dropEffect="move"};r.handleTaskDrop=function(e){e.preventDefault();var t=e.clientY,e=e.dataTransfer.getData("text/plain"),r=(0,i.findTaskOnPosition)(t),n=r.id,r=r.constraints;e!==n&&(t=t<(r.start+r.end)/2?-1:1,(0,a.taskReorder)(n,e,t),(-1==t?(0,i.insertTaskBefore):(0,i.insertTaskAfter))(n,e))}},{"./dom-updates":17,"./elements":19,"./filter-state":21,"./helpers":22,"./tasks":24,"./theme":25}],21:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.setCurrentFilter=r.getCurrentFilter=r.FILTER_STATES=void 0;var n={default:"all",active:"active",completed:"completed"},o=(r.FILTER_STATES=n).default;r.setCurrentFilter=function(){return o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:n.default};r.getCurrentFilter=function(){return o}},{}],22:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isBlank=void 0;r.isBlank=function(e){return""===e}},{}],23:[function(e,t,r){"use strict";var n=e("./elements"),o=e("./theme"),a=e("./tasks"),i=e("./event-handlers");n.themeToggle.addEventListener("click",i.handleThemeToggle),n.todoFormSubmit.addEventListener("click",i.handleFormSubmission),n.todoFormInput.addEventListener("focusin",function(e){return n.todoForm.classList.remove("error")}),n.filterBtns.forEach(function(e){return e.addEventListener("click",i.handleFilterButton)}),n.clearCompletedBtn.addEventListener("click",i.handleClearCompletedButton),n.todoList.addEventListener("dragover",i.handleDragOver),n.todoList.addEventListener("drop",i.handleTaskDrop),(0,o.loadTheme)(),(0,a.loadTasks)()},{"./elements":19,"./event-handlers":20,"./tasks":24,"./theme":25}],24:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.removeTask=r.loadTasks=r.insertTaskBefore=r.insertTaskAfter=r.getActiveTasksCount=r.findTaskOnPosition=r.changeStatus=r.addTask=r.TASK_STATES=void 0;var n=e("uuid"),u=e("./dom-updates");e("./elements");function a(t,e){var r,n=Object.keys(t);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(t),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)),n}function o(n){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?a(Object(o),!0).forEach(function(e){var t,r;t=n,r=o[e=e],e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))})}return n}function s(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=function(e,t){var r;if(e)return"string"==typeof e?l(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function i(t){var e=c.find(function(e){return e.id===t})||{};return c=c.filter(function(e){return e.id!==t}),m(),e}var d={active:"active",completed:"completed"},c=(r.TASK_STATES=d,[]),f=(r.addTask=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:d.active,e={id:(0,n.v4)(),content:e,status:t};return c.push(e),m(),e},r.removeTask=i,r.changeStatus=function(t,e){var r=c.find(function(e){return e.id===t})||{};return r&&(r.status=e,m()),r},r.getActiveTasksCount=function(){return c.filter(function(e){return e.status===d.active}).length},r.findTaskOnPosition=function(e){var t,r=s(c);try{for(r.s();!(t=r.n()).done;){var n=t.value,o=(0,u.getTaskPosition)(n.id),a=o.start,i=o.end;if(a<e&&e<=i)return{id:n.id,constraints:{start:a,end:i}}}}catch(e){r.e(e)}finally{r.f()}return null},r.insertTaskBefore=function(e,t){t=i(t),e=f(e);return c.splice(Math.max(0,e),0,t),m(),e},r.insertTaskAfter=function(e,t){t=i(t),e=f(e);return c.splice(Math.min(c.length,e+1),0,t),m(),e+1},function(t){return c.findIndex(function(e){return e.id===t})}),v=(r.loadTasks=function(){v();var e,t=s(c);try{for(t.s();!(e=t.n()).done;){var r=e.value;(0,u.addTaskToList)(r)}}catch(e){t.e(e)}finally{t.f()}(0,u.updateTodoCounter)()},function(){var e=JSON.parse(localStorage.getItem("tasks"));if(e&&0<e.length){var t,r=s(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;c.push(o({},n))}}catch(e){r.e(e)}finally{r.f()}}}),m=function(){localStorage.setItem("tasks",JSON.stringify(c))}},{"./dom-updates":17,"./elements":19,uuid:1}],25:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.loadTheme=r.changeColorTheme=void 0;var n=e("./dom-updates"),o=(r.loadTheme=function(){var e=localStorage.getItem("theme");return e?(0,n.setTheme)(e):o()},function(){var e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";return a(e)}),a=function(e){return localStorage.setItem("theme",e),(0,n.setTheme)(e)};r.changeColorTheme=a},{"./dom-updates":17}]},{},[23]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9tZDUtYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3QvbmF0aXZlLWJyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L25pbC5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3QvcGFyc2UuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L3JlZ2V4LmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9ybmctYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3Qvc2hhMS1icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9zdHJpbmdpZnkuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L3YxLmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92My5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjM1LmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92NC5qcyIsIm5vZGVfbW9kdWxlcy91dWlkL2Rpc3QvdjUuanMiLCJub2RlX21vZHVsZXMvdXVpZC9kaXN0L3ZhbGlkYXRlLmpzIiwibm9kZV9tb2R1bGVzL3V1aWQvZGlzdC92ZXJzaW9uLmpzIiwic3JjL2pzL2RvbS11cGRhdGVzLmpzIiwic3JjL2pzL2VsZW1lbnQtY3JlYXRvcnMuanMiLCJzcmMvanMvZWxlbWVudHMuanMiLCJzcmMvanMvZXZlbnQtaGFuZGxlcnMuanMiLCJzcmMvanMvZmlsdGVyLXN0YXRlLmpzIiwic3JjL2pzL2hlbHBlcnMuanMiLCJzcmMvanMvbWFpbi5qcyIsInNyYy9qcy90YXNrcy5qcyIsInNyYy9qcy90aGVtZS5qcyJdLCJuYW1lcyI6WyJyIiwiZSIsIm4iLCJ0IiwibyIsImkiLCJmIiwiYyIsInJlcXVpcmUiLCJ1IiwiYSIsIkVycm9yIiwiY29kZSIsInAiLCJleHBvcnRzIiwiY2FsbCIsImxlbmd0aCIsIjEiLCJtb2R1bGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIl9uaWwiLCJkZWZhdWx0IiwiX3BhcnNlIiwiX3N0cmluZ2lmeSIsIl92IiwiX3YyIiwiX3YzIiwiX3Y0IiwiX3ZhbGlkYXRlIiwiX3ZlcnNpb24iLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsImdldE91dHB1dExlbmd0aCIsImlucHV0TGVuZ3RoOCIsInNhZmVBZGQiLCJ4IiwieSIsImxzdyIsIm1kNWNtbiIsInEiLCJiIiwicyIsIm51bSIsIm1kNWZmIiwiZCIsIm1kNWdnIiwibWQ1aGgiLCJtZDVpaSIsImJ5dGVzIiwibXNnIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJVaW50OEFycmF5IiwibGV0IiwiY2hhckNvZGVBdCIsIm1kNVRvSGV4RW5jb2RlZEFycmF5IiwiaW5wdXQiLCJsZW4iLCJvbGRhIiwib2xkYiIsIm9sZGMiLCJvbGRkIiwibGVuZ3RoOCIsIm91dHB1dCIsIlVpbnQzMkFycmF5IiwibGVuZ3RoMzIiLCJoZXhUYWIiLCJoZXgiLCJwYXJzZUludCIsImNoYXJBdCIsInB1c2giLCJyYW5kb21VVUlEIiwiY3J5cHRvIiwiYmluZCIsInV1aWQiLCJ2IiwiYXJyIiwic2xpY2UiLCJUeXBlRXJyb3IiLCJnZXRSYW5kb21WYWx1ZXMiLCJybmRzOCIsIlJPVEwiLCJLIiwiSCIsIkFycmF5IiwiaXNBcnJheSIsInByb3RvdHlwZSIsImwiLCJOIiwiTWF0aCIsImNlaWwiLCJNIiwiaiIsInBvdyIsImZsb29yIiwiVyIsIlQiLCJ6IiwidW5zYWZlU3RyaW5naWZ5IiwiYnl0ZVRvSGV4IiwidG9TdHJpbmciLCJvZmZzZXQiLCJ0b0xvd2VyQ2FzZSIsIl9ybmciLCJfbm9kZUlkIiwiX2Nsb2Nrc2VxIiwiX2xhc3RNU2VjcyIsIl9sYXN0TlNlY3MiLCJvcHRpb25zIiwiYnVmIiwibm9kZSIsImNsb2Nrc2VxIiwidW5kZWZpbmVkIiwibnNlY3MiLCJzZWVkQnl0ZXMiLCJyYW5kb20iLCJybmciLCJtc2VjcyIsIkRhdGUiLCJub3ciLCJkdCIsInRsIiwidG1oIiwiX21kIiwidjMiLCJVUkwiLCJETlMiLCJuYW1lIiwidmVyc2lvbiIsImhhc2hmdW5jIiwiZ2VuZXJhdGVVVUlEIiwibmFtZXNwYWNlIiwiX25hbWVzcGFjZSIsInN0ciIsInNldCIsImVyciIsIl9uYXRpdmUiLCJybmRzIiwiX3NoYSIsInY1IiwiX3JlZ2V4IiwidGVzdCIsIl9lbGVtZW50Q3JlYXRvcnMiLCJfZWxlbWVudHMiLCJfZmlsdGVyU3RhdGUiLCJfdGFza3MiLCJfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIsImFsbG93QXJyYXlMaWtlIiwibm9ybWFsQ29tcGxldGlvbiIsImRpZEVyciIsIml0IiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJzdGVwIiwibmV4dCIsImRvbmUiLCJfZTIiLCJtaW5MZW4iLCJfYXJyYXlMaWtlVG9BcnJheSIsImNvbnN0cnVjdG9yIiwiZnJvbSIsIkYiLCJfZSIsImFycjIiLCJzZXRUaGVtZSIsInRoZW1lIiwiZG9jdW1lbnQiLCJib2R5Iiwic2V0QXR0cmlidXRlIiwidGhlbWVUb2dnbGUiLCJkYXRhc2V0IiwiYWRkVGFza1RvTGlzdCIsInRhc2siLCJ0YXNrRWxlbWVudCIsImNyZWF0ZVRhc2tFbGVtZW50IiwiaGlkZVNob3dUYXNrIiwidG9kb0xpc3QiLCJhcHBlbmRDaGlsZCIsImluZGljYXRlQWN0aXZlRmlsdGVyIiwiXyIsInJlbW92ZUFjdGl2ZUNsYXNzRnJvbUJ1dHRvbnMiLCJmaWx0ZXIiLCJnZXRDdXJyZW50RmlsdGVyIiwicXVlcnlTZWxlY3RvckFsbCIsImNvbmNhdCIsImZvckVhY2giLCJidG4iLCJjbGFzc0xpc3QiLCJhZGQiLCJmaWx0ZXJCdG5zIiwicmVtb3ZlIiwiZmlsdGVyTGlzdCIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiRklMVEVSX1NUQVRFUyIsInN0YXR1cyIsImdldFRhc2tQb3NpdGlvbiIsInRhc2tJZCIsInF1ZXJ5U2VsZWN0b3IiLCJ0YXNrWSIsIm9mZnNldFRvcCIsInN0YXJ0IiwiZW5kIiwib2Zmc2V0SGVpZ2h0IiwidGFza1Jlb3JkZXIiLCJyZWxhdGl2ZVRhc2tJZCIsInRhc2tUb0luc2VydElkIiwiZGlyZWN0aW9uIiwicmVsYXRpdmVUYXNrRWxlbWVudCIsInRhc2tUb0luc2VydEVsZW1lbnQiLCJpbnNlcnRBZGphY2VudEVsZW1lbnQiLCJ1cGRhdGVUb2RvQ291bnRlciIsImFjdGl2ZVRhc2tzQ291bnQiLCJnZXRBY3RpdmVUYXNrc0NvdW50IiwiaXRlbXNGb3JtIiwidG9kb0NvdW50ZXIiLCJpbm5lclRleHQiLCJfZXZlbnRIYW5kbGVycyIsIklNQUdFX1NSQyIsImNyZWF0ZUNoZWNrYm94QnV0dG9uIiwiX3JlZiIsImlkIiwiY29udGVudCIsIm5ld1Rhc2siLCJjcmVhdGVFbGVtZW50IiwiY2hlY2tib3hCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlVGFza0RyYWdTdGFydCIsInRhc2tMYWJlbCIsImNyZWF0ZVRhc2tMYWJlbCIsImRlbGV0ZUJ1dHRvbiIsImNyZWF0ZURlbGV0ZVRhc2tCdXR0b24iLCJtb3ZlQ29udHJvbHMiLCJjcmVhdGVNb3ZlQ29udHJvbHMiLCJpc0NoZWNrZWQiLCJUQVNLX1NUQVRFUyIsImNvbXBsZXRlZCIsImNoZWNrSWNvbiIsImhhbmRsZVRhc2tTZWxlY3Rpb24iLCJzcmMiLCJhbHQiLCJ0YXNrVGV4dCIsImxhYmVsIiwiZGVsZXRlVGV4dCIsImhhbmRsZVRhc2tEZWxldGlvbiIsImRlbGV0ZUltYWdlIiwiY29udHJvbHNDb250YWluZXIiLCJtb3ZlVXBCdXR0b24iLCJjcmVhdGVNb3ZlQnV0dG9uIiwibW92ZURvd25CdXR0b24iLCJhcmd1bWVudHMiLCJtb3ZlQnV0dG9uIiwibW92ZVRleHQiLCJidXR0b25JY29uIiwidG9kb0Zvcm0iLCJ0b2RvRm9ybUlucHV0IiwidG9kb0Zvcm1TdWJtaXQiLCJjbGVhckNvbXBsZXRlZEJ0biIsIl90aGVtZSIsIl9oZWxwZXJzIiwiX2RvbVVwZGF0ZXMiLCJoYW5kbGVUaGVtZVRvZ2dsZSIsIm5ld1RoZW1lIiwiY2hhbmdlQ29sb3JUaGVtZSIsImhhbmRsZUZvcm1TdWJtaXNzaW9uIiwicHJldmVudERlZmF1bHQiLCJpbnB1dFRleHQiLCJpc0JsYW5rIiwiYWRkVGFzayIsImJ1dHRvbiIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsInRhc2tOZXdTdGF0dXMiLCJhY3RpdmUiLCJwYXJlbnRUYXNrIiwiY2xvc2VzdCIsImNoYW5nZVN0YXR1cyIsInJlbW92ZVRhc2siLCJoYW5kbGVGaWx0ZXJCdXR0b24iLCJzZXRDdXJyZW50RmlsdGVyIiwiaGFuZGxlQ2xlYXJDb21wbGV0ZWRCdXR0b24iLCJkYXRhVHJhbnNmZXIiLCJzZXREYXRhIiwiaGFuZGxlRHJhZ092ZXIiLCJkcm9wRWZmZWN0IiwiaGFuZGxlVGFza0Ryb3AiLCJtb3VzZVkiLCJjbGllbnRZIiwiZHJhZ2dlZFRhc2tJZCIsImdldERhdGEiLCJfZmluZFRhc2tPblBvc2l0aW9uIiwiZmluZFRhc2tPblBvc2l0aW9uIiwiY29uc3RyYWludHMiLCJpbnNlcnREaXJlY3Rpb24iLCJpbnNlcnRUYXNrQmVmb3JlIiwiaW5zZXJ0VGFza0FmdGVyIiwiY3VycmVudEZpbHRlciIsImxvYWRUaGVtZSIsImxvYWRUYXNrcyIsIl91dWlkIiwib3duS2V5cyIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwic3ltYm9scyIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJhcHBseSIsIl9vYmplY3RTcHJlYWQiLCJzb3VyY2UiLCJrZXkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwicmVtb3ZlZFRhc2siLCJ0YXNrcyIsImZpbmQiLCJzYXZlVGFza3NUb0xvY2FsU3RvcmFnZSIsImdldFRhc2tJbmRleCIsInY0IiwidGFza1RvQ2hhbmdlIiwicG9zWSIsIl9nZXRUYXNrUG9zaXRpb24iLCJpbnNlcnRUYXNrSWQiLCJ0YXNrVG9Nb3ZlIiwiaWR4Iiwic3BsaWNlIiwibWF4IiwibWluIiwiZmluZEluZGV4IiwibG9hZFRhc2tzRnJvbVN0b3JhZ2UiLCJfc3RlcDIiLCJfaXRlcmF0b3IyIiwic3RvcmFnZVRhc2tzIiwiSlNPTiIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIl9zdGVwMyIsIl9pdGVyYXRvcjMiLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwibG9hZFByZWZlcmVkVGhlbWUiLCJwcmVmZXJlZFRoZW1lIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiXSwibWFwcGluZ3MiOiJBQUFBLENBQUEsU0FBQUEsRUFBQUMsRUFBQUMsRUFBQUMsR0FBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUFBLEdBQUEsQ0FBQUosRUFBQUcsR0FBQSxDQUFBLEdBQUEsQ0FBQUosRUFBQUksR0FBQSxDQUFBLElBQUFFLEVBQUEsWUFBQSxPQUFBQyxTQUFBQSxRQUFBLEdBQUEsQ0FBQUYsR0FBQUMsRUFBQSxPQUFBQSxFQUFBRixFQUFBLENBQUEsQ0FBQSxFQUFBLEdBQUFJLEVBQUEsT0FBQUEsRUFBQUosRUFBQSxDQUFBLENBQUEsRUFBQSxNQUFBSyxFQUFBLElBQUFDLE1BQUEsdUJBQUFOLEVBQUEsR0FBQSxHQUFBTyxLQUFBLG1CQUFBRixDQUFBLENBQUFHLEVBQUFYLEVBQUFHLEdBQUEsQ0FBQVMsUUFBQSxFQUFBLEVBQUFiLEVBQUFJLEdBQUEsR0FBQVUsS0FBQUYsRUFBQUMsUUFBQSxTQUFBZCxHQUFBLE9BQUFJLEVBQUFILEVBQUFJLEdBQUEsR0FBQUwsSUFBQUEsQ0FBQSxDQUFBLEVBQUFhLEVBQUFBLEVBQUFDLFFBQUFkLEVBQUFDLEVBQUFDLEVBQUFDLENBQUEsQ0FBQSxDQUFBLE9BQUFELEVBQUFHLEdBQUFTLE9BQUEsQ0FBQSxJQUFBLElBQUFMLEVBQUEsWUFBQSxPQUFBRCxTQUFBQSxRQUFBSCxFQUFBLEVBQUFBLEVBQUFGLEVBQUFhLE9BQUFYLENBQUEsR0FBQUQsRUFBQUQsRUFBQUUsRUFBQSxFQUFBLE9BQUFELENBQUEsRUFBQSxDQUFBYSxFQUFBLENBQUEsU0FBQVQsRUFBQVUsRUFBQUosR0NBQSxhQUVBSyxPQUFBQyxlQUFBTixFQUFBLGFBQUEsQ0FDQU8sTUFBQSxDQUFBLENBQ0EsQ0FBQSxFQUNBRixPQUFBQyxlQUFBTixFQUFBLE1BQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBQyxFQUFBQyxPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLFFBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBRyxFQUFBRCxPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLFlBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBSSxFQUFBRixPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLEtBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBSyxFQUFBSCxPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLEtBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBTSxFQUFBSixPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLEtBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBTyxFQUFBTCxPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLEtBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBUSxFQUFBTixPQUNBLENBQ0EsQ0FBQSxFQUNBTixPQUFBQyxlQUFBTixFQUFBLFdBQUEsQ0FDQVEsV0FBQSxDQUFBLEVBQ0FDLElBQUEsV0FDQSxPQUFBUyxFQUFBUCxPQUNBLENBQ0EsQ0FB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TThULEVBQTBCLFdBQy9CbUIsYUFBYUksUUFBUSxRQUFTTixLQUFLTyxVQUFVMUIsQ0FBSyxDQUFDLENBQ3BELEMsdUtDcEZBLElBQUF6RCxFQUFBalEsRUFBQSxlQUFBLEVBT01xVixHQUZKL1UsRUFBQWdTLFVBSGdCLFdBQ2pCLElBQU1wSSxFQUFRNkssYUFBYUMsUUFBUSxPQUFPLEVBQzFDLE9BQU85SyxHQUFRLEVBQUErRixFQUFBaEcsVUFBU0MsQ0FBSyxFQUFJbUwsRUFBaUIsQ0FDbkQsRUFFMEIsV0FDekIsSUFBTUMsRUFDTEMsT0FBT0MsWUFBY0QsT0FBT0MsV0FBVyw4QkFBOEIsRUFBRUMsUUFBVSxPQUFTLFFBQzNGLE9BQU9yRixFQUFpQmtGLENBQWEsQ0FDdEMsR0FFTWxGLEVBQW1CLFNBQUFsRyxHQUV4QixPQURBNkssYUFBYUksUUFBUSxRQUFTakwsQ0FBSyxHQUM1QixFQUFBK0YsRUFBQWhHLFVBQVNDLENBQUssQ0FDdEIsRUFBRTVKLEVBQUE4UCxpQkFBQUEiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJOSUxcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX25pbC5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9wYXJzZS5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInN0cmluZ2lmeVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfc3RyaW5naWZ5LmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidjFcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3YuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ2M1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdjIuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ2NFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdjMuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ2NVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdjQuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ2YWxpZGF0ZVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdmFsaWRhdGUuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ2ZXJzaW9uXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF92ZXJzaW9uLmRlZmF1bHQ7XG4gIH1cbn0pO1xuXG52YXIgX3YgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3YxLmpzXCIpKTtcblxudmFyIF92MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdjMuanNcIikpO1xuXG52YXIgX3YzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92NC5qc1wiKSk7XG5cbnZhciBfdjQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Y1LmpzXCIpKTtcblxudmFyIF9uaWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL25pbC5qc1wiKSk7XG5cbnZhciBfdmVyc2lvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdmVyc2lvbi5qc1wiKSk7XG5cbnZhciBfdmFsaWRhdGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZhbGlkYXRlLmpzXCIpKTtcblxudmFyIF9zdHJpbmdpZnkgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3N0cmluZ2lmeS5qc1wiKSk7XG5cbnZhciBfcGFyc2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3BhcnNlLmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH0iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxuLypcbiAqIEJyb3dzZXItY29tcGF0aWJsZSBKYXZhU2NyaXB0IE1ENVxuICpcbiAqIE1vZGlmaWNhdGlvbiBvZiBKYXZhU2NyaXB0IE1ENVxuICogaHR0cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvSmF2YVNjcmlwdC1NRDVcbiAqXG4gKiBDb3B5cmlnaHQgMjAxMSwgU2ViYXN0aWFuIFRzY2hhblxuICogaHR0cHM6Ly9ibHVlaW1wLm5ldFxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZTpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXG4gKlxuICogQmFzZWQgb25cbiAqIEEgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgUlNBIERhdGEgU2VjdXJpdHksIEluYy4gTUQ1IE1lc3NhZ2VcbiAqIERpZ2VzdCBBbGdvcml0aG0sIGFzIGRlZmluZWQgaW4gUkZDIDEzMjEuXG4gKiBWZXJzaW9uIDIuMiBDb3B5cmlnaHQgKEMpIFBhdWwgSm9obnN0b24gMTk5OSAtIDIwMDlcbiAqIE90aGVyIGNvbnRyaWJ1dG9yczogR3JlZyBIb2x0LCBBbmRyZXcgS2VwZXJ0LCBZZG5hciwgTG9zdGluZXRcbiAqIERpc3RyaWJ1dGVkIHVuZGVyIHRoZSBCU0QgTGljZW5zZVxuICogU2VlIGh0dHA6Ly9wYWpob21lLm9yZy51ay9jcnlwdC9tZDUgZm9yIG1vcmUgaW5mby5cbiAqL1xuZnVuY3Rpb24gbWQ1KGJ5dGVzKSB7XG4gIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uc3QgbXNnID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGJ5dGVzKSk7IC8vIFVURjggZXNjYXBlXG5cbiAgICBieXRlcyA9IG5ldyBVaW50OEFycmF5KG1zZy5sZW5ndGgpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyArK2kpIHtcbiAgICAgIGJ5dGVzW2ldID0gbXNnLmNoYXJDb2RlQXQoaSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1kNVRvSGV4RW5jb2RlZEFycmF5KHdvcmRzVG9NZDUoYnl0ZXNUb1dvcmRzKGJ5dGVzKSwgYnl0ZXMubGVuZ3RoICogOCkpO1xufVxuLypcbiAqIENvbnZlcnQgYW4gYXJyYXkgb2YgbGl0dGxlLWVuZGlhbiB3b3JkcyB0byBhbiBhcnJheSBvZiBieXRlc1xuICovXG5cblxuZnVuY3Rpb24gbWQ1VG9IZXhFbmNvZGVkQXJyYXkoaW5wdXQpIHtcbiAgY29uc3Qgb3V0cHV0ID0gW107XG4gIGNvbnN0IGxlbmd0aDMyID0gaW5wdXQubGVuZ3RoICogMzI7XG4gIGNvbnN0IGhleFRhYiA9ICcwMTIzNDU2Nzg5YWJjZGVmJztcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDMyOyBpICs9IDgpIHtcbiAgICBjb25zdCB4ID0gaW5wdXRbaSA+PiA1XSA+Pj4gaSAlIDMyICYgMHhmZjtcbiAgICBjb25zdCBoZXggPSBwYXJzZUludChoZXhUYWIuY2hhckF0KHggPj4+IDQgJiAweDBmKSArIGhleFRhYi5jaGFyQXQoeCAmIDB4MGYpLCAxNik7XG4gICAgb3V0cHV0LnB1c2goaGV4KTtcbiAgfVxuXG4gIHJldHVybiBvdXRwdXQ7XG59XG4vKipcbiAqIENhbGN1bGF0ZSBvdXRwdXQgbGVuZ3RoIHdpdGggcGFkZGluZyBhbmQgYml0IGxlbmd0aFxuICovXG5cblxuZnVuY3Rpb24gZ2V0T3V0cHV0TGVuZ3RoKGlucHV0TGVuZ3RoOCkge1xuICByZXR1cm4gKGlucHV0TGVuZ3RoOCArIDY0ID4+PiA5IDw8IDQpICsgMTQgKyAxO1xufVxuLypcbiAqIENhbGN1bGF0ZSB0aGUgTUQ1IG9mIGFuIGFycmF5IG9mIGxpdHRsZS1lbmRpYW4gd29yZHMsIGFuZCBhIGJpdCBsZW5ndGguXG4gKi9cblxuXG5mdW5jdGlvbiB3b3Jkc1RvTWQ1KHgsIGxlbikge1xuICAvKiBhcHBlbmQgcGFkZGluZyAqL1xuICB4W2xlbiA+PiA1XSB8PSAweDgwIDw8IGxlbiAlIDMyO1xuICB4W2dldE91dHB1dExlbmd0aChsZW4pIC0gMV0gPSBsZW47XG4gIGxldCBhID0gMTczMjU4NDE5MztcbiAgbGV0IGIgPSAtMjcxNzMzODc5O1xuICBsZXQgYyA9IC0xNzMyNTg0MTk0O1xuICBsZXQgZCA9IDI3MTczMzg3ODtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHgubGVuZ3RoOyBpICs9IDE2KSB7XG4gICAgY29uc3Qgb2xkYSA9IGE7XG4gICAgY29uc3Qgb2xkYiA9IGI7XG4gICAgY29uc3Qgb2xkYyA9IGM7XG4gICAgY29uc3Qgb2xkZCA9IGQ7XG4gICAgYSA9IG1kNWZmKGEsIGIsIGMsIGQsIHhbaV0sIDcsIC02ODA4NzY5MzYpO1xuICAgIGQgPSBtZDVmZihkLCBhLCBiLCBjLCB4W2kgKyAxXSwgMTIsIC0zODk1NjQ1ODYpO1xuICAgIGMgPSBtZDVmZihjLCBkLCBhLCBiLCB4W2kgKyAyXSwgMTcsIDYwNjEwNTgxOSk7XG4gICAgYiA9IG1kNWZmKGIsIGMsIGQsIGEsIHhbaSArIDNdLCAyMiwgLTEwNDQ1MjUzMzApO1xuICAgIGEgPSBtZDVmZihhLCBiLCBjLCBkLCB4W2kgKyA0XSwgNywgLTE3NjQxODg5Nyk7XG4gICAgZCA9IG1kNWZmKGQsIGEsIGIsIGMsIHhbaSArIDVdLCAxMiwgMTIwMDA4MDQyNik7XG4gICAgYyA9IG1kNWZmKGMsIGQsIGEsIGIsIHhbaSArIDZdLCAxNywgLTE0NzMyMzEzNDEpO1xuICAgIGIgPSBtZDVmZihiLCBjLCBkLCBhLCB4W2kgKyA3XSwgMjIsIC00NTcwNTk4Myk7XG4gICAgYSA9IG1kNWZmKGEsIGIsIGMsIGQsIHhbaSArIDhdLCA3LCAxNzcwMDM1NDE2KTtcbiAgICBkID0gbWQ1ZmYoZCwgYSwgYiwgYywgeFtpICsgOV0sIDEyLCAtMTk1ODQxNDQxNyk7XG4gICAgYyA9IG1kNWZmKGMsIGQsIGEsIGIsIHhbaSArIDEwXSwgMTcsIC00MjA2Myk7XG4gICAgYiA9IG1kNWZmKGIsIGMsIGQsIGEsIHhbaSArIDExXSwgMjIsIC0xOTkwNDA0MTYyKTtcbiAgICBhID0gbWQ1ZmYoYSwgYiwgYywgZCwgeFtpICsgMTJdLCA3LCAxODA0NjAzNjgyKTtcbiAgICBkID0gbWQ1ZmYoZCwgYSwgYiwgYywgeFtpICsgMTNdLCAxMiwgLTQwMzQxMTAxKTtcbiAgICBjID0gbWQ1ZmYoYywgZCwgYSwgYiwgeFtpICsgMTRdLCAxNywgLTE1MDIwMDIyOTApO1xuICAgIGIgPSBtZDVmZihiLCBjLCBkLCBhLCB4W2kgKyAxNV0sIDIyLCAxMjM2NTM1MzI5KTtcbiAgICBhID0gbWQ1Z2coYSwgYiwgYywgZCwgeFtpICsgMV0sIDUsIC0xNjU3OTY1MTApO1xuICAgIGQgPSBtZDVnZyhkLCBhLCBiLCBjLCB4W2kgKyA2XSwgOSwgLTEwNjk1MDE2MzIpO1xuICAgIGMgPSBtZDVnZyhjLCBkLCBhLCBiLCB4W2kgKyAxMV0sIDE0LCA2NDM3MTc3MTMpO1xuICAgIGIgPSBtZDVnZyhiLCBjLCBkLCBhLCB4W2ldLCAyMCwgLTM3Mzg5NzMwMik7XG4gICAgYSA9IG1kNWdnKGEsIGIsIGMsIGQsIHhbaSArIDVdLCA1LCAtNzAxNTU4NjkxKTtcbiAgICBkID0gbWQ1Z2coZCwgYSwgYiwgYywgeFtpICsgMTBdLCA5LCAzODAxNjA4Myk7XG4gICAgYyA9IG1kNWdnKGMsIGQsIGEsIGIsIHhbaSArIDE1XSwgMTQsIC02NjA0NzgzMzUpO1xuICAgIGIgPSBtZDVnZyhiLCBjLCBkLCBhLCB4W2kgKyA0XSwgMjAsIC00MDU1Mzc4NDgpO1xuICAgIGEgPSBtZDVnZyhhLCBiLCBjLCBkLCB4W2kgKyA5XSwgNSwgNTY4NDQ2NDM4KTtcbiAgICBkID0gbWQ1Z2coZCwgYSwgYiwgYywgeFtpICsgMTRdLCA5LCAtMTAxOTgwMzY5MCk7XG4gICAgYyA9IG1kNWdnKGMsIGQsIGEsIGIsIHhbaSArIDNdLCAxNCwgLTE4NzM2Mzk2MSk7XG4gICAgYiA9IG1kNWdnKGIsIGMsIGQsIGEsIHhbaSArIDhdLCAyMCwgMTE2MzUzMTUwMSk7XG4gICAgYSA9IG1kNWdnKGEsIGIsIGMsIGQsIHhbaSArIDEzXSwgNSwgLTE0NDQ2ODE0NjcpO1xuICAgIGQgPSBtZDVnZyhkLCBhLCBiLCBjLCB4W2kgKyAyXSwgOSwgLTUxNDAzNzg0KTtcbiAgICBjID0gbWQ1Z2coYywgZCwgYSwgYiwgeFtpICsgN10sIDE0LCAxNzM1MzI4NDczKTtcbiAgICBiID0gbWQ1Z2coYiwgYywgZCwgYSwgeFtpICsgMTJdLCAyMCwgLTE5MjY2MDc3MzQpO1xuICAgIGEgPSBtZDVoaChhLCBiLCBjLCBkLCB4W2kgKyA1XSwgNCwgLTM3ODU1OCk7XG4gICAgZCA9IG1kNWhoKGQsIGEsIGIsIGMsIHhbaSArIDhdLCAxMSwgLTIwMjI1NzQ0NjMpO1xuICAgIGMgPSBtZDVoaChjLCBkLCBhLCBiLCB4W2kgKyAxMV0sIDE2LCAxODM5MDMwNTYyKTtcbiAgICBiID0gbWQ1aGgoYiwgYywgZCwgYSwgeFtpICsgMTRdLCAyMywgLTM1MzA5NTU2KTtcbiAgICBhID0gbWQ1aGgoYSwgYiwgYywgZCwgeFtpICsgMV0sIDQsIC0xNTMwOTkyMDYwKTtcbiAgICBkID0gbWQ1aGgoZCwgYSwgYiwgYywgeFtpICsgNF0sIDExLCAxMjcyODkzMzUzKTtcbiAgICBjID0gbWQ1aGgoYywgZCwgYSwgYiwgeFtpICsgN10sIDE2LCAtMTU1NDk3NjMyKTtcbiAgICBiID0gbWQ1aGgoYiwgYywgZCwgYSwgeFtpICsgMTBdLCAyMywgLTEwOTQ3MzA2NDApO1xuICAgIGEgPSBtZDVoaChhLCBiLCBjLCBkLCB4W2kgKyAxM10sIDQsIDY4MTI3OTE3NCk7XG4gICAgZCA9IG1kNWhoKGQsIGEsIGIsIGMsIHhbaV0sIDExLCAtMzU4NTM3MjIyKTtcbiAgICBjID0gbWQ1aGgoYywgZCwgYSwgYiwgeFtpICsgM10sIDE2LCAtNzIyNTIxOTc5KTtcbiAgICBiID0gbWQ1aGgoYiwgYywgZCwgYSwgeFtpICsgNl0sIDIzLCA3NjAyOTE4OSk7XG4gICAgYSA9IG1kNWhoKGEsIGIsIGMsIGQsIHhbaSArIDldLCA0LCAtNjQwMzY0NDg3KTtcbiAgICBkID0gbWQ1aGgoZCwgYSwgYiwgYywgeFtpICsgMTJdLCAxMSwgLTQyMTgxNTgzNSk7XG4gICAgYyA9IG1kNWhoKGMsIGQsIGEsIGIsIHhbaSArIDE1XSwgMTYsIDUzMDc0MjUyMCk7XG4gICAgYiA9IG1kNWhoKGIsIGMsIGQsIGEsIHhbaSArIDJdLCAyMywgLTk5NTMzODY1MSk7XG4gICAgYSA9IG1kNWlpKGEsIGIsIGMsIGQsIHhbaV0sIDYsIC0xOTg2MzA4NDQpO1xuICAgIGQgPSBtZDVpaShkLCBhLCBiLCBjLCB4W2kgKyA3XSwgMTAsIDExMjY4OTE0MTUpO1xuICAgIGMgPSBtZDVpaShjLCBkLCBhLCBiLCB4W2kgKyAxNF0sIDE1LCAtMTQxNjM1NDkwNSk7XG4gICAgYiA9IG1kNWlpKGIsIGMsIGQsIGEsIHhbaSArIDVdLCAyMSwgLTU3NDM0MDU1KTtcbiAgICBhID0gbWQ1aWkoYSwgYiwgYywgZCwgeFtpICsgMTJdLCA2LCAxNzAwNDg1NTcxKTtcbiAgICBkID0gbWQ1aWkoZCwgYSwgYiwgYywgeFtpICsgM10sIDEwLCAtMTg5NDk4NjYwNik7XG4gICAgYyA9IG1kNWlpKGMsIGQsIGEsIGIsIHhbaSArIDEwXSwgMTUsIC0xMDUxNTIzKTtcbiAgICBiID0gbWQ1aWkoYiwgYywgZCwgYSwgeFtpICsgMV0sIDIxLCAtMjA1NDkyMjc5OSk7XG4gICAgYSA9IG1kNWlpKGEsIGIsIGMsIGQsIHhbaSArIDhdLCA2LCAxODczMzEzMzU5KTtcbiAgICBkID0gbWQ1aWkoZCwgYSwgYiwgYywgeFtpICsgMTVdLCAxMCwgLTMwNjExNzQ0KTtcbiAgICBjID0gbWQ1aWkoYywgZCwgYSwgYiwgeFtpICsgNl0sIDE1LCAtMTU2MDE5ODM4MCk7XG4gICAgYiA9IG1kNWlpKGIsIGMsIGQsIGEsIHhbaSArIDEzXSwgMjEsIDEzMDkxNTE2NDkpO1xuICAgIGEgPSBtZDVpaShhLCBiLCBjLCBkLCB4W2kgKyA0XSwgNiwgLTE0NTUyMzA3MCk7XG4gICAgZCA9IG1kNWlpKGQsIGEsIGIsIGMsIHhbaSArIDExXSwgMTAsIC0xMTIwMjEwMzc5KTtcbiAgICBjID0gbWQ1aWkoYywgZCwgYSwgYiwgeFtpICsgMl0sIDE1LCA3MTg3ODcyNTkpO1xuICAgIGIgPSBtZDVpaShiLCBjLCBkLCBhLCB4W2kgKyA5XSwgMjEsIC0zNDM0ODU1NTEpO1xuICAgIGEgPSBzYWZlQWRkKGEsIG9sZGEpO1xuICAgIGIgPSBzYWZlQWRkKGIsIG9sZGIpO1xuICAgIGMgPSBzYWZlQWRkKGMsIG9sZGMpO1xuICAgIGQgPSBzYWZlQWRkKGQsIG9sZGQpO1xuICB9XG5cbiAgcmV0dXJuIFthLCBiLCBjLCBkXTtcbn1cbi8qXG4gKiBDb252ZXJ0IGFuIGFycmF5IGJ5dGVzIHRvIGFuIGFycmF5IG9mIGxpdHRsZS1lbmRpYW4gd29yZHNcbiAqIENoYXJhY3RlcnMgPjI1NSBoYXZlIHRoZWlyIGhpZ2gtYnl0ZSBzaWxlbnRseSBpZ25vcmVkLlxuICovXG5cblxuZnVuY3Rpb24gYnl0ZXNUb1dvcmRzKGlucHV0KSB7XG4gIGlmIChpbnB1dC5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICBjb25zdCBsZW5ndGg4ID0gaW5wdXQubGVuZ3RoICogODtcbiAgY29uc3Qgb3V0cHV0ID0gbmV3IFVpbnQzMkFycmF5KGdldE91dHB1dExlbmd0aChsZW5ndGg4KSk7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg4OyBpICs9IDgpIHtcbiAgICBvdXRwdXRbaSA+PiA1XSB8PSAoaW5wdXRbaSAvIDhdICYgMHhmZikgPDwgaSAlIDMyO1xuICB9XG5cbiAgcmV0dXJuIG91dHB1dDtcbn1cbi8qXG4gKiBBZGQgaW50ZWdlcnMsIHdyYXBwaW5nIGF0IDJeMzIuIFRoaXMgdXNlcyAxNi1iaXQgb3BlcmF0aW9ucyBpbnRlcm5hbGx5XG4gKiB0byB3b3JrIGFyb3VuZCBidWdzIGluIHNvbWUgSlMgaW50ZXJwcmV0ZXJzLlxuICovXG5cblxuZnVuY3Rpb24gc2FmZUFkZCh4LCB5KSB7XG4gIGNvbnN0IGxzdyA9ICh4ICYgMHhmZmZmKSArICh5ICYgMHhmZmZmKTtcbiAgY29uc3QgbXN3ID0gKHggPj4gMTYpICsgKHkgPj4gMTYpICsgKGxzdyA+PiAxNik7XG4gIHJldHVybiBtc3cgPDwgMTYgfCBsc3cgJiAweGZmZmY7XG59XG4vKlxuICogQml0d2lzZSByb3RhdGUgYSAzMi1iaXQgbnVtYmVyIHRvIHRoZSBsZWZ0LlxuICovXG5cblxuZnVuY3Rpb24gYml0Um90YXRlTGVmdChudW0sIGNudCkge1xuICByZXR1cm4gbnVtIDw8IGNudCB8IG51bSA+Pj4gMzIgLSBjbnQ7XG59XG4vKlxuICogVGhlc2UgZnVuY3Rpb25zIGltcGxlbWVudCB0aGUgZm91ciBiYXNpYyBvcGVyYXRpb25zIHRoZSBhbGdvcml0aG0gdXNlcy5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1kNWNtbihxLCBhLCBiLCB4LCBzLCB0KSB7XG4gIHJldHVybiBzYWZlQWRkKGJpdFJvdGF0ZUxlZnQoc2FmZUFkZChzYWZlQWRkKGEsIHEpLCBzYWZlQWRkKHgsIHQpKSwgcyksIGIpO1xufVxuXG5mdW5jdGlvbiBtZDVmZihhLCBiLCBjLCBkLCB4LCBzLCB0KSB7XG4gIHJldHVybiBtZDVjbW4oYiAmIGMgfCB+YiAmIGQsIGEsIGIsIHgsIHMsIHQpO1xufVxuXG5mdW5jdGlvbiBtZDVnZyhhLCBiLCBjLCBkLCB4LCBzLCB0KSB7XG4gIHJldHVybiBtZDVjbW4oYiAmIGQgfCBjICYgfmQsIGEsIGIsIHgsIHMsIHQpO1xufVxuXG5mdW5jdGlvbiBtZDVoaChhLCBiLCBjLCBkLCB4LCBzLCB0KSB7XG4gIHJldHVybiBtZDVjbW4oYiBeIGMgXiBkLCBhLCBiLCB4LCBzLCB0KTtcbn1cblxuZnVuY3Rpb24gbWQ1aWkoYSwgYiwgYywgZCwgeCwgcywgdCkge1xuICByZXR1cm4gbWQ1Y21uKGMgXiAoYiB8IH5kKSwgYSwgYiwgeCwgcywgdCk7XG59XG5cbnZhciBfZGVmYXVsdCA9IG1kNTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuY29uc3QgcmFuZG9tVVVJRCA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5yYW5kb21VVUlEICYmIGNyeXB0by5yYW5kb21VVUlELmJpbmQoY3J5cHRvKTtcbnZhciBfZGVmYXVsdCA9IHtcbiAgcmFuZG9tVVVJRFxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIF9kZWZhdWx0ID0gJzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCc7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF92YWxpZGF0ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdmFsaWRhdGUuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBwYXJzZSh1dWlkKSB7XG4gIGlmICghKDAsIF92YWxpZGF0ZS5kZWZhdWx0KSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignSW52YWxpZCBVVUlEJyk7XG4gIH1cblxuICBsZXQgdjtcbiAgY29uc3QgYXJyID0gbmV3IFVpbnQ4QXJyYXkoMTYpOyAvLyBQYXJzZSAjIyMjIyMjIy0uLi4uLS4uLi4tLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbMF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMCwgOCksIDE2KSkgPj4+IDI0O1xuICBhcnJbMV0gPSB2ID4+PiAxNiAmIDB4ZmY7XG4gIGFyclsyXSA9IHYgPj4+IDggJiAweGZmO1xuICBhcnJbM10gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tIyMjIy0uLi4uLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzRdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDksIDEzKSwgMTYpKSA+Pj4gODtcbiAgYXJyWzVdID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tIyMjIy0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFycls2XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgxNCwgMTgpLCAxNikpID4+PiA4O1xuICBhcnJbN10gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0uLi4uLSMjIyMtLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzhdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDE5LCAyMyksIDE2KSkgPj4+IDg7XG4gIGFycls5XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLS4uLi4tLi4uLi0jIyMjIyMjIyMjIyNcbiAgLy8gKFVzZSBcIi9cIiB0byBhdm9pZCAzMi1iaXQgdHJ1bmNhdGlvbiB3aGVuIGJpdC1zaGlmdGluZyBoaWdoLW9yZGVyIGJ5dGVzKVxuXG4gIGFyclsxMF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMjQsIDM2KSwgMTYpKSAvIDB4MTAwMDAwMDAwMDAgJiAweGZmO1xuICBhcnJbMTFdID0gdiAvIDB4MTAwMDAwMDAwICYgMHhmZjtcbiAgYXJyWzEyXSA9IHYgPj4+IDI0ICYgMHhmZjtcbiAgYXJyWzEzXSA9IHYgPj4+IDE2ICYgMHhmZjtcbiAgYXJyWzE0XSA9IHYgPj4+IDggJiAweGZmO1xuICBhcnJbMTVdID0gdiAmIDB4ZmY7XG4gIHJldHVybiBhcnI7XG59XG5cbnZhciBfZGVmYXVsdCA9IHBhcnNlO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgX2RlZmF1bHQgPSAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJuZztcbi8vIFVuaXF1ZSBJRCBjcmVhdGlvbiByZXF1aXJlcyBhIGhpZ2ggcXVhbGl0eSByYW5kb20gIyBnZW5lcmF0b3IuIEluIHRoZSBicm93c2VyIHdlIHRoZXJlZm9yZVxuLy8gcmVxdWlyZSB0aGUgY3J5cHRvIEFQSSBhbmQgZG8gbm90IHN1cHBvcnQgYnVpbHQtaW4gZmFsbGJhY2sgdG8gbG93ZXIgcXVhbGl0eSByYW5kb20gbnVtYmVyXG4vLyBnZW5lcmF0b3JzIChsaWtlIE1hdGgucmFuZG9tKCkpLlxubGV0IGdldFJhbmRvbVZhbHVlcztcbmNvbnN0IHJuZHM4ID0gbmV3IFVpbnQ4QXJyYXkoMTYpO1xuXG5mdW5jdGlvbiBybmcoKSB7XG4gIC8vIGxhenkgbG9hZCBzbyB0aGF0IGVudmlyb25tZW50cyB0aGF0IG5lZWQgdG8gcG9seWZpbGwgaGF2ZSBhIGNoYW5jZSB0byBkbyBzb1xuICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi5cbiAgICBnZXRSYW5kb21WYWx1ZXMgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pO1xuXG4gICAgaWYgKCFnZXRSYW5kb21WYWx1ZXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignY3J5cHRvLmdldFJhbmRvbVZhbHVlcygpIG5vdCBzdXBwb3J0ZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQjZ2V0cmFuZG9tdmFsdWVzLW5vdC1zdXBwb3J0ZWQnKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZ2V0UmFuZG9tVmFsdWVzKHJuZHM4KTtcbn0iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxuLy8gQWRhcHRlZCBmcm9tIENocmlzIFZlbmVzcycgU0hBMSBjb2RlIGF0XG4vLyBodHRwOi8vd3d3Lm1vdmFibGUtdHlwZS5jby51ay9zY3JpcHRzL3NoYTEuaHRtbFxuZnVuY3Rpb24gZihzLCB4LCB5LCB6KSB7XG4gIHN3aXRjaCAocykge1xuICAgIGNhc2UgMDpcbiAgICAgIHJldHVybiB4ICYgeSBeIH54ICYgejtcblxuICAgIGNhc2UgMTpcbiAgICAgIHJldHVybiB4IF4geSBeIHo7XG5cbiAgICBjYXNlIDI6XG4gICAgICByZXR1cm4geCAmIHkgXiB4ICYgeiBeIHkgJiB6O1xuXG4gICAgY2FzZSAzOlxuICAgICAgcmV0dXJuIHggXiB5IF4gejtcbiAgfVxufVxuXG5mdW5jdGlvbiBST1RMKHgsIG4pIHtcbiAgcmV0dXJuIHggPDwgbiB8IHggPj4+IDMyIC0gbjtcbn1cblxuZnVuY3Rpb24gc2hhMShieXRlcykge1xuICBjb25zdCBLID0gWzB4NWE4Mjc5OTksIDB4NmVkOWViYTEsIDB4OGYxYmJjZGMsIDB4Y2E2MmMxZDZdO1xuICBjb25zdCBIID0gWzB4Njc0NTIzMDEsIDB4ZWZjZGFiODksIDB4OThiYWRjZmUsIDB4MTAzMjU0NzYsIDB4YzNkMmUxZjBdO1xuXG4gIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uc3QgbXNnID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGJ5dGVzKSk7IC8vIFVURjggZXNjYXBlXG5cbiAgICBieXRlcyA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtc2cubGVuZ3RoOyArK2kpIHtcbiAgICAgIGJ5dGVzLnB1c2gobXNnLmNoYXJDb2RlQXQoaSkpO1xuICAgIH1cbiAgfSBlbHNlIGlmICghQXJyYXkuaXNBcnJheShieXRlcykpIHtcbiAgICAvLyBDb252ZXJ0IEFycmF5LWxpa2UgdG8gQXJyYXlcbiAgICBieXRlcyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGJ5dGVzKTtcbiAgfVxuXG4gIGJ5dGVzLnB1c2goMHg4MCk7XG4gIGNvbnN0IGwgPSBieXRlcy5sZW5ndGggLyA0ICsgMjtcbiAgY29uc3QgTiA9IE1hdGguY2VpbChsIC8gMTYpO1xuICBjb25zdCBNID0gbmV3IEFycmF5KE4pO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgTjsgKytpKSB7XG4gICAgY29uc3QgYXJyID0gbmV3IFVpbnQzMkFycmF5KDE2KTtcblxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgMTY7ICsraikge1xuICAgICAgYXJyW2pdID0gYnl0ZXNbaSAqIDY0ICsgaiAqIDRdIDw8IDI0IHwgYnl0ZXNbaSAqIDY0ICsgaiAqIDQgKyAxXSA8PCAxNiB8IGJ5dGVzW2kgKiA2NCArIGogKiA0ICsgMl0gPDwgOCB8IGJ5dGVzW2kgKiA2NCArIGogKiA0ICsgM107XG4gICAgfVxuXG4gICAgTVtpXSA9IGFycjtcbiAgfVxuXG4gIE1bTiAtIDFdWzE0XSA9IChieXRlcy5sZW5ndGggLSAxKSAqIDggLyBNYXRoLnBvdygyLCAzMik7XG4gIE1bTiAtIDFdWzE0XSA9IE1hdGguZmxvb3IoTVtOIC0gMV1bMTRdKTtcbiAgTVtOIC0gMV1bMTVdID0gKGJ5dGVzLmxlbmd0aCAtIDEpICogOCAmIDB4ZmZmZmZmZmY7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBOOyArK2kpIHtcbiAgICBjb25zdCBXID0gbmV3IFVpbnQzMkFycmF5KDgwKTtcblxuICAgIGZvciAobGV0IHQgPSAwOyB0IDwgMTY7ICsrdCkge1xuICAgICAgV1t0XSA9IE1baV1bdF07XG4gICAgfVxuXG4gICAgZm9yIChsZXQgdCA9IDE2OyB0IDwgODA7ICsrdCkge1xuICAgICAgV1t0XSA9IFJPVEwoV1t0IC0gM10gXiBXW3QgLSA4XSBeIFdbdCAtIDE0XSBeIFdbdCAtIDE2XSwgMSk7XG4gICAgfVxuXG4gICAgbGV0IGEgPSBIWzBdO1xuICAgIGxldCBiID0gSFsxXTtcbiAgICBsZXQgYyA9IEhbMl07XG4gICAgbGV0IGQgPSBIWzNdO1xuICAgIGxldCBlID0gSFs0XTtcblxuICAgIGZvciAobGV0IHQgPSAwOyB0IDwgODA7ICsrdCkge1xuICAgICAgY29uc3QgcyA9IE1hdGguZmxvb3IodCAvIDIwKTtcbiAgICAgIGNvbnN0IFQgPSBST1RMKGEsIDUpICsgZihzLCBiLCBjLCBkKSArIGUgKyBLW3NdICsgV1t0XSA+Pj4gMDtcbiAgICAgIGUgPSBkO1xuICAgICAgZCA9IGM7XG4gICAgICBjID0gUk9UTChiLCAzMCkgPj4+IDA7XG4gICAgICBiID0gYTtcbiAgICAgIGEgPSBUO1xuICAgIH1cblxuICAgIEhbMF0gPSBIWzBdICsgYSA+Pj4gMDtcbiAgICBIWzFdID0gSFsxXSArIGIgPj4+IDA7XG4gICAgSFsyXSA9IEhbMl0gKyBjID4+PiAwO1xuICAgIEhbM10gPSBIWzNdICsgZCA+Pj4gMDtcbiAgICBIWzRdID0gSFs0XSArIGUgPj4+IDA7XG4gIH1cblxuICByZXR1cm4gW0hbMF0gPj4gMjQgJiAweGZmLCBIWzBdID4+IDE2ICYgMHhmZiwgSFswXSA+PiA4ICYgMHhmZiwgSFswXSAmIDB4ZmYsIEhbMV0gPj4gMjQgJiAweGZmLCBIWzFdID4+IDE2ICYgMHhmZiwgSFsxXSA+PiA4ICYgMHhmZiwgSFsxXSAmIDB4ZmYsIEhbMl0gPj4gMjQgJiAweGZmLCBIWzJdID4+IDE2ICYgMHhmZiwgSFsyXSA+PiA4ICYgMHhmZiwgSFsyXSAmIDB4ZmYsIEhbM10gPj4gMjQgJiAweGZmLCBIWzNdID4+IDE2ICYgMHhmZiwgSFszXSA+PiA4ICYgMHhmZiwgSFszXSAmIDB4ZmYsIEhbNF0gPj4gMjQgJiAweGZmLCBIWzRdID4+IDE2ICYgMHhmZiwgSFs0XSA+PiA4ICYgMHhmZiwgSFs0XSAmIDB4ZmZdO1xufVxuXG52YXIgX2RlZmF1bHQgPSBzaGExO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5leHBvcnRzLnVuc2FmZVN0cmluZ2lmeSA9IHVuc2FmZVN0cmluZ2lmeTtcblxudmFyIF92YWxpZGF0ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdmFsaWRhdGUuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cbmNvbnN0IGJ5dGVUb0hleCA9IFtdO1xuXG5mb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gIGJ5dGVUb0hleC5wdXNoKChpICsgMHgxMDApLnRvU3RyaW5nKDE2KS5zbGljZSgxKSk7XG59XG5cbmZ1bmN0aW9uIHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHJldHVybiAoYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV0pLnRvTG93ZXJDYXNlKCk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgY29uc3QgdXVpZCA9IHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCk7IC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcblxuICBpZiAoISgwLCBfdmFsaWRhdGUuZGVmYXVsdCkodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZ2lmaWVkIFVVSUQgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgcmV0dXJuIHV1aWQ7XG59XG5cbnZhciBfZGVmYXVsdCA9IHN0cmluZ2lmeTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3JuZyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vcm5nLmpzXCIpKTtcblxudmFyIF9zdHJpbmdpZnkgPSByZXF1aXJlKFwiLi9zdHJpbmdpZnkuanNcIik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vICoqYHYxKClgIC0gR2VuZXJhdGUgdGltZS1iYXNlZCBVVUlEKipcbi8vXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vTGlvc0svVVVJRC5qc1xuLy8gYW5kIGh0dHA6Ly9kb2NzLnB5dGhvbi5vcmcvbGlicmFyeS91dWlkLmh0bWxcbmxldCBfbm9kZUlkO1xuXG5sZXQgX2Nsb2Nrc2VxOyAvLyBQcmV2aW91cyB1dWlkIGNyZWF0aW9uIHRpbWVcblxuXG5sZXQgX2xhc3RNU2VjcyA9IDA7XG5sZXQgX2xhc3ROU2VjcyA9IDA7IC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQgZm9yIEFQSSBkZXRhaWxzXG5cbmZ1bmN0aW9uIHYxKG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIGxldCBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuICBjb25zdCBiID0gYnVmIHx8IG5ldyBBcnJheSgxNik7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsZXQgbm9kZSA9IG9wdGlvbnMubm9kZSB8fCBfbm9kZUlkO1xuICBsZXQgY2xvY2tzZXEgPSBvcHRpb25zLmNsb2Nrc2VxICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNsb2Nrc2VxIDogX2Nsb2Nrc2VxOyAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcblxuICBpZiAobm9kZSA9PSBudWxsIHx8IGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICBjb25zdCBzZWVkQnl0ZXMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgX3JuZy5kZWZhdWx0KSgpO1xuXG4gICAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuNSwgY3JlYXRlIGFuZCA0OC1iaXQgbm9kZSBpZCwgKDQ3IHJhbmRvbSBiaXRzICsgbXVsdGljYXN0IGJpdCA9IDEpXG4gICAgICBub2RlID0gX25vZGVJZCA9IFtzZWVkQnl0ZXNbMF0gfCAweDAxLCBzZWVkQnl0ZXNbMV0sIHNlZWRCeXRlc1syXSwgc2VlZEJ5dGVzWzNdLCBzZWVkQnl0ZXNbNF0sIHNlZWRCeXRlc1s1XV07XG4gICAgfVxuXG4gICAgaWYgKGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjIuMiwgcmFuZG9taXplICgxNCBiaXQpIGNsb2Nrc2VxXG4gICAgICBjbG9ja3NlcSA9IF9jbG9ja3NlcSA9IChzZWVkQnl0ZXNbNl0gPDwgOCB8IHNlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG4gICAgfVxuICB9IC8vIFVVSUQgdGltZXN0YW1wcyBhcmUgMTAwIG5hbm8tc2Vjb25kIHVuaXRzIHNpbmNlIHRoZSBHcmVnb3JpYW4gZXBvY2gsXG4gIC8vICgxNTgyLTEwLTE1IDAwOjAwKS4gIEpTTnVtYmVycyBhcmVuJ3QgcHJlY2lzZSBlbm91Z2ggZm9yIHRoaXMsIHNvXG4gIC8vIHRpbWUgaXMgaGFuZGxlZCBpbnRlcm5hbGx5IGFzICdtc2VjcycgKGludGVnZXIgbWlsbGlzZWNvbmRzKSBhbmQgJ25zZWNzJ1xuICAvLyAoMTAwLW5hbm9zZWNvbmRzIG9mZnNldCBmcm9tIG1zZWNzKSBzaW5jZSB1bml4IGVwb2NoLCAxOTcwLTAxLTAxIDAwOjAwLlxuXG5cbiAgbGV0IG1zZWNzID0gb3B0aW9ucy5tc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5tc2VjcyA6IERhdGUubm93KCk7IC8vIFBlciA0LjIuMS4yLCB1c2UgY291bnQgb2YgdXVpZCdzIGdlbmVyYXRlZCBkdXJpbmcgdGhlIGN1cnJlbnQgY2xvY2tcbiAgLy8gY3ljbGUgdG8gc2ltdWxhdGUgaGlnaGVyIHJlc29sdXRpb24gY2xvY2tcblxuICBsZXQgbnNlY3MgPSBvcHRpb25zLm5zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm5zZWNzIDogX2xhc3ROU2VjcyArIDE7IC8vIFRpbWUgc2luY2UgbGFzdCB1dWlkIGNyZWF0aW9uIChpbiBtc2VjcylcblxuICBjb25zdCBkdCA9IG1zZWNzIC0gX2xhc3RNU2VjcyArIChuc2VjcyAtIF9sYXN0TlNlY3MpIC8gMTAwMDA7IC8vIFBlciA0LjIuMS4yLCBCdW1wIGNsb2Nrc2VxIG9uIGNsb2NrIHJlZ3Jlc3Npb25cblxuICBpZiAoZHQgPCAwICYmIG9wdGlvbnMuY2xvY2tzZXEgPT09IHVuZGVmaW5lZCkge1xuICAgIGNsb2Nrc2VxID0gY2xvY2tzZXEgKyAxICYgMHgzZmZmO1xuICB9IC8vIFJlc2V0IG5zZWNzIGlmIGNsb2NrIHJlZ3Jlc3NlcyAobmV3IGNsb2Nrc2VxKSBvciB3ZSd2ZSBtb3ZlZCBvbnRvIGEgbmV3XG4gIC8vIHRpbWUgaW50ZXJ2YWxcblxuXG4gIGlmICgoZHQgPCAwIHx8IG1zZWNzID4gX2xhc3RNU2VjcykgJiYgb3B0aW9ucy5uc2VjcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbnNlY3MgPSAwO1xuICB9IC8vIFBlciA0LjIuMS4yIFRocm93IGVycm9yIGlmIHRvbyBtYW55IHV1aWRzIGFyZSByZXF1ZXN0ZWRcblxuXG4gIGlmIChuc2VjcyA+PSAxMDAwMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInV1aWQudjEoKTogQ2FuJ3QgY3JlYXRlIG1vcmUgdGhhbiAxME0gdXVpZHMvc2VjXCIpO1xuICB9XG5cbiAgX2xhc3RNU2VjcyA9IG1zZWNzO1xuICBfbGFzdE5TZWNzID0gbnNlY3M7XG4gIF9jbG9ja3NlcSA9IGNsb2Nrc2VxOyAvLyBQZXIgNC4xLjQgLSBDb252ZXJ0IGZyb20gdW5peCBlcG9jaCB0byBHcmVnb3JpYW4gZXBvY2hcblxuICBtc2VjcyArPSAxMjIxOTI5MjgwMDAwMDsgLy8gYHRpbWVfbG93YFxuXG4gIGNvbnN0IHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjsgLy8gYHRpbWVfbWlkYFxuXG4gIGNvbnN0IHRtaCA9IG1zZWNzIC8gMHgxMDAwMDAwMDAgKiAxMDAwMCAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjsgLy8gYHRpbWVfaGlnaF9hbmRfdmVyc2lvbmBcblxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG5cbiAgYltpKytdID0gdG1oID4+PiAxNiAmIDB4ZmY7IC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxID4+PiA4IHwgMHg4MDsgLy8gYGNsb2NrX3NlcV9sb3dgXG5cbiAgYltpKytdID0gY2xvY2tzZXEgJiAweGZmOyAvLyBgbm9kZWBcblxuICBmb3IgKGxldCBuID0gMDsgbiA8IDY7ICsrbikge1xuICAgIGJbaSArIG5dID0gbm9kZVtuXTtcbiAgfVxuXG4gIHJldHVybiBidWYgfHwgKDAsIF9zdHJpbmdpZnkudW5zYWZlU3RyaW5naWZ5KShiKTtcbn1cblxudmFyIF9kZWZhdWx0ID0gdjE7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF92ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi92MzUuanNcIikpO1xuXG52YXIgX21kID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9tZDUuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5jb25zdCB2MyA9ICgwLCBfdi5kZWZhdWx0KSgndjMnLCAweDMwLCBfbWQuZGVmYXVsdCk7XG52YXIgX2RlZmF1bHQgPSB2MztcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5VUkwgPSBleHBvcnRzLkROUyA9IHZvaWQgMDtcbmV4cG9ydHMuZGVmYXVsdCA9IHYzNTtcblxudmFyIF9zdHJpbmdpZnkgPSByZXF1aXJlKFwiLi9zdHJpbmdpZnkuanNcIik7XG5cbnZhciBfcGFyc2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3BhcnNlLmpzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gc3RyaW5nVG9CeXRlcyhzdHIpIHtcbiAgc3RyID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHN0cikpOyAvLyBVVEY4IGVzY2FwZVxuXG4gIGNvbnN0IGJ5dGVzID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyArK2kpIHtcbiAgICBieXRlcy5wdXNoKHN0ci5jaGFyQ29kZUF0KGkpKTtcbiAgfVxuXG4gIHJldHVybiBieXRlcztcbn1cblxuY29uc3QgRE5TID0gJzZiYTdiODEwLTlkYWQtMTFkMS04MGI0LTAwYzA0ZmQ0MzBjOCc7XG5leHBvcnRzLkROUyA9IEROUztcbmNvbnN0IFVSTCA9ICc2YmE3YjgxMS05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0cy5VUkwgPSBVUkw7XG5cbmZ1bmN0aW9uIHYzNShuYW1lLCB2ZXJzaW9uLCBoYXNoZnVuYykge1xuICBmdW5jdGlvbiBnZW5lcmF0ZVVVSUQodmFsdWUsIG5hbWVzcGFjZSwgYnVmLCBvZmZzZXQpIHtcbiAgICB2YXIgX25hbWVzcGFjZTtcblxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICB2YWx1ZSA9IHN0cmluZ1RvQnl0ZXModmFsdWUpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbmFtZXNwYWNlID09PSAnc3RyaW5nJykge1xuICAgICAgbmFtZXNwYWNlID0gKDAsIF9wYXJzZS5kZWZhdWx0KShuYW1lc3BhY2UpO1xuICAgIH1cblxuICAgIGlmICgoKF9uYW1lc3BhY2UgPSBuYW1lc3BhY2UpID09PSBudWxsIHx8IF9uYW1lc3BhY2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9uYW1lc3BhY2UubGVuZ3RoKSAhPT0gMTYpIHtcbiAgICAgIHRocm93IFR5cGVFcnJvcignTmFtZXNwYWNlIG11c3QgYmUgYXJyYXktbGlrZSAoMTYgaXRlcmFibGUgaW50ZWdlciB2YWx1ZXMsIDAtMjU1KScpO1xuICAgIH0gLy8gQ29tcHV0ZSBoYXNoIG9mIG5hbWVzcGFjZSBhbmQgdmFsdWUsIFBlciA0LjNcbiAgICAvLyBGdXR1cmU6IFVzZSBzcHJlYWQgc3ludGF4IHdoZW4gc3VwcG9ydGVkIG9uIGFsbCBwbGF0Zm9ybXMsIGUuZy4gYGJ5dGVzID1cbiAgICAvLyBoYXNoZnVuYyhbLi4ubmFtZXNwYWNlLCAuLi4gdmFsdWVdKWBcblxuXG4gICAgbGV0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoMTYgKyB2YWx1ZS5sZW5ndGgpO1xuICAgIGJ5dGVzLnNldChuYW1lc3BhY2UpO1xuICAgIGJ5dGVzLnNldCh2YWx1ZSwgbmFtZXNwYWNlLmxlbmd0aCk7XG4gICAgYnl0ZXMgPSBoYXNoZnVuYyhieXRlcyk7XG4gICAgYnl0ZXNbNl0gPSBieXRlc1s2XSAmIDB4MGYgfCB2ZXJzaW9uO1xuICAgIGJ5dGVzWzhdID0gYnl0ZXNbOF0gJiAweDNmIHwgMHg4MDtcblxuICAgIGlmIChidWYpIHtcbiAgICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgICAgYnVmW29mZnNldCArIGldID0gYnl0ZXNbaV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBidWY7XG4gICAgfVxuXG4gICAgcmV0dXJuICgwLCBfc3RyaW5naWZ5LnVuc2FmZVN0cmluZ2lmeSkoYnl0ZXMpO1xuICB9IC8vIEZ1bmN0aW9uI25hbWUgaXMgbm90IHNldHRhYmxlIG9uIHNvbWUgcGxhdGZvcm1zICgjMjcwKVxuXG5cbiAgdHJ5IHtcbiAgICBnZW5lcmF0ZVVVSUQubmFtZSA9IG5hbWU7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICB9IGNhdGNoIChlcnIpIHt9IC8vIEZvciBDb21tb25KUyBkZWZhdWx0IGV4cG9ydCBzdXBwb3J0XG5cblxuICBnZW5lcmF0ZVVVSUQuRE5TID0gRE5TO1xuICBnZW5lcmF0ZVVVSUQuVVJMID0gVVJMO1xuICByZXR1cm4gZ2VuZXJhdGVVVUlEO1xufSIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX25hdGl2ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbmF0aXZlLmpzXCIpKTtcblxudmFyIF9ybmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3JuZy5qc1wiKSk7XG5cbnZhciBfc3RyaW5naWZ5ID0gcmVxdWlyZShcIi4vc3RyaW5naWZ5LmpzXCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiB2NChvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICBpZiAoX25hdGl2ZS5kZWZhdWx0LnJhbmRvbVVVSUQgJiYgIWJ1ZiAmJiAhb3B0aW9ucykge1xuICAgIHJldHVybiBfbmF0aXZlLmRlZmF1bHQucmFuZG9tVVVJRCgpO1xuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgY29uc3Qgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBfcm5nLmRlZmF1bHQpKCk7IC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcblxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuICgwLCBfc3RyaW5naWZ5LnVuc2FmZVN0cmluZ2lmeSkocm5kcyk7XG59XG5cbnZhciBfZGVmYXVsdCA9IHY0O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfdiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdjM1LmpzXCIpKTtcblxudmFyIF9zaGEgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3NoYTEuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5jb25zdCB2NSA9ICgwLCBfdi5kZWZhdWx0KSgndjUnLCAweDUwLCBfc2hhLmRlZmF1bHQpO1xudmFyIF9kZWZhdWx0ID0gdjU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9yZWdleCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vcmVnZXguanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgX3JlZ2V4LmRlZmF1bHQudGVzdCh1dWlkKTtcbn1cblxudmFyIF9kZWZhdWx0ID0gdmFsaWRhdGU7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF92YWxpZGF0ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdmFsaWRhdGUuanNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiB2ZXJzaW9uKHV1aWQpIHtcbiAgaWYgKCEoMCwgX3ZhbGlkYXRlLmRlZmF1bHQpKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdJbnZhbGlkIFVVSUQnKTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZUludCh1dWlkLnNsaWNlKDE0LCAxNSksIDE2KTtcbn1cblxudmFyIF9kZWZhdWx0ID0gdmVyc2lvbjtcbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsImltcG9ydCB7IGNyZWF0ZVRhc2tFbGVtZW50IH0gZnJvbSAnLi9lbGVtZW50LWNyZWF0b3JzJztcclxuaW1wb3J0IHsgZmlsdGVyQnRucywgdGhlbWVUb2dnbGUsIHRvZG9Db3VudGVyLCB0b2RvTGlzdCB9IGZyb20gJy4vZWxlbWVudHMnO1xyXG5pbXBvcnQgeyBGSUxURVJfU1RBVEVTLCBnZXRDdXJyZW50RmlsdGVyIH0gZnJvbSAnLi9maWx0ZXItc3RhdGUnO1xyXG5pbXBvcnQgeyBnZXRBY3RpdmVUYXNrc0NvdW50IH0gZnJvbSAnLi90YXNrcyc7XHJcblxyXG5jb25zdCBzZXRUaGVtZSA9IHRoZW1lID0+IHtcclxuXHRkb2N1bWVudC5ib2R5LnNldEF0dHJpYnV0ZSgnZGF0YS10aGVtZScsIHRoZW1lKTtcclxuXHR0aGVtZVRvZ2dsZS5kYXRhc2V0LnRoZW1lID0gdGhlbWU7XHJcblx0cmV0dXJuIHRoZW1lO1xyXG59O1xyXG5cclxuY29uc3QgYWRkVGFza1RvTGlzdCA9IHRhc2sgPT4ge1xyXG5cdGNvbnN0IHRhc2tFbGVtZW50ID0gY3JlYXRlVGFza0VsZW1lbnQodGFzayk7XHJcblx0aGlkZVNob3dUYXNrKHRhc2tFbGVtZW50KTtcclxuXHR0b2RvTGlzdC5hcHBlbmRDaGlsZCh0YXNrRWxlbWVudCk7XHJcblx0cmV0dXJuIHRhc2tFbGVtZW50O1xyXG59O1xyXG5cclxuY29uc3QgaW5kaWNhdGVBY3RpdmVGaWx0ZXIgPSBfID0+IHtcclxuXHRyZW1vdmVBY3RpdmVDbGFzc0Zyb21CdXR0b25zKCk7XHJcblx0Y29uc3QgZmlsdGVyID0gZ2V0Q3VycmVudEZpbHRlcigpO1xyXG5cdGNvbnN0IGFjdGl2ZUZpbHRlckJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuZmlsdGVyLWJ1dHRvbltkYXRhLWZpbHRlcj0ke2ZpbHRlcn1gKTtcclxuXHRhY3RpdmVGaWx0ZXJCdG5zLmZvckVhY2goYnRuID0+IGJ0bi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKSk7XHJcbn07XHJcblxyXG5jb25zdCByZW1vdmVBY3RpdmVDbGFzc0Zyb21CdXR0b25zID0gKCkgPT4gZmlsdGVyQnRucy5mb3JFYWNoKGJ0biA9PiBidG4uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJykpO1xyXG5cclxuY29uc3QgZmlsdGVyTGlzdCA9ICgpID0+IHtcclxuXHRjb25zdCBmaWx0ZXIgPSBnZXRDdXJyZW50RmlsdGVyKCk7XHJcblxyXG5cdGNvbnN0IGFsbFRhc2tzID0gdG9kb0xpc3QucXVlcnlTZWxlY3RvckFsbCgnLnRhc2snKTtcclxuXHRmb3IgKGNvbnN0IHRhc2sgb2YgYWxsVGFza3MpIGhpZGVTaG93VGFzayh0YXNrKTtcclxuXHJcblx0cmV0dXJuIGZpbHRlcjtcclxufTtcclxuXHJcbmNvbnN0IGhpZGVTaG93VGFzayA9IHRhc2sgPT4ge1xyXG5cdGNvbnN0IGZpbHRlciA9IGdldEN1cnJlbnRGaWx0ZXIoKTtcclxuXHRpZiAoZmlsdGVyID09PSBGSUxURVJfU1RBVEVTLmRlZmF1bHQgfHwgdGFzay5kYXRhc2V0LnN0YXR1cyA9PT0gZmlsdGVyKSB0YXNrLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xyXG5cdGVsc2UgdGFzay5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxuXHRyZXR1cm4gZmlsdGVyO1xyXG59O1xyXG5cclxuY29uc3QgZ2V0VGFza1Bvc2l0aW9uID0gdGFza0lkID0+IHtcclxuXHRjb25zdCB0YXNrRWxlbWVudCA9IHRvZG9MaXN0LnF1ZXJ5U2VsZWN0b3IoYC50YXNrW2RhdGEtaWQ9JyR7dGFza0lkfSddYCk7XHJcblx0Y29uc3QgdGFza1kgPSB0YXNrRWxlbWVudC5vZmZzZXRUb3A7XHJcblx0Y29uc3QgdGFza1lFbmQgPSB0YXNrRWxlbWVudC5vZmZzZXRIZWlnaHQgKyB0YXNrWTtcclxuXHRyZXR1cm4geyBzdGFydDogdGFza1ksIGVuZDogdGFza1lFbmQgfTtcclxufTtcclxuXHJcbmNvbnN0IHRhc2tSZW9yZGVyID0gKHJlbGF0aXZlVGFza0lkLCB0YXNrVG9JbnNlcnRJZCwgZGlyZWN0aW9uKSA9PiB7XHJcblx0Y29uc3QgcmVsYXRpdmVUYXNrRWxlbWVudCA9IHRvZG9MaXN0LnF1ZXJ5U2VsZWN0b3IoYC50YXNrW2RhdGEtaWQ9JyR7cmVsYXRpdmVUYXNrSWR9J11gKTtcclxuXHRjb25zdCB0YXNrVG9JbnNlcnRFbGVtZW50ID0gdG9kb0xpc3QucXVlcnlTZWxlY3RvcihgLnRhc2tbZGF0YS1pZD0nJHt0YXNrVG9JbnNlcnRJZH0nXWApO1xyXG5cdHJlbGF0aXZlVGFza0VsZW1lbnQuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KGRpcmVjdGlvbiA9PT0gLTEgPyAnYmVmb3JlYmVnaW4nIDogJ2FmdGVyZW5kJywgdGFza1RvSW5zZXJ0RWxlbWVudCk7XHJcblx0cmV0dXJuIGRpcmVjdGlvbjtcclxufTtcclxuXHJcbmNvbnN0IHVwZGF0ZVRvZG9Db3VudGVyID0gKCkgPT4ge1xyXG5cdGNvbnN0IGFjdGl2ZVRhc2tzQ291bnQgPSBnZXRBY3RpdmVUYXNrc0NvdW50KCk7XHJcblx0Y29uc3QgaXRlbXNGb3JtID0gYWN0aXZlVGFza3NDb3VudCA9PT0gMSA/ICdpdGVtJyA6ICdpdGVtcyc7XHJcblx0dG9kb0NvdW50ZXIuaW5uZXJUZXh0ID0gYCR7YWN0aXZlVGFza3NDb3VudH0gJHtpdGVtc0Zvcm19IGxlZnRgO1xyXG5cdHJldHVybiBhY3RpdmVUYXNrc0NvdW50O1xyXG59O1xyXG5cclxuZXhwb3J0IHtcclxuXHRzZXRUaGVtZSxcclxuXHRhZGRUYXNrVG9MaXN0LFxyXG5cdGluZGljYXRlQWN0aXZlRmlsdGVyLFxyXG5cdGZpbHRlckxpc3QsXHJcblx0aGlkZVNob3dUYXNrLFxyXG5cdHVwZGF0ZVRvZG9Db3VudGVyLFxyXG5cdGdldFRhc2tQb3NpdGlvbixcclxuXHR0YXNrUmVvcmRlcixcclxufTtcclxuIiwiaW1wb3J0IHsgaGFuZGxlVGFza1NlbGVjdGlvbiwgaGFuZGxlVGFza0RlbGV0aW9uLCBoYW5kbGVUYXNrRHJhZ1N0YXJ0IH0gZnJvbSAnLi9ldmVudC1oYW5kbGVycyc7XHJcbmltcG9ydCB7IFRBU0tfU1RBVEVTIH0gZnJvbSAnLi90YXNrcyc7XHJcblxyXG5jb25zdCBJTUFHRV9TUkMgPSB7XHJcblx0Y2hlY2s6ICcuL2Rpc3QvaW1hZ2VzL2ljb24tY2hlY2suc3ZnJyxcclxuXHRjcm9zczogJy4vZGlzdC9pbWFnZXMvaWNvbi1jcm9zcy5zdmcnLFxyXG59O1xyXG5cclxuLy8gdGFzayBjcmVhdGlvblxyXG5jb25zdCBjcmVhdGVUYXNrRWxlbWVudCA9ICh7IGlkLCBjb250ZW50LCBzdGF0dXMgfSkgPT4ge1xyXG5cdGNvbnN0IG5ld1Rhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG5cdC8qIGF0dHJpYnV0ZSBzZXR0aW5ncyAqL1xyXG5cdG5ld1Rhc2suY2xhc3NMaXN0LmFkZCgndGFzaycpO1xyXG5cdG5ld1Rhc2suc2V0QXR0cmlidXRlKCdkYXRhLXN0YXR1cycsIHN0YXR1cyk7XHJcblx0bmV3VGFzay5zZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnLCBpZCk7XHJcblx0bmV3VGFzay5zZXRBdHRyaWJ1dGUoJ2RyYWdnYWJsZScsIHRydWUpO1xyXG5cdG5ld1Rhc2suYWRkRXZlbnRMaXN0ZW5lcignZHJhZ3N0YXJ0JywgaGFuZGxlVGFza0RyYWdTdGFydCk7XHJcblx0LyogY3JlYXRlIHRhc2sgZWxlbWVudHMuLi4gKi9cclxuXHRjb25zdCBjaGVja2JveEJ1dHRvbiA9IGNyZWF0ZUNoZWNrYm94QnV0dG9uKGlkLCBzdGF0dXMpO1xyXG5cdGNvbnN0IHRhc2tMYWJlbCA9IGNyZWF0ZVRhc2tMYWJlbChpZCwgY29udGVudCk7XHJcblx0Y29uc3QgZGVsZXRlQnV0dG9uID0gY3JlYXRlRGVsZXRlVGFza0J1dHRvbihpZCk7XHJcblx0Y29uc3QgbW92ZUNvbnRyb2xzID0gY3JlYXRlTW92ZUNvbnRyb2xzKCk7XHJcblx0LyogYW5kIGFwcGVuZCB0aGVtIHRvIHRhc2sgKi9cclxuXHRuZXdUYXNrLmFwcGVuZENoaWxkKGNoZWNrYm94QnV0dG9uKTtcclxuXHRuZXdUYXNrLmFwcGVuZENoaWxkKHRhc2tMYWJlbCk7XHJcblx0bmV3VGFzay5hcHBlbmRDaGlsZChkZWxldGVCdXR0b24pO1xyXG5cdG5ld1Rhc2suYXBwZW5kQ2hpbGQobW92ZUNvbnRyb2xzKTtcclxuXHRyZXR1cm4gbmV3VGFzaztcclxufTtcclxuXHJcbmNvbnN0IGNyZWF0ZUNoZWNrYm94QnV0dG9uID0gKHRhc2tJZCwgc3RhdHVzKSA9PiB7XHJcblx0Y29uc3QgY2hlY2tib3hCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuXHQvKiBjaGVjayBzdGF0dXMgdG8gc2VlIGlmIGJ1dHRvbiBzaG91bGQgYmUgdGFnZ2VkIGFzIGNoZWNrZWQgKi9cclxuXHRjb25zdCBpc0NoZWNrZWQgPSBzdGF0dXMgPT09IFRBU0tfU1RBVEVTLmNvbXBsZXRlZCA/IHRydWUgOiBmYWxzZTtcclxuXHQvKiBhdHRyaWJ1dGUgc2V0dGluZ3MgKi9cclxuXHRjaGVja2JveEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdjaGVjay1idXR0b24nKTtcclxuXHRjaGVja2JveEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnY2hlY2tib3gnKTtcclxuXHRjaGVja2JveEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWxsZWRieScsIHRhc2tJZCk7XHJcblx0Y2hlY2tib3hCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWNoZWNrZWQnLCBpc0NoZWNrZWQpO1xyXG5cdC8qIGV2ZW50IGxpc3RlbmVyICovXHJcblx0Y2hlY2tib3hCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVUYXNrU2VsZWN0aW9uKTtcclxuXHQvKiBjaGVjayBpY29uICovXHJcblx0Y29uc3QgY2hlY2tJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcblx0Y2hlY2tJY29uLnNyYyA9IElNQUdFX1NSQy5jaGVjaztcclxuXHRjaGVja0ljb24uYWx0ID0gJyc7XHJcblx0Y2hlY2tib3hCdXR0b24uYXBwZW5kQ2hpbGQoY2hlY2tJY29uKTtcclxuXHRyZXR1cm4gY2hlY2tib3hCdXR0b247XHJcbn07XHJcblxyXG5jb25zdCBjcmVhdGVUYXNrTGFiZWwgPSAodGFza0lkLCB0YXNrVGV4dCkgPT4ge1xyXG5cdGNvbnN0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG5cdGxhYmVsLmNsYXNzTGlzdC5hZGQoJ3Rhc2tfX2xhYmVsJyk7XHJcblx0bGFiZWwuaWQgPSB0YXNrSWQ7XHJcblx0bGFiZWwuaW5uZXJUZXh0ID0gdGFza1RleHQ7XHJcblx0cmV0dXJuIGxhYmVsO1xyXG59O1xyXG5cclxuY29uc3QgY3JlYXRlRGVsZXRlVGFza0J1dHRvbiA9IHRhc2tJZCA9PiB7XHJcblx0LyogZGVsZXRlIGJ1dHRvbiAqL1xyXG5cdGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG5cdC8qIGF0dHJ1YnV0ZSBzZXR0aW5ncyAqL1xyXG5cdGRlbGV0ZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCd0YXNrX19kZWxldGUtYnV0dG9uJyk7XHJcblx0ZGVsZXRlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScsIHRhc2tJZCk7XHJcblx0LyogZXZlbnQgbGlzdGVuZXIgKi9cclxuXHRkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVUYXNrRGVsZXRpb24pO1xyXG5cdC8qIGhpZGRlbiBkZWxldGUgdGV4dCAqL1xyXG5cdGNvbnN0IGRlbGV0ZVRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcblx0ZGVsZXRlVGV4dC5jbGFzc0xpc3QuYWRkKCd2aXN1YWxseS1oaWRkZW4nKTtcclxuXHRkZWxldGVUZXh0LmlubmVyVGV4dCA9ICdEZWxldGUnO1xyXG5cdC8qIGNyb3NzIGljb24gKi9cclxuXHRjb25zdCBkZWxldGVJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cdGRlbGV0ZUltYWdlLnNyYyA9IElNQUdFX1NSQy5jcm9zcztcclxuXHRkZWxldGVJbWFnZS5hbHQgPSAnJztcclxuXHQvKiBhcHBlbmRpbmcgdGV4dCBhbmQgaW1hZ2UgdG8gYnV0dG9uICovXHJcblx0ZGVsZXRlQnV0dG9uLmFwcGVuZENoaWxkKGRlbGV0ZVRleHQpO1xyXG5cdGRlbGV0ZUJ1dHRvbi5hcHBlbmRDaGlsZChkZWxldGVJbWFnZSk7XHJcblx0cmV0dXJuIGRlbGV0ZUJ1dHRvbjtcclxufTtcclxuXHJcbmNvbnN0IGNyZWF0ZU1vdmVDb250cm9scyA9IHRhc2tJZCA9PiB7XHJcblx0Y29uc3QgY29udHJvbHNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRjb250cm9sc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0YXNrX19tb3ZlLWNvbnRyb2xzJyk7XHJcblx0LyogY3JlYXRpbmcgYnV0dG9ucyAqL1xyXG5cdGNvbnN0IG1vdmVVcEJ1dHRvbiA9IGNyZWF0ZU1vdmVCdXR0b24odGFza0lkLCAndXAnKTtcclxuXHRjb25zdCBtb3ZlRG93bkJ1dHRvbiA9IGNyZWF0ZU1vdmVCdXR0b24odGFza0lkLCAnZG93bicpO1xyXG5cdC8qIGFwcGVuZGluZyBidXR0b25zICovXHJcblx0Y29udHJvbHNDb250YWluZXIuYXBwZW5kQ2hpbGQobW92ZVVwQnV0dG9uKTtcclxuXHRjb250cm9sc0NvbnRhaW5lci5hcHBlbmRDaGlsZChtb3ZlRG93bkJ1dHRvbik7XHJcblx0cmV0dXJuIGNvbnRyb2xzQ29udGFpbmVyO1xyXG59O1xyXG5cclxuY29uc3QgY3JlYXRlTW92ZUJ1dHRvbiA9ICh0YXNrSWQsIGRpcmVjdGlvbiA9ICdkb3duJykgPT4ge1xyXG5cdGNvbnN0IG1vdmVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuXHRtb3ZlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ21vdmUtYnV0dG9uJyk7XHJcblx0bW92ZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknLCB0YXNrSWQpO1xyXG5cdG1vdmVCdXR0b24uc2V0QXR0cmlidXRlKCdkYXRhLWRpcmVjdGlvbicsIGRpcmVjdGlvbik7XHJcblx0LyogaGlkZGVuIHRleHQgKi9cclxuXHRjb25zdCBtb3ZlVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuXHRtb3ZlVGV4dC5jbGFzc0xpc3QuYWRkKCd2aXN1YWxseS1oaWRkZW4nKTtcclxuXHRtb3ZlVGV4dC5pbm5lclRleHQgPSBgTW92ZSB0YXNrICR7ZGlyZWN0aW9ufWA7XHJcblx0LyogaWNvbiAqL1xyXG5cdGNvbnN0IGJ1dHRvbkljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJyk7XHJcblx0YnV0dG9uSWNvbi5jbGFzc0xpc3QuYWRkKCd0aScsIGB0aS1jaGV2cm9uLSR7ZGlyZWN0aW9ufWApO1xyXG5cdC8qIGFwcGVuZGluZyBlbGVtZW50cyB0byBidXR0b24gKi9cclxuXHRtb3ZlQnV0dG9uLmFwcGVuZENoaWxkKG1vdmVUZXh0KTtcclxuXHRtb3ZlQnV0dG9uLmFwcGVuZENoaWxkKGJ1dHRvbkljb24pO1xyXG5cdHJldHVybiBtb3ZlQnV0dG9uO1xyXG59O1xyXG5cclxuZXhwb3J0IHsgY3JlYXRlVGFza0VsZW1lbnQsIGNyZWF0ZUNoZWNrYm94QnV0dG9uLCBjcmVhdGVUYXNrTGFiZWwsIGNyZWF0ZURlbGV0ZVRhc2tCdXR0b24gfTtcclxuIiwiY29uc3QgdGhlbWVUb2dnbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGhlbWUtdG9nZ2xlJyk7XHJcbmNvbnN0IHRvZG9MaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvZG8tbGlzdCcpO1xyXG5jb25zdCB0b2RvRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RvLWZvcm0nKTtcclxuY29uc3QgdG9kb0Zvcm1JbnB1dCA9IHRvZG9Gb3JtLnF1ZXJ5U2VsZWN0b3IoJy50b2RvLWZvcm1fX2lucHV0Jyk7XHJcbmNvbnN0IHRvZG9Gb3JtU3VibWl0ID0gdG9kb0Zvcm0ucXVlcnlTZWxlY3RvcignYnV0dG9uW3R5cGU9c3VibWl0XScpO1xyXG5jb25zdCBmaWx0ZXJCdG5zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZpbHRlci1idXR0b24nKTtcclxuY29uc3QgY2xlYXJDb21wbGV0ZWRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2xlYXItYnV0dG9uJyk7XHJcbmNvbnN0IHRvZG9Db3VudGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RvZG8tY291bnRlcicpO1xyXG5cclxuZXhwb3J0IHsgdGhlbWVUb2dnbGUsIHRvZG9MaXN0LCB0b2RvRm9ybSwgdG9kb0Zvcm1JbnB1dCwgdG9kb0Zvcm1TdWJtaXQsIGZpbHRlckJ0bnMsIGNsZWFyQ29tcGxldGVkQnRuLCB0b2RvQ291bnRlciB9O1xyXG4iLCJpbXBvcnQgeyBjaGFuZ2VDb2xvclRoZW1lIH0gZnJvbSAnLi90aGVtZSc7XHJcbmltcG9ydCB7IGlzQmxhbmsgfSBmcm9tICcuL2hlbHBlcnMnO1xyXG5pbXBvcnQge1xyXG5cdGFkZFRhc2tUb0xpc3QsXHJcblx0ZmlsdGVyTGlzdCxcclxuXHRnZXRUYXNrUG9zaXRpb24sXHJcblx0aGlkZVNob3dUYXNrLFxyXG5cdGluZGljYXRlQWN0aXZlRmlsdGVyLFxyXG5cdHRhc2tSZW9yZGVyLFxyXG5cdHVwZGF0ZVRvZG9Db3VudGVyLFxyXG59IGZyb20gJy4vZG9tLXVwZGF0ZXMnO1xyXG5pbXBvcnQge1xyXG5cdGFkZFRhc2ssXHJcblx0Y2hhbmdlU3RhdHVzLFxyXG5cdGZpbmRUYXNrT25Qb3NpdGlvbixcclxuXHRpbnNlcnRUYXNrQWZ0ZXIsXHJcblx0aW5zZXJ0VGFza0JlZm9yZSxcclxuXHRyZW1vdmVUYXNrLFxyXG5cdFRBU0tfU1RBVEVTLFxyXG59IGZyb20gJy4vdGFza3MnO1xyXG5pbXBvcnQgeyB0aGVtZVRvZ2dsZSwgdG9kb0Zvcm0sIHRvZG9Gb3JtSW5wdXQsIHRvZG9MaXN0IH0gZnJvbSAnLi9lbGVtZW50cyc7XHJcbmltcG9ydCB7IHNldEN1cnJlbnRGaWx0ZXIgfSBmcm9tICcuL2ZpbHRlci1zdGF0ZSc7XHJcblxyXG4vKiB0aGVtZSBoYW5kbGluZyAqL1xyXG5jb25zdCBoYW5kbGVUaGVtZVRvZ2dsZSA9IGUgPT4ge1xyXG5cdGNvbnN0IGN1cnJlbnRUaGVtZSA9IHRoZW1lVG9nZ2xlLmRhdGFzZXQudGhlbWU7XHJcblx0Y29uc3QgbmV3VGhlbWUgPSBjdXJyZW50VGhlbWUgPT09ICdsaWdodCcgPyAnZGFyaycgOiAnbGlnaHQnO1xyXG5cdGNoYW5nZUNvbG9yVGhlbWUobmV3VGhlbWUpO1xyXG5cdHJldHVybiBuZXdUaGVtZTtcclxufTtcclxuXHJcbi8qIGZvcm0gaGFuZGxpbmcgKi9cclxuY29uc3QgaGFuZGxlRm9ybVN1Ym1pc3Npb24gPSBlID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0Y29uc3QgaW5wdXRUZXh0ID0gdG9kb0Zvcm1JbnB1dC52YWx1ZTtcclxuXHRpZiAoIWlzQmxhbmsoaW5wdXRUZXh0KSkge1xyXG5cdFx0dG9kb0Zvcm0uY2xhc3NMaXN0LnJlbW92ZSgnZXJyb3InKTtcclxuXHRcdC8qIGFkZCB0YXNrIGVuZCBlbGVtZW50ICovXHJcblx0XHRjb25zdCBuZXdUYXNrID0gYWRkVGFzayhpbnB1dFRleHQpO1xyXG5cdFx0YWRkVGFza1RvTGlzdChuZXdUYXNrKTtcclxuXHRcdHVwZGF0ZVRvZG9Db3VudGVyKCk7XHJcblx0XHQvKiBjbGVhciBpbnB1dCAqL1xyXG5cdFx0dG9kb0Zvcm1JbnB1dC52YWx1ZSA9ICcnO1xyXG5cdH0gZWxzZSB7XHJcblx0XHR0b2RvRm9ybS5jbGFzc0xpc3QuYWRkKCdlcnJvcicpO1xyXG5cdH1cclxufTtcclxuXHJcbi8qIHRhc2sgaGFuZGxpbmcgKi9cclxuY29uc3QgaGFuZGxlVGFza1NlbGVjdGlvbiA9IGUgPT4ge1xyXG5cdGNvbnN0IGJ1dHRvbiA9IGUudGFyZ2V0O1xyXG5cdGNvbnN0IGlzQ2hlY2tlZCA9IGJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2FyaWEtY2hlY2tlZCcpID09PSAndHJ1ZScgPyB0cnVlIDogZmFsc2U7XHJcblx0Y29uc3QgdGFza05ld1N0YXR1cyA9ICFpc0NoZWNrZWQgPyBUQVNLX1NUQVRFUy5jb21wbGV0ZWQgOiBUQVNLX1NUQVRFUy5hY3RpdmU7XHJcblx0YnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1jaGVja2VkJywgIWlzQ2hlY2tlZCk7XHJcblx0Y29uc3QgcGFyZW50VGFzayA9IGJ1dHRvbi5jbG9zZXN0KCcudGFzaycpO1xyXG5cdGNvbnN0IHRhc2tJZCA9IHBhcmVudFRhc2suZGF0YXNldC5pZDtcclxuXHRwYXJlbnRUYXNrLmRhdGFzZXQuc3RhdHVzID0gdGFza05ld1N0YXR1cztcclxuXHRjaGFuZ2VTdGF0dXModGFza0lkLCB0YXNrTmV3U3RhdHVzKTtcclxuXHRoaWRlU2hvd1Rhc2socGFyZW50VGFzayk7XHJcblx0dXBkYXRlVG9kb0NvdW50ZXIoKTtcclxufTtcclxuXHJcbmNvbnN0IGhhbmRsZVRhc2tEZWxldGlvbiA9IGUgPT4ge1xyXG5cdGNvbnN0IGRlbGV0ZUJ0biA9IGUudGFyZ2V0O1xyXG5cdGNvbnN0IHBhcmVudFRhc2sgPSBkZWxldGVCdG4uY2xvc2VzdCgnLnRhc2snKTtcclxuXHRjb25zdCB0YXNrSWQgPSBwYXJlbnRUYXNrLmRhdGFzZXQuaWQ7XHJcblx0cmVtb3ZlVGFzayh0YXNrSWQpO1xyXG5cdHBhcmVudFRhc2sucmVtb3ZlKCk7XHJcblx0dXBkYXRlVG9kb0NvdW50ZXIoKTtcclxufTtcclxuXHJcbi8qIGFjdGlvbiBidXR0b25zIGhhbmRsaW5nICovXHJcbmNvbnN0IGhhbmRsZUZpbHRlckJ1dHRvbiA9IGUgPT4ge1xyXG5cdGNvbnN0IGZpbHRlciA9IGUudGFyZ2V0LmRhdGFzZXQuZmlsdGVyO1xyXG5cdHNldEN1cnJlbnRGaWx0ZXIoZmlsdGVyKTtcclxuXHRpbmRpY2F0ZUFjdGl2ZUZpbHRlcigpO1xyXG5cdGZpbHRlckxpc3QoKTtcclxufTtcclxuXHJcbmNvbnN0IGhhbmRsZUNsZWFyQ29tcGxldGVkQnV0dG9uID0gZSA9PiB7XHJcblx0Y29uc3QgYWxsVGFza3MgPSB0b2RvTGlzdC5xdWVyeVNlbGVjdG9yQWxsKCcudGFzaycpO1xyXG5cdGZvciAoY29uc3QgdGFzayBvZiBhbGxUYXNrcykge1xyXG5cdFx0aWYgKHRhc2suZGF0YXNldC5zdGF0dXMgPT09IFRBU0tfU1RBVEVTLmNvbXBsZXRlZCkge1xyXG5cdFx0XHRyZW1vdmVUYXNrKHRhc2suZGF0YXNldC5pZCk7XHJcblx0XHRcdHRhc2sucmVtb3ZlKCk7XHJcblx0XHR9XHJcblx0fVxyXG5cdHVwZGF0ZVRvZG9Db3VudGVyKCk7XHJcbn07XHJcblxyXG5jb25zdCBoYW5kbGVUYXNrRHJhZ1N0YXJ0ID0gZSA9PiB7XHJcblx0ZS5kYXRhVHJhbnNmZXIuc2V0RGF0YSgndGV4dC9wbGFpbicsIGUudGFyZ2V0LmRhdGFzZXQuaWQpO1xyXG59O1xyXG5cclxuY29uc3QgaGFuZGxlRHJhZ092ZXIgPSBlID0+IHtcclxuXHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0ZS5kYXRhVHJhbnNmZXIuZHJvcEVmZmVjdCA9ICdtb3ZlJztcclxufTtcclxuXHJcbmNvbnN0IGhhbmRsZVRhc2tEcm9wID0gZSA9PiB7XHJcblx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdGNvbnN0IG1vdXNlWSA9IGUuY2xpZW50WTtcclxuXHRjb25zdCBkcmFnZ2VkVGFza0lkID0gZS5kYXRhVHJhbnNmZXIuZ2V0RGF0YSgndGV4dC9wbGFpbicpO1xyXG5cdGNvbnN0IHsgaWQ6IHJlbGF0aXZlVGFza0lkLCBjb25zdHJhaW50cyB9ID0gZmluZFRhc2tPblBvc2l0aW9uKG1vdXNlWSk7XHJcblx0aWYgKGRyYWdnZWRUYXNrSWQgPT09IHJlbGF0aXZlVGFza0lkKSByZXR1cm47XHJcblxyXG5cdC8qIGNoZWNrIGlmIHRoZSBtb3VzZSBpcyBpbiB0aGUgdXBwZXIgb3IgbG93ZXIgcGFydCBvZiBmb3VuZCB0YXNrO1xyXG4gIC0xIGlzIGZvciB1cHBlciBwYXJ0IGFuZCAxIGlzIGZvciBsb3dlciBwYXJ0ICovXHJcblx0Y29uc3QgaW5zZXJ0RGlyZWN0aW9uID0gbW91c2VZIDwgKGNvbnN0cmFpbnRzLnN0YXJ0ICsgY29uc3RyYWludHMuZW5kKSAvIDIgPyAtMSA6IDE7XHJcblx0dGFza1Jlb3JkZXIocmVsYXRpdmVUYXNrSWQsIGRyYWdnZWRUYXNrSWQsIGluc2VydERpcmVjdGlvbik7XHJcblx0aWYgKGluc2VydERpcmVjdGlvbiA9PT0gLTEpIGluc2VydFRhc2tCZWZvcmUocmVsYXRpdmVUYXNrSWQsIGRyYWdnZWRUYXNrSWQpO1xyXG5cdGVsc2UgaW5zZXJ0VGFza0FmdGVyKHJlbGF0aXZlVGFza0lkLCBkcmFnZ2VkVGFza0lkKTtcclxufTtcclxuXHJcbmV4cG9ydCB7XHJcblx0aGFuZGxlVGhlbWVUb2dnbGUsXHJcblx0aGFuZGxlRm9ybVN1Ym1pc3Npb24sXHJcblx0aGFuZGxlVGFza1NlbGVjdGlvbixcclxuXHRoYW5kbGVUYXNrRGVsZXRpb24sXHJcblx0aGFuZGxlRmlsdGVyQnV0dG9uLFxyXG5cdGhhbmRsZUNsZWFyQ29tcGxldGVkQnV0dG9uLFxyXG5cdGhhbmRsZVRhc2tEcmFnU3RhcnQsXHJcblx0aGFuZGxlRHJhZ092ZXIsXHJcblx0aGFuZGxlVGFza0Ryb3AsXHJcbn07XHJcbiIsImNvbnN0IEZJTFRFUl9TVEFURVMgPSB7XHJcblx0ZGVmYXVsdDogJ2FsbCcsXHJcblx0YWN0aXZlOiAnYWN0aXZlJyxcclxuXHRjb21wbGV0ZWQ6ICdjb21wbGV0ZWQnLFxyXG59O1xyXG5sZXQgY3VycmVudEZpbHRlciA9IEZJTFRFUl9TVEFURVMuZGVmYXVsdDtcclxuXHJcbmNvbnN0IHNldEN1cnJlbnRGaWx0ZXIgPSAoZmlsdGVyID0gRklMVEVSX1NUQVRFUy5kZWZhdWx0KSA9PiAoY3VycmVudEZpbHRlciA9IGZpbHRlcik7XHJcblxyXG5jb25zdCBnZXRDdXJyZW50RmlsdGVyID0gKCkgPT4gY3VycmVudEZpbHRlcjtcclxuXHJcbmV4cG9ydCB7IHNldEN1cnJlbnRGaWx0ZXIsIGdldEN1cnJlbnRGaWx0ZXIsIEZJTFRFUl9TVEFURVMgfTtcclxuIiwiY29uc3QgaXNCbGFuayA9IHZhbHVlID0+IHZhbHVlID09PSAnJztcclxuXHJcbmV4cG9ydCB7IGlzQmxhbmsgfTtcclxuIiwiaW1wb3J0IHtcclxuXHRjbGVhckNvbXBsZXRlZEJ0bixcclxuXHRmaWx0ZXJCdG5zLFxyXG5cdHRoZW1lVG9nZ2xlLFxyXG5cdHRvZG9Gb3JtLFxyXG5cdHRvZG9Gb3JtSW5wdXQsXHJcblx0dG9kb0Zvcm1TdWJtaXQsXHJcblx0dG9kb0xpc3QsXHJcbn0gZnJvbSAnLi9lbGVtZW50cyc7XHJcbmltcG9ydCB7IGxvYWRUaGVtZSB9IGZyb20gJy4vdGhlbWUnO1xyXG5pbXBvcnQgeyBsb2FkVGFza3MgfSBmcm9tICcuL3Rhc2tzJztcclxuaW1wb3J0IHtcclxuXHRoYW5kbGVUaGVtZVRvZ2dsZSxcclxuXHRoYW5kbGVGb3JtU3VibWlzc2lvbixcclxuXHRoYW5kbGVGaWx0ZXJCdXR0b24sXHJcblx0aGFuZGxlQ2xlYXJDb21wbGV0ZWRCdXR0b24sXHJcblx0aGFuZGxlRHJhZ092ZXIsXHJcblx0aGFuZGxlVGFza0Ryb3AsXHJcbn0gZnJvbSAnLi9ldmVudC1oYW5kbGVycyc7XHJcblxyXG50aGVtZVRvZ2dsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZVRoZW1lVG9nZ2xlKTtcclxudG9kb0Zvcm1TdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVGb3JtU3VibWlzc2lvbik7XHJcbnRvZG9Gb3JtSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsIGUgPT4gdG9kb0Zvcm0uY2xhc3NMaXN0LnJlbW92ZSgnZXJyb3InKSk7XHJcbmZpbHRlckJ0bnMuZm9yRWFjaChidG4gPT4gYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlRmlsdGVyQnV0dG9uKSk7XHJcbmNsZWFyQ29tcGxldGVkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQ2xlYXJDb21wbGV0ZWRCdXR0b24pO1xyXG50b2RvTGlzdC5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIGhhbmRsZURyYWdPdmVyKTtcclxudG9kb0xpc3QuYWRkRXZlbnRMaXN0ZW5lcignZHJvcCcsIGhhbmRsZVRhc2tEcm9wKTtcclxuXHJcbmxvYWRUaGVtZSgpO1xyXG5sb2FkVGFza3MoKTtcclxuIiwiaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCc7XHJcbmltcG9ydCB7IGFkZFRhc2tUb0xpc3QsIGdldFRhc2tQb3NpdGlvbiwgdXBkYXRlVG9kb0NvdW50ZXIgfSBmcm9tICcuL2RvbS11cGRhdGVzJztcclxuaW1wb3J0IHsgdG9kb0xpc3QgfSBmcm9tICcuL2VsZW1lbnRzJztcclxuXHJcbmNvbnN0IFRBU0tfU1RBVEVTID0ge1xyXG5cdGFjdGl2ZTogJ2FjdGl2ZScsXHJcblx0Y29tcGxldGVkOiAnY29tcGxldGVkJyxcclxufTtcclxubGV0IHRhc2tzID0gW107XHJcblxyXG5jb25zdCBhZGRUYXNrID0gKGNvbnRlbnQsIHN0YXR1cyA9IFRBU0tfU1RBVEVTLmFjdGl2ZSkgPT4ge1xyXG5cdGNvbnN0IHRhc2sgPSB7XHJcblx0XHRpZDogdXVpZHY0KCksXHJcblx0XHRjb250ZW50LFxyXG5cdFx0c3RhdHVzLFxyXG5cdH07XHJcblx0dGFza3MucHVzaCh0YXNrKTtcclxuXHRzYXZlVGFza3NUb0xvY2FsU3RvcmFnZSgpO1xyXG5cdHJldHVybiB0YXNrO1xyXG59O1xyXG5cclxuY29uc3QgcmVtb3ZlVGFzayA9IHRhc2tJZCA9PiB7XHJcblx0Y29uc3QgcmVtb3ZlZFRhc2sgPSB0YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PT0gdGFza0lkKSB8fCB7fTtcclxuXHR0YXNrcyA9IHRhc2tzLmZpbHRlcih0YXNrID0+IHRhc2suaWQgIT09IHRhc2tJZCk7XHJcblx0c2F2ZVRhc2tzVG9Mb2NhbFN0b3JhZ2UoKTtcclxuXHRyZXR1cm4gcmVtb3ZlZFRhc2s7XHJcbn07XHJcblxyXG5jb25zdCBjaGFuZ2VTdGF0dXMgPSAodGFza0lkLCBzdGF0dXMpID0+IHtcclxuXHRjb25zdCB0YXNrVG9DaGFuZ2UgPSB0YXNrcy5maW5kKHRhc2sgPT4gdGFzay5pZCA9PT0gdGFza0lkKSB8fCB7fTtcclxuXHRpZiAodGFza1RvQ2hhbmdlKSB7XHJcblx0XHR0YXNrVG9DaGFuZ2Uuc3RhdHVzID0gc3RhdHVzO1xyXG5cdFx0c2F2ZVRhc2tzVG9Mb2NhbFN0b3JhZ2UoKTtcclxuXHR9XHJcblx0cmV0dXJuIHRhc2tUb0NoYW5nZTtcclxufTtcclxuXHJcbmNvbnN0IGdldEFjdGl2ZVRhc2tzQ291bnQgPSAoKSA9PiB0YXNrcy5maWx0ZXIodGFzayA9PiB0YXNrLnN0YXR1cyA9PT0gVEFTS19TVEFURVMuYWN0aXZlKS5sZW5ndGg7XHJcblxyXG5jb25zdCBmaW5kVGFza09uUG9zaXRpb24gPSBwb3NZID0+IHtcclxuXHRmb3IgKGNvbnN0IHRhc2sgb2YgdGFza3MpIHtcclxuXHRcdGNvbnN0IHsgc3RhcnQsIGVuZCB9ID0gZ2V0VGFza1Bvc2l0aW9uKHRhc2suaWQpO1xyXG5cdFx0LyogcmV0dXJuIHRhc2sgaWQgd2l0aCB0aGUgdG9wIGFuZCBib3R0b20geSBjb29yZGluYXRlICovXHJcblx0XHRpZiAoc3RhcnQgPCBwb3NZICYmIHBvc1kgPD0gZW5kKSByZXR1cm4geyBpZDogdGFzay5pZCwgY29uc3RyYWludHM6IHsgc3RhcnQsIGVuZCB9IH07XHJcblx0fVxyXG5cdHJldHVybiBudWxsO1xyXG59O1xyXG5cclxuY29uc3QgaW5zZXJ0VGFza0JlZm9yZSA9IChyZWxhdGl2ZVRhc2tJZCwgaW5zZXJ0VGFza0lkKSA9PiB7XHJcblx0Y29uc3QgdGFza1RvTW92ZSA9IHJlbW92ZVRhc2soaW5zZXJ0VGFza0lkKTtcclxuXHRjb25zdCBpZHggPSBnZXRUYXNrSW5kZXgocmVsYXRpdmVUYXNrSWQpO1xyXG5cdHRhc2tzLnNwbGljZShNYXRoLm1heCgwLCBpZHgpLCAwLCB0YXNrVG9Nb3ZlKTtcclxuXHRzYXZlVGFza3NUb0xvY2FsU3RvcmFnZSgpO1xyXG5cdHJldHVybiBpZHg7XHJcbn07XHJcblxyXG5jb25zdCBpbnNlcnRUYXNrQWZ0ZXIgPSAocmVsYXRpdmVUYXNrSWQsIGluc2VydFRhc2tJZCkgPT4ge1xyXG5cdGNvbnN0IHRhc2tUb01vdmUgPSByZW1vdmVUYXNrKGluc2VydFRhc2tJZCk7XHJcblx0Y29uc3QgaWR4ID0gZ2V0VGFza0luZGV4KHJlbGF0aXZlVGFza0lkKTtcclxuXHR0YXNrcy5zcGxpY2UoTWF0aC5taW4odGFza3MubGVuZ3RoLCBpZHggKyAxKSwgMCwgdGFza1RvTW92ZSk7XHJcblx0c2F2ZVRhc2tzVG9Mb2NhbFN0b3JhZ2UoKTtcclxuXHRyZXR1cm4gaWR4ICsgMTtcclxufTtcclxuXHJcbmNvbnN0IGdldFRhc2tJbmRleCA9IHRhc2tJZCA9PiB0YXNrcy5maW5kSW5kZXgodGFzayA9PiB0YXNrLmlkID09PSB0YXNrSWQpO1xyXG5cclxuY29uc3QgbG9hZFRhc2tzID0gKCkgPT4ge1xyXG5cdGxvYWRUYXNrc0Zyb21TdG9yYWdlKCk7XHJcblx0LyogYWRkaW5nIHRhc2sgZWxlbWVudHMgdG8gRE9NICovXHJcblx0Zm9yIChsZXQgdGFzayBvZiB0YXNrcykgYWRkVGFza1RvTGlzdCh0YXNrKTtcclxuXHR1cGRhdGVUb2RvQ291bnRlcigpO1xyXG59O1xyXG5cclxuY29uc3QgbG9hZFRhc2tzRnJvbVN0b3JhZ2UgPSAoKSA9PiB7XHJcblx0Y29uc3Qgc3RvcmFnZVRhc2tzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGFza3MnKSk7XHJcblx0aWYgKHN0b3JhZ2VUYXNrcyAmJiBzdG9yYWdlVGFza3MubGVuZ3RoID4gMCkge1xyXG5cdFx0Zm9yIChsZXQgdGFzayBvZiBzdG9yYWdlVGFza3MpIHtcclxuXHRcdFx0dGFza3MucHVzaCh7IC4uLnRhc2sgfSk7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG5cclxuY29uc3Qgc2F2ZVRhc2tzVG9Mb2NhbFN0b3JhZ2UgPSAoKSA9PiB7XHJcblx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rhc2tzJywgSlNPTi5zdHJpbmdpZnkodGFza3MpKTtcclxufTtcclxuXHJcbmV4cG9ydCB7XHJcblx0VEFTS19TVEFURVMsXHJcblx0bG9hZFRhc2tzLFxyXG5cdGFkZFRhc2ssXHJcblx0cmVtb3ZlVGFzayxcclxuXHRjaGFuZ2VTdGF0dXMsXHJcblx0Z2V0QWN0aXZlVGFza3NDb3VudCxcclxuXHRmaW5kVGFza09uUG9zaXRpb24sXHJcblx0aW5zZXJ0VGFza0JlZm9yZSxcclxuXHRpbnNlcnRUYXNrQWZ0ZXIsXHJcbn07XHJcbiIsImltcG9ydCB7IHNldFRoZW1lIH0gZnJvbSAnLi9kb20tdXBkYXRlcyc7XHJcblxyXG5jb25zdCBsb2FkVGhlbWUgPSAoKSA9PiB7XHJcblx0Y29uc3QgdGhlbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGhlbWUnKTtcclxuXHRyZXR1cm4gdGhlbWUgPyBzZXRUaGVtZSh0aGVtZSkgOiBsb2FkUHJlZmVyZWRUaGVtZSgpO1xyXG59O1xyXG5cclxuY29uc3QgbG9hZFByZWZlcmVkVGhlbWUgPSAoKSA9PiB7XHJcblx0Y29uc3QgcHJlZmVyZWRUaGVtZSA9XHJcblx0XHR3aW5kb3cubWF0Y2hNZWRpYSAmJiB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXMgPyAnZGFyaycgOiAnbGlnaHQnO1xyXG5cdHJldHVybiBjaGFuZ2VDb2xvclRoZW1lKHByZWZlcmVkVGhlbWUpO1xyXG59O1xyXG5cclxuY29uc3QgY2hhbmdlQ29sb3JUaGVtZSA9IHRoZW1lID0+IHtcclxuXHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGhlbWUnLCB0aGVtZSk7XHJcblx0cmV0dXJuIHNldFRoZW1lKHRoZW1lKTtcclxufTtcclxuXHJcbmV4cG9ydCB7IGxvYWRUaGVtZSwgY2hhbmdlQ29sb3JUaGVtZSB9O1xyXG4iXX0=

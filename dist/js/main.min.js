!function r(a,o,i){function u(t,e){if(!o[t]){if(!a[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(s)return s(t,!0);throw(e=new Error("Cannot find module '"+t+"'")).code="MODULE_NOT_FOUND",e}n=o[t]={exports:{}},a[t][0].call(n.exports,function(e){return u(a[t][1][e]||e)},n,n.exports,r,a,o,i)}return o[t].exports}for(var s="function"==typeof require&&require,e=0;e<i.length;e++)u(i[e]);return u}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"NIL",{enumerable:!0,get:function(){return u.default}}),Object.defineProperty(n,"parse",{enumerable:!0,get:function(){return c.default}}),Object.defineProperty(n,"stringify",{enumerable:!0,get:function(){return l.default}}),Object.defineProperty(n,"v1",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(n,"v3",{enumerable:!0,get:function(){return a.default}}),Object.defineProperty(n,"v4",{enumerable:!0,get:function(){return o.default}}),Object.defineProperty(n,"v5",{enumerable:!0,get:function(){return i.default}}),Object.defineProperty(n,"validate",{enumerable:!0,get:function(){return d.default}}),Object.defineProperty(n,"version",{enumerable:!0,get:function(){return s.default}});var r=f(e("./v1.js")),a=f(e("./v3.js")),o=f(e("./v4.js")),i=f(e("./v5.js")),u=f(e("./nil.js")),s=f(e("./version.js")),d=f(e("./validate.js")),l=f(e("./stringify.js")),c=f(e("./parse.js"));function f(e){return e&&e.__esModule?e:{default:e}}},{"./nil.js":4,"./parse.js":5,"./stringify.js":9,"./v1.js":10,"./v3.js":11,"./v4.js":13,"./v5.js":14,"./validate.js":15,"./version.js":16}],2:[function(e,t,n){"use strict";function l(e){return 14+(e+64>>>9<<4)+1}function c(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function u(e,t,n,r,a,o){return c((t=c(c(t,e),c(r,o)))<<a|t>>>32-a,n)}function f(e,t,n,r,a,o,i){return u(t&n|~t&r,e,t,a,o,i)}function v(e,t,n,r,a,o,i){return u(t&r|n&~r,e,t,a,o,i)}function m(e,t,n,r,a,o,i){return u(t^n^r,e,t,a,o,i)}function p(e,t,n,r,a,o,i){return u(n^(t|~r),e,t,a,o,i)}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,n.default=function(t){if("string"==typeof t){var n=unescape(encodeURIComponent(t));t=new Uint8Array(n.length);for(let e=0;e<n.length;++e)t[e]=n.charCodeAt(e)}var r=function(t,e){t[e>>5]|=128<<e%32,t[l(e)-1]=e;let n=1732584193,r=-271733879,a=-1732584194,o=271733878;for(let e=0;e<t.length;e+=16){var i=n,u=r,s=a,d=o;n=f(n,r,a,o,t[e],7,-680876936),o=f(o,n,r,a,t[e+1],12,-389564586),a=f(a,o,n,r,t[e+2],17,606105819),r=f(r,a,o,n,t[e+3],22,-1044525330),n=f(n,r,a,o,t[e+4],7,-176418897),o=f(o,n,r,a,t[e+5],12,1200080426),a=f(a,o,n,r,t[e+6],17,-1473231341),r=f(r,a,o,n,t[e+7],22,-45705983),n=f(n,r,a,o,t[e+8],7,1770035416),o=f(o,n,r,a,t[e+9],12,-1958414417),a=f(a,o,n,r,t[e+10],17,-42063),r=f(r,a,o,n,t[e+11],22,-1990404162),n=f(n,r,a,o,t[e+12],7,1804603682),o=f(o,n,r,a,t[e+13],12,-40341101),a=f(a,o,n,r,t[e+14],17,-1502002290),r=f(r,a,o,n,t[e+15],22,1236535329),n=v(n,r,a,o,t[e+1],5,-165796510),o=v(o,n,r,a,t[e+6],9,-1069501632),a=v(a,o,n,r,t[e+11],14,643717713),r=v(r,a,o,n,t[e],20,-373897302),n=v(n,r,a,o,t[e+5],5,-701558691),o=v(o,n,r,a,t[e+10],9,38016083),a=v(a,o,n,r,t[e+15],14,-660478335),r=v(r,a,o,n,t[e+4],20,-405537848),n=v(n,r,a,o,t[e+9],5,568446438),o=v(o,n,r,a,t[e+14],9,-1019803690),a=v(a,o,n,r,t[e+3],14,-187363961),r=v(r,a,o,n,t[e+8],20,1163531501),n=v(n,r,a,o,t[e+13],5,-1444681467),o=v(o,n,r,a,t[e+2],9,-51403784),a=v(a,o,n,r,t[e+7],14,1735328473),r=v(r,a,o,n,t[e+12],20,-1926607734),n=m(n,r,a,o,t[e+5],4,-378558),o=m(o,n,r,a,t[e+8],11,-2022574463),a=m(a,o,n,r,t[e+11],16,1839030562),r=m(r,a,o,n,t[e+14],23,-35309556),n=m(n,r,a,o,t[e+1],4,-1530992060),o=m(o,n,r,a,t[e+4],11,1272893353),a=m(a,o,n,r,t[e+7],16,-155497632),r=m(r,a,o,n,t[e+10],23,-1094730640),n=m(n,r,a,o,t[e+13],4,681279174),o=m(o,n,r,a,t[e],11,-358537222),a=m(a,o,n,r,t[e+3],16,-722521979),r=m(r,a,o,n,t[e+6],23,76029189),n=m(n,r,a,o,t[e+9],4,-640364487),o=m(o,n,r,a,t[e+12],11,-421815835),a=m(a,o,n,r,t[e+15],16,530742520),r=m(r,a,o,n,t[e+2],23,-995338651),n=p(n,r,a,o,t[e],6,-198630844),o=p(o,n,r,a,t[e+7],10,1126891415),a=p(a,o,n,r,t[e+14],15,-1416354905),r=p(r,a,o,n,t[e+5],21,-57434055),n=p(n,r,a,o,t[e+12],6,1700485571),o=p(o,n,r,a,t[e+3],10,-1894986606),a=p(a,o,n,r,t[e+10],15,-1051523),r=p(r,a,o,n,t[e+1],21,-2054922799),n=p(n,r,a,o,t[e+8],6,1873313359),o=p(o,n,r,a,t[e+15],10,-30611744),a=p(a,o,n,r,t[e+6],15,-1560198380),r=p(r,a,o,n,t[e+13],21,1309151649),n=p(n,r,a,o,t[e+4],6,-145523070),o=p(o,n,r,a,t[e+11],10,-1120210379),a=p(a,o,n,r,t[e+2],15,718787259),r=p(r,a,o,n,t[e+9],21,-343485551),n=c(n,i),r=c(r,u),a=c(a,s),o=c(o,d)}return[n,r,a,o]}(function(t){if(0===t.length)return[];var n=8*t.length,r=new Uint32Array(l(n));for(let e=0;e<n;e+=8)r[e>>5]|=(255&t[e/8])<<e%32;return r}(t),8*t.length),a=[],o=32*r.length,i="0123456789abcdef";for(let e=0;e<o;e+=8){var u=r[e>>5]>>>e%32&255,u=parseInt(i.charAt(u>>>4&15)+i.charAt(15&u),16);a.push(u)}return a}},{}],3:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r="undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);n.default={randomUUID:r}},{}],4:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;n.default="00000000-0000-0000-0000-000000000000"},{}],5:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=(e=e("./validate.js"))&&e.__esModule?e:{default:e};n.default=function(e){var t,n;if((0,r.default)(e))return(n=new Uint8Array(16))[0]=(t=parseInt(e.slice(0,8),16))>>>24,n[1]=t>>>16&255,n[2]=t>>>8&255,n[3]=255&t,n[4]=(t=parseInt(e.slice(9,13),16))>>>8,n[5]=255&t,n[6]=(t=parseInt(e.slice(14,18),16))>>>8,n[7]=255&t,n[8]=(t=parseInt(e.slice(19,23),16))>>>8,n[9]=255&t,n[10]=(t=parseInt(e.slice(24,36),16))/1099511627776&255,n[11]=t/4294967296&255,n[12]=t>>>24&255,n[13]=t>>>16&255,n[14]=t>>>8&255,n[15]=255&t,n;throw TypeError("Invalid UUID")}},{"./validate.js":15}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;n.default=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i},{}],7:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if(!r&&!(r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(a)};let r;const a=new Uint8Array(16)},{}],8:[function(e,t,n){"use strict";function c(e,t){return e<<t|e>>>32-t}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,n.default=function(n){var u=[1518500249,1859775393,2400959708,3395469782],e=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof n){var t=unescape(encodeURIComponent(n));n=[];for(let e=0;e<t.length;++e)n.push(t.charCodeAt(e))}else Array.isArray(n)||(n=Array.prototype.slice.call(n));n.push(128);var r=n.length/4+2,a=Math.ceil(r/16),s=new Array(a);for(let t=0;t<a;++t){var o=new Uint32Array(16);for(let e=0;e<16;++e)o[e]=n[64*t+4*e]<<24|n[64*t+4*e+1]<<16|n[64*t+4*e+2]<<8|n[64*t+4*e+3];s[t]=o}s[a-1][14]=8*(n.length-1)/Math.pow(2,32),s[a-1][14]=Math.floor(s[a-1][14]),s[a-1][15]=8*(n.length-1)&4294967295;for(let i=0;i<a;++i){var d=new Uint32Array(80);for(let e=0;e<16;++e)d[e]=s[i][e];for(let e=16;e<80;++e)d[e]=c(d[e-3]^d[e-8]^d[e-14]^d[e-16],1);let t=e[0],n=e[1],r=e[2],a=e[3],o=e[4];for(let e=0;e<80;++e){var l=Math.floor(e/20),l=c(t,5)+function(e,t,n,r){switch(e){case 0:return t&n^~t&r;case 1:return t^n^r;case 2:return t&n^t&r^n&r;case 3:return t^n^r}}(l,n,r,a)+o+u[l]+d[e]>>>0;o=a,a=r,r=c(n,30)>>>0,n=t,t=l}e[0]=e[0]+t>>>0,e[1]=e[1]+n>>>0,e[2]=e[2]+r>>>0,e[3]=e[3]+a>>>0,e[4]=e[4]+o>>>0}return[e[0]>>24&255,e[0]>>16&255,e[0]>>8&255,255&e[0],e[1]>>24&255,e[1]>>16&255,e[1]>>8&255,255&e[1],e[2]>>24&255,e[2]>>16&255,e[2]>>8&255,255&e[2],e[3]>>24&255,e[3]>>16&255,e[3]>>8&255,255&e[3],e[4]>>24&255,e[4]>>16&255,e[4]>>8&255,255&e[4]]}},{}],9:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,n.unsafeStringify=o;var r=(e=e("./validate.js"))&&e.__esModule?e:{default:e};const a=[];for(let e=0;e<256;++e)a.push((e+256).toString(16).slice(1));function o(e,t=0){return(a[e[t+0]]+a[e[t+1]]+a[e[t+2]]+a[e[t+3]]+"-"+a[e[t+4]]+a[e[t+5]]+"-"+a[e[t+6]]+a[e[t+7]]+"-"+a[e[t+8]]+a[e[t+9]]+"-"+a[e[t+10]]+a[e[t+11]]+a[e[t+12]]+a[e[t+13]]+a[e[t+14]]+a[e[t+15]]).toLowerCase()}n.default=function(e,t=0){if(e=o(e,t),(0,r.default)(e))return e;throw TypeError("Stringified UUID is invalid")}},{"./validate.js":15}],10:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r,d=(r=e("./rng.js"))&&r.__esModule?r:{default:r},l=e("./stringify.js");let c,f,v=0,m=0;n.default=function(e,t,n){var r=t&&n||0,a=t||new Array(16);let o=(e=e||{}).node||c,i=void 0!==e.clockseq?e.clockseq:f,u=(null!=o&&null!=i||(n=e.random||(e.rng||d.default)(),null==o&&(o=c=[1|n[0],n[1],n[2],n[3],n[4],n[5]]),null==i&&(i=f=16383&(n[6]<<8|n[7]))),n=void 0!==e.msecs?e.msecs:Date.now(),void 0!==e.nsecs?e.nsecs:m+1);var s=n-v+(u-m)/1e4;if(s<0&&void 0===e.clockseq&&(i=i+1&16383),1e4<=(u=(s<0||n>v)&&void 0===e.nsecs?0:u))throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");v=n,m=u,f=i,s=(1e4*(268435455&(n+=122192928e5))+u)%4294967296,a[r++]=s>>>24&255,a[r++]=s>>>16&255,a[r++]=s>>>8&255,a[r++]=255&s,e=n/4294967296*1e4&268435455,a[r++]=e>>>8&255,a[r++]=255&e,a[r++]=e>>>24&15|16,a[r++]=e>>>16&255,a[r++]=i>>>8|128,a[r++]=255&i;for(let e=0;e<6;++e)a[r+e]=o[e];return t||(0,l.unsafeStringify)(a)}},{"./rng.js":7,"./stringify.js":9}],11:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=a(e("./v35.js")),e=a(e("./md5.js"));function a(e){return e&&e.__esModule?e:{default:e}}r=(0,r.default)("v3",48,e.default);n.default=r},{"./md5.js":2,"./v35.js":12}],12:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.URL=n.DNS=void 0,n.default=function(e,i,u){function t(e,t,n,r){var a;if("string"==typeof e&&(e=function(t){t=unescape(encodeURIComponent(t));var n=[];for(let e=0;e<t.length;++e)n.push(t.charCodeAt(e));return n}(e)),16!==(null==(a=t="string"==typeof t?(0,d.default)(t):t)?void 0:a.length))throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let o=new Uint8Array(16+e.length);if(o.set(t),o.set(e,t.length),(o=u(o))[6]=15&o[6]|i,o[8]=63&o[8]|128,n){r=r||0;for(let e=0;e<16;++e)n[r+e]=o[e];return n}return(0,s.unsafeStringify)(o)}try{t.name=e}catch(e){}return t.DNS=r,t.URL=a,t};var s=e("./stringify.js"),d=(e=e("./parse.js"))&&e.__esModule?e:{default:e};const r="6ba7b810-9dad-11d1-80b4-00c04fd430c8",a=(n.DNS=r,"6ba7b811-9dad-11d1-80b4-00c04fd430c8");n.URL=a},{"./parse.js":5,"./stringify.js":9}],13:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=r(e("./native.js")),o=r(e("./rng.js")),i=e("./stringify.js");function r(e){return e&&e.__esModule?e:{default:e}}n.default=function(e,t,n){if(a.default.randomUUID&&!t&&!e)return a.default.randomUUID();var r=(e=e||{}).random||(e.rng||o.default)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=r[e];return t}return(0,i.unsafeStringify)(r)}},{"./native.js":3,"./rng.js":7,"./stringify.js":9}],14:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=a(e("./v35.js")),e=a(e("./sha1.js"));function a(e){return e&&e.__esModule?e:{default:e}}r=(0,r.default)("v5",80,e.default);n.default=r},{"./sha1.js":8,"./v35.js":12}],15:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=(e=e("./regex.js"))&&e.__esModule?e:{default:e};n.default=function(e){return"string"==typeof e&&r.default.test(e)}},{"./regex.js":6}],16:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r=(e=e("./validate.js"))&&e.__esModule?e:{default:e};n.default=function(e){if((0,r.default)(e))return parseInt(e.slice(14,15),16);throw TypeError("Invalid UUID")}},{"./validate.js":15}],17:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.updateTodoCounter=n.taskReorder=n.setTheme=n.removeTaskElement=n.indicateActiveFilter=n.hideShowTask=n.getTaskPosition=n.filterList=n.addTaskToList=void 0;var r=e("./element-creators"),a=e("./elements"),o=e("./filter-state"),i=e("./tasks");function u(e,t){var n,r,a,o,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return r=!(n=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return n=e.done,e},e:function(e){r=!0,a=e},f:function(){try{n||null==i.return||i.return()}finally{if(r)throw a}}};if(Array.isArray(e)||(i=function(e,t){var n;if(e)return"string"==typeof e?s(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),o=0,{s:t=function(){},n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.setTheme=function(e){document.body.setAttribute("data-theme",e),a.themeToggle.dataset.theme=e;var t="Switch to ".concat("dark"===e?"light":"dark"," theme");return a.themeToggle.setAttribute("aria-label",t),e},n.addTaskToList=function(e){var t=(0,r.createTaskElement)(e);return l(t),a.todoList.appendChild(t),t.classList.add("task-add-animation"),t.addEventListener("animationend",function(){t.classList.remove("task-add-animation")},{once:!0}),t},n.removeTaskElement=function(e){e.classList.add("task-remove-animation"),e.addEventListener("animationend",function(){e.classList.remove("task-remove-animation"),e.remove()},{once:!0})};n.indicateActiveFilter=function(e){d();var t=(0,o.getCurrentFilter)();document.querySelectorAll(".filter-button[data-filter=".concat(t)).forEach(function(e){return e.classList.add("active")})};var d=function(){return a.filterBtns.forEach(function(e){return e.classList.remove("active")})},l=(n.filterList=function(){var e,t=(0,o.getCurrentFilter)(),n=u(a.todoList.querySelectorAll(".task"));try{for(n.s();!(e=n.n()).done;){var r=e.value;l(r)}}catch(e){n.e(e)}finally{n.f()}return t},function(e){var t=(0,o.getCurrentFilter)();return t===o.FILTER_STATES.default||e.dataset.status===t?e.classList.remove("hidden"):e.classList.add("hidden"),t});n.hideShowTask=l,n.getTaskPosition=function(e){var e=a.todoList.querySelector(".task[data-id='".concat(e,"']")),t=e.offsetTop;return{start:t,end:e.offsetHeight+t}},n.taskReorder=function(e,t,n){e=a.todoList.querySelector(".task[data-id='".concat(e,"']")),t=a.todoList.querySelector(".task[data-id='".concat(t,"']"));return e.insertAdjacentElement(-1===n?"beforebegin":"afterend",t)};n.updateTodoCounter=function(){var e=(0,i.getActiveTasksCount)(),t=1===e?"item":"items";return a.todoCounter.innerText="".concat(e," ").concat(t," left"),e}},{"./element-creators":18,"./elements":19,"./filter-state":21,"./tasks":24}],18:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createTaskLabel=n.createTaskElement=n.createDeleteTaskButton=n.createCheckboxButton=void 0;var o=e("./event-handlers"),r=e("./tasks"),a="./dist/images/icon-check.svg",i="./dist/images/icon-cross.svg",u=(n.createTaskElement=function(e){var t=e.id,n=e.content,e=e.status,r=document.createElement("li"),e=(r.classList.add("task"),r.setAttribute("data-status",e),r.setAttribute("data-id",t),r.setAttribute("draggable",!0),r.addEventListener("dragstart",o.handleTaskDragStart),u(t,e)),n=s(t,n),t=d(t),a=l();return r.appendChild(e),r.appendChild(n),r.appendChild(t),r.appendChild(a),r},function(e,t){var n=document.createElement("button"),t=t===r.TASK_STATES.completed,e=(n.classList.add("check-button"),n.setAttribute("role","checkbox"),n.setAttribute("aria-labelledby",e),n.setAttribute("aria-checked",t),n.addEventListener("click",o.handleTaskSelection),document.createElement("img"));return e.src=a,e.alt="",n.appendChild(e),n}),s=(n.createCheckboxButton=u,function(e,t){var n=document.createElement("p");return n.classList.add("task__label"),n.id=e,n.innerText=t,n}),d=(n.createTaskLabel=s,function(e){var t=document.createElement("button"),e=(t.classList.add("task__delete-button"),t.setAttribute("aria-describedby",e),t.addEventListener("click",o.handleTaskDeletion),document.createElement("span")),n=(e.classList.add("visually-hidden"),e.innerText="Delete",document.createElement("img"));return n.src=i,n.alt="",t.appendChild(e),t.appendChild(n),t}),l=(n.createDeleteTaskButton=d,function(e){var t=document.createElement("div"),n=(t.classList.add("task__move-controls"),c(e,"up")),e=c(e,"down");return t.appendChild(n),t.appendChild(e),t}),c=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"down",n=document.createElement("button"),e=(n.classList.add("move-button"),n.setAttribute("aria-describedby",e),n.setAttribute("data-direction",t),n.addEventListener("click","up"===t?o.handleMoveTaskUpButton:o.handleMoveTaskDownButton),document.createElement("span")),r=(e.classList.add("visually-hidden"),e.innerText="Move task ".concat(t),document.createElement("i"));return r.classList.add("ti","ti-chevron-".concat(t)),n.appendChild(e),n.appendChild(r),n}},{"./event-handlers":20,"./tasks":24}],19:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.todoList=n.todoFormSubmit=n.todoFormInput=n.todoForm=n.todoCounter=n.themeToggle=n.filterBtns=n.clearCompletedBtn=void 0;var r=document.querySelector(".theme-toggle"),r=(n.themeToggle=r,document.querySelector(".todo-list")),r=(n.todoList=r,document.querySelector(".todo-form")),a=(n.todoForm=r).querySelector(".todo-form__input"),a=(n.todoFormInput=a,r.querySelector("button[type=submit]")),r=(n.todoFormSubmit=a,document.querySelectorAll(".filter-button")),a=(n.filterBtns=r,document.querySelector(".clear-button")),r=(n.clearCompletedBtn=a,document.querySelector("#todo-counter"));n.todoCounter=r},{}],20:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.handleThemeToggle=n.handleTaskSelection=n.handleTaskDrop=n.handleTaskDragStart=n.handleTaskDeletion=n.handleMoveTaskUpButton=n.handleMoveTaskDownButton=n.handleFormSubmission=n.handleFilterButton=n.handleDragOver=n.handleClearCompletedButton=void 0;var r=e("./theme"),a=e("./helpers"),o=e("./dom-updates"),i=e("./tasks"),u=e("./elements"),s=e("./filter-state");function d(e,t){var n,r,a,o,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return r=!(n=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return n=e.done,e},e:function(e){r=!0,a=e},f:function(){try{n||null==i.return||i.return()}finally{if(r)throw a}}};if(Array.isArray(e)||(i=function(e,t){var n;if(e)return"string"==typeof e?l(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?l(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),o=0,{s:t=function(){},n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.handleThemeToggle=function(e){var t="light"===u.themeToggle.dataset.theme?"dark":"light";return(0,r.changeColorTheme)(t),t},n.handleFormSubmission=function(e){e.preventDefault();var e=u.todoFormInput.value;(0,a.isBlank)(e)?u.todoForm.classList.add("error"):(u.todoForm.classList.remove("error"),e=(0,i.addTask)(e),(0,o.addTaskToList)(e),(0,o.updateTodoCounter)(),u.todoFormInput.value="")},n.handleTaskSelection=function(e){var e=e.target,t="true"===e.getAttribute("aria-checked"),n=t?i.TASK_STATES.active:i.TASK_STATES.completed,t=(e.setAttribute("aria-checked",!t),e.closest(".task")),e=t.dataset.id;t.dataset.status=n,(0,i.changeStatus)(e,n),(0,o.hideShowTask)(t),(0,o.updateTodoCounter)()},n.handleTaskDeletion=function(e){var e=e.target.closest(".task"),t=e.dataset.id;(0,i.removeTask)(t),(0,o.removeTaskElement)(e),(0,o.updateTodoCounter)()},n.handleFilterButton=function(e){e=e.target.dataset.filter;(0,s.setCurrentFilter)(e),(0,o.indicateActiveFilter)(),(0,o.filterList)()},n.handleClearCompletedButton=function(e){var t,n=d(u.todoList.querySelectorAll(".task"));try{for(n.s();!(t=n.n()).done;){var r=t.value;r.dataset.status===i.TASK_STATES.completed&&((0,i.removeTask)(r.dataset.id),(0,o.removeTaskElement)(r))}}catch(e){n.e(e)}finally{n.f()}(0,o.updateTodoCounter)()},n.handleTaskDragStart=function(e){e.dataTransfer.setData("text/plain",e.target.dataset.id)},n.handleDragOver=function(e){e.preventDefault(),e.dataTransfer.dropEffect="move"},n.handleTaskDrop=function(e){e.preventDefault();var t=e.clientY,e=e.dataTransfer.getData("text/plain"),n=(0,i.findTaskOnPosition)(t),r=n.id,n=n.constraints;e!==r&&(t=t<(n.start+n.end)/2?-1:1,(0,o.taskReorder)(r,e,t),(-1==t?(0,i.insertTaskBefore):(0,i.insertTaskAfter))(r,e))},n.handleMoveTaskUpButton=function(e){var e=e.target.closest(".task").dataset.id,t=(0,i.getPreviousTask)(e).id;(0,o.taskReorder)(t,e,-1),(0,i.insertTaskBefore)(t,e)};n.handleMoveTaskDownButton=function(e){var e=e.target.closest(".task").dataset.id,t=(0,i.getNextTask)(e).id;(0,o.taskReorder)(t,e,1),(0,i.insertTaskAfter)(t,e)}},{"./dom-updates":17,"./elements":19,"./filter-state":21,"./helpers":22,"./tasks":24,"./theme":25}],21:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.setCurrentFilter=n.getCurrentFilter=n.FILTER_STATES=void 0;var r={default:"all",active:"active",completed:"completed"},a=(n.FILTER_STATES=r).default;n.setCurrentFilter=function(){return a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:r.default};n.getCurrentFilter=function(){return a}},{}],22:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.isBlank=void 0;n.isBlank=function(e){return""===e}},{}],23:[function(e,t,n){"use strict";var r=e("./elements"),a=e("./theme"),o=e("./tasks"),i=e("./event-handlers");r.themeToggle.addEventListener("click",i.handleThemeToggle),r.todoFormSubmit.addEventListener("click",i.handleFormSubmission),r.todoFormInput.addEventListener("focusin",function(e){return r.todoForm.classList.remove("error")}),r.filterBtns.forEach(function(e){return e.addEventListener("click",i.handleFilterButton)}),r.clearCompletedBtn.addEventListener("click",i.handleClearCompletedButton),r.todoList.addEventListener("dragover",i.handleDragOver),r.todoList.addEventListener("drop",i.handleTaskDrop),(0,a.loadTheme)(),(0,o.loadTasks)()},{"./elements":19,"./event-handlers":20,"./tasks":24,"./theme":25}],24:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.removeTask=n.loadTasks=n.insertTaskBefore=n.insertTaskAfter=n.getPreviousTask=n.getNextTask=n.getActiveTasksCount=n.findTaskOnPosition=n.changeStatus=n.addTask=n.TASK_STATES=void 0;var r=e("uuid"),u=e("./dom-updates");e("./elements");function o(t,e){var n,r=Object.keys(t);return Object.getOwnPropertySymbols&&(n=Object.getOwnPropertySymbols(t),e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),r.push.apply(r,n)),r}function a(r){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach(function(e){var t,n;t=r,n=a[e=e],e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(a,e))})}return r}function s(e,t){var n,r,a,o,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return r=!(n=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return n=e.done,e},e:function(e){r=!0,a=e},f:function(){try{n||null==i.return||i.return()}finally{if(r)throw a}}};if(Array.isArray(e)||(i=function(e,t){var n;if(e)return"string"==typeof e?d(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),o=0,{s:t=function(){},n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(t){var e=c.find(function(e){return e.id===t})||{};return c=c.filter(function(e){return e.id!==t}),m(),e}var l={active:"active",completed:"completed"},c=(n.TASK_STATES=l,[]),f=(n.addTask=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:l.active,e={id:(0,r.v4)(),content:e,status:t};return c.push(e),m(),e},n.removeTask=i,n.changeStatus=function(t,e){var n=c.find(function(e){return e.id===t})||{};return n&&(n.status=e,m()),n},n.getActiveTasksCount=function(){return c.filter(function(e){return e.status===l.active}).length},n.findTaskOnPosition=function(e){var t,n=s(c);try{for(n.s();!(t=n.n()).done;){var r=t.value,a=(0,u.getTaskPosition)(r.id),o=a.start,i=a.end;if(o<e&&e<=i)return{id:r.id,constraints:{start:o,end:i}}}}catch(e){n.e(e)}finally{n.f()}return null},n.insertTaskBefore=function(e,t){t=i(t),e=f(e);return c.splice(Math.max(0,e),0,t),m(),e},n.insertTaskAfter=function(e,t){t=i(t),e=f(e);return c.splice(Math.min(c.length,e+1),0,t),m(),e+1},function(t){return c.findIndex(function(e){return e.id===t})}),v=(n.getPreviousTask=function(e){e=f(e);return c[e-1]},n.getNextTask=function(e){e=f(e);return c[e+1]},n.loadTasks=function(){v();var e,t=s(c);try{for(t.s();!(e=t.n()).done;){var n=e.value;(0,u.addTaskToList)(n)}}catch(e){t.e(e)}finally{t.f()}(0,u.updateTodoCounter)()},function(){var e=JSON.parse(localStorage.getItem("tasks"));if(e&&0<e.length){var t,n=s(e);try{for(n.s();!(t=n.n()).done;){var r=t.value;c.push(a({},r))}}catch(e){n.e(e)}finally{n.f()}}}),m=function(){localStorage.setItem("tasks",JSON.stringify(c))}},{"./dom-updates":17,"./elements":19,uuid:1}],25:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.loadTheme=n.changeColorTheme=void 0;var r=e("./dom-updates"),a=(n.loadTheme=function(){var e=localStorage.getItem("theme");return e?(0,r.setTheme)(e):a()},function(){var e=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";return o(e)}),o=function(e){return localStorage.setItem("theme",e),(0,r.setTheme)(e)};n.changeColorTheme=o},{"./dom-updates":17}]},{},[23]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
